[main] INFO  o.o.c.config.CodegenConfigurator - 
VERBOSE MODE: ON. Additional debug options are injected
 - [debugOpenAPI] prints the OpenAPI specification as interpreted by the codegen
 - [debugModels] prints models passed to the template engine
 - [debugOperations] prints operations passed to the template engine
 - [debugSupportingFiles] prints additional data passed to the template engine
[main] INFO  o.o.codegen.DefaultGenerator - Generating with dryRun=false
[main] INFO  o.o.codegen.DefaultGenerator - OpenAPI Generator: csharp (client)
[main] INFO  o.o.codegen.DefaultGenerator - Generator 'csharp' is considered stable.
{
  "openapi" : "3.0.1",
  "info" : {
    "description" : "Derived by extending the OB OpenAPI Taxonomy 1.1.7",
    "title" : "SUPERNOVA Interoperation API 1.0 Data Model",
    "version" : "1.0"
  },
  "servers" : [ {
    "url" : "/"
  } ],
  "paths" : { },
  "components" : {
    "schemas" : {
      "Info" : {
        "description" : "...TODO...",
        "properties" : {
          "Name" : {
            "description" : "Name of current service exposed",
            "type" : "string"
          },
          "Source" : {
            "$ref" : "#/components/schemas/PlatformIdentifier"
          },
          "Description" : {
            "description" : "...TODO...",
            "type" : "string"
          },
          "Version" : {
            "description" : "...TODO...",
            "type" : "string"
          },
          "SupportedDocuments" : {
            "description" : "...TODO...",
            "items" : {
              "$ref" : "#/components/schemas/SupportedDocument"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "SupportedDocument" : {
        "description" : "Document supported",
        "properties" : {
          "Description" : {
            "type" : "string"
          },
          "DocumentType" : {
            "description" : "document type",
            "type" : "string",
            "x-ob-usate-tips" : "text/csv"
          }
        },
        "type" : "object"
      },
      "Device" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Device_1"
        }, {
          "description" : "State of a Province of the mailing or physical address.",
          "properties" : {
            "Locations" : {
              "items" : {
                "$ref" : "#/components/schemas/Location"
              },
              "type" : "array"
            }
          },
          "type" : "object"
        } ],
        "description" : "...TODO...",
        "type" : "object"
      },
      "PVArray" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/PVArray_1"
        }, {
          "description" : "State of a Province of the mailing or physical address.",
          "properties" : {
            "Locations" : {
              "items" : {
                "$ref" : "#/components/schemas/Location"
              },
              "type" : "array"
            }
          },
          "type" : "object"
        } ],
        "description" : "...TODO...",
        "type" : "object"
      },
      "PVString" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/PVString_1"
        }, {
          "description" : "State of a Province of the mailing or physical address.",
          "properties" : {
            "Locations" : {
              "items" : {
                "$ref" : "#/components/schemas/Location"
              },
              "type" : "array"
            }
          },
          "type" : "object"
        } ],
        "description" : "...TODO...",
        "type" : "object"
      },
      "PVSystem" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/PVString_1"
        }, {
          "description" : "State of a Province of the mailing or physical address.",
          "properties" : {
            "Locations" : {
              "items" : {
                "$ref" : "#/components/schemas/Location"
              },
              "type" : "array"
            }
          },
          "type" : "object"
        } ],
        "description" : "...TODO...",
        "type" : "object"
      },
      "Connection" : {
        "description" : "...TODO...",
        "properties" : {
          "ConnectionId" : {
            "$ref" : "#/components/schemas/ConnectionId"
          },
          "ConnectionType" : {
            "$ref" : "#/components/schemas/ConnectionType"
          },
          "FromDeviceId" : {
            "$ref" : "#/components/schemas/FromDeviceId"
          },
          "ToDeviceId" : {
            "$ref" : "#/components/schemas/ToDeviceId"
          }
        },
        "type" : "object"
      },
      "Document" : {
        "description" : "...TODO...",
        "properties" : {
          "DocumentId" : {
            "$ref" : "#/components/schemas/DocumentId"
          },
          "DocumentName" : {
            "$ref" : "#/components/schemas/DocumentName"
          },
          "DocumentType" : {
            "$ref" : "#/components/schemas/DocumentType"
          },
          "DocumentUrl" : {
            "$ref" : "#/components/schemas/DocumentUrl"
          },
          "DocumentDate" : {
            "$ref" : "#/components/schemas/DocumentDate"
          }
        },
        "type" : "object"
      },
      "ConnectionId" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "...TODO...",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-usage-tips" : "",
          "x-ob-item-type-group" : ""
        } ]
      },
      "ConnectionType" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "...TODO...",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-usage-tips" : "",
          "x-ob-item-type-group" : ""
        } ]
      },
      "FromDeviceId" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "...TODO...",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-usage-tips" : "",
          "x-ob-item-type-group" : ""
        } ]
      },
      "ToDeviceId" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "...TODO...",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-usage-tips" : "",
          "x-ob-item-type-group" : ""
        } ]
      },
      "DocumentId" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "...TODO...",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-usage-tips" : "",
          "x-ob-item-type-group" : ""
        } ]
      },
      "DocumentName" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "...TODO...",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-usage-tips" : "",
          "x-ob-item-type-group" : ""
        } ]
      },
      "DocumentType" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "...TODO...",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-usage-tips" : "",
          "x-ob-item-type-group" : ""
        } ]
      },
      "DocumentUrl" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "...TODO...",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-usage-tips" : "",
          "x-ob-item-type-group" : ""
        } ]
      },
      "DocumentDate" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "...TODO...",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-usage-tips" : "",
          "x-ob-item-type-group" : ""
        } ]
      },
      "GatewayHook" : {
        "properties" : {
          "Name" : {
            "nullable" : true,
            "type" : "string"
          },
          "Parameters" : {
            "additionalProperties" : {
              "type" : "string"
            },
            "nullable" : true,
            "type" : "object"
          }
        },
        "type" : "object"
      },
      "GatewayHookExecution" : {
        "properties" : {
          "Id" : {
            "format" : "uuid",
            "type" : "string"
          },
          "HookName" : {
            "type" : "string"
          },
          "Paramenters" : {
            "additionalProperties" : { },
            "nullable" : true,
            "type" : "object"
          },
          "DateTime" : {
            "format" : "date-time",
            "type" : "string"
          },
          "Status" : {
            "$ref" : "#/components/schemas/HookStatus"
          },
          "Result" : {
            "$ref" : "#/components/schemas/GatewayHookResult"
          }
        },
        "type" : "object"
      },
      "GatewayHookResult" : {
        "properties" : {
          "ExecutionId" : {
            "format" : "uuid",
            "type" : "string"
          },
          "IsSuccessful" : {
            "type" : "boolean"
          },
          "ResponseUrl" : {
            "nullable" : true,
            "type" : "string"
          },
          "DateTime" : {
            "format" : "date-time",
            "type" : "string"
          },
          "ExpirationTime" : {
            "format" : "date-time",
            "nullable" : true,
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "HookStatus" : {
        "enum" : [ "Created", "Execution", "End" ],
        "type" : "string"
      },
      "PlatformIdentifier" : {
        "description" : "Preliminary platform list. To be extended with new products.",
        "enum" : [ "ANTARES", "SOLARGAIN", "SYNAPTIQ", "other" ],
        "type" : "string"
      },
      "Device_1" : {
        "description" : "A singular instance of a Product, usually with a serial number or other unique identifier.",
        "properties" : {
          "SerialNum" : {
            "$ref" : "#/components/schemas/SerialNum"
          },
          "Description" : {
            "$ref" : "#/components/schemas/Description"
          },
          "URL" : {
            "$ref" : "#/components/schemas/URL"
          },
          "ProdCode" : {
            "$ref" : "#/components/schemas/ProdCode"
          },
          "ProdID" : {
            "$ref" : "#/components/schemas/ProdID"
          },
          "Firmware" : {
            "$ref" : "#/components/schemas/Firmware"
          },
          "MaintDateLast" : {
            "$ref" : "#/components/schemas/MaintDateLast"
          },
          "InServiceDate" : {
            "$ref" : "#/components/schemas/InServiceDate"
          },
          "Calibration" : {
            "$ref" : "#/components/schemas/Calibration"
          },
          "Warranties" : {
            "$ref" : "#/components/schemas/Warranties"
          },
          "DeviceType" : {
            "$ref" : "#/components/schemas/DeviceType"
          },
          "Components" : {
            "$ref" : "#/components/schemas/Components"
          },
          "DeviceName" : {
            "$ref" : "#/components/schemas/DeviceName"
          },
          "DeviceUUID" : {
            "$ref" : "#/components/schemas/DeviceUUID"
          },
          "CryptographicKeyIDs" : {
            "$ref" : "#/components/schemas/CryptographicKeyIDs"
          },
          "IsMaintainable" : {
            "$ref" : "#/components/schemas/IsMaintainable"
          },
          "Nodes" : {
            "$ref" : "#/components/schemas/Nodes"
          }
        },
        "type" : "object"
      },
      "SerialNum" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "Manufacturer's serial number of a device.",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : { },
          "x-ob-item-type-group" : ""
        } ]
      },
      "TaxonomyElementString" : {
        "properties" : {
          "Value" : {
            "$ref" : "#/components/schemas/ValueString"
          },
          "Unit" : {
            "$ref" : "#/components/schemas/Unit"
          },
          "Decimals" : {
            "$ref" : "#/components/schemas/Decimals"
          },
          "Precision" : {
            "$ref" : "#/components/schemas/Precision"
          },
          "StartTime" : {
            "$ref" : "#/components/schemas/StartTime"
          },
          "EndTime" : {
            "$ref" : "#/components/schemas/EndTime"
          }
        },
        "type" : "object",
        "x-ob-usage-tips" : ""
      },
      "ValueString" : {
        "description" : "Value for the instance element",
        "type" : "string",
        "x-ob-usage-tips" : ""
      },
      "Unit" : {
        "description" : "Unit of the instance element",
        "type" : "string",
        "x-ob-usage-tips" : ""
      },
      "Decimals" : {
        "description" : "Decimals of the instance element",
        "type" : "integer",
        "x-ob-usage-tips" : ""
      },
      "Precision" : {
        "description" : "Precision of the instance element",
        "type" : "integer",
        "x-ob-usage-tips" : ""
      },
      "StartTime" : {
        "description" : "Start time of a measurement period for the instance element",
        "type" : "string",
        "x-ob-usage-tips" : "StartTime can be used to note the start of a window of time that a value represents, where EndTime closes time period. In instances where a value represents a snapshot, or single moment in time, StartTime can be used to represent that exact moment in time. "
      },
      "EndTime" : {
        "description" : "End time of a measurement period for the instance element",
        "type" : "string",
        "x-ob-usage-tips" : ""
      },
      "Description" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "Generic Text field used in fields to provide more detail",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "A description for generic commentary on a object. Not intended for machine analysis"
          },
          "x-ob-item-type-group" : ""
        } ]
      },
      "URL" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "A URL string",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "https://ahjregistry.sunspec.org/#/ahj-search"
          },
          "x-ob-item-type-group" : ""
        } ]
      },
      "ProdCode" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "A product code is a standardized, unique human-readable identifier that is compact, and can be easily parsed. It consists of an entity code concatenated to a product specific identification string, separated by a hyphen. The format of a product code is: [EntityCode]-[ProductString], e.g., ôHANWH-Q_PEAK_DUO_BLK_G10__AC_365ö. A product string is comprised of upper-case letters, numbers, and underscores. Any character that is not a letter or number is a special character and will be replaced by an underscore. All letter characters will be upper case. To avoid clashes between identical product codes, an additional hyphen and an integer 1, 2, 3, ..., is appended, e.g. {ProdCode}-{incremental number}",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "HANWH-Q_PEAK_DUO_BLK_G10__AC_365"
          },
          "x-ob-item-type-group" : ""
        } ]
      },
      "ProdID" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "Unique identifier for the Product.",
          "type" : "object",
          "x-ob-item-type" : "UUIDItemType",
          "x-ob-item-type-group" : "",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "d522ff95-43c2-41e5-83e1-911c1f3ad81f"
          }
        } ]
      },
      "Firmware" : {
        "description" : "Permanent software programmed into a read-only memory.",
        "properties" : {
          "FirmwareVersion" : {
            "$ref" : "#/components/schemas/FirmwareVersion"
          },
          "Checksum" : {
            "$ref" : "#/components/schemas/Checksum"
          }
        },
        "type" : "object"
      },
      "FirmwareVersion" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "Firmware version ",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-item-type-group" : "",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "A.4.0.B"
          }
        } ]
      },
      "Checksum" : {
        "description" : "An object that describes the key, type and supporting information related to employing Checksums to manage data accuracy. ",
        "properties" : {
          "ChecksumKey" : {
            "$ref" : "#/components/schemas/ChecksumKey"
          },
          "ChecksumType" : {
            "$ref" : "#/components/schemas/ChecksumType"
          },
          "ChecksumDetail" : {
            "$ref" : "#/components/schemas/ChecksumDetail"
          }
        },
        "type" : "object"
      },
      "ChecksumKey" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "The value used to validate the accuracy of data through the use of a Checksum Algorithm.",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-item-type-group" : "",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "120EA8A25E5D487BF68B5F7096440019"
          }
        } ]
      },
      "ChecksumType" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "Type of Checksum that is employed by Firmware to detect errors and verify data integrity.",
          "type" : "object",
          "x-ob-item-type" : "ChecksumTypeItemType",
          "x-ob-item-type-group" : "",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "CRC"
          }
        } ]
      },
      "ChecksumDetail" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "Supporting information used to provide additional context to the type of Checksum algorithm used to validate data.",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-item-type-group" : "",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : { }
        } ]
      },
      "MaintDateLast" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "Date of latest maintenance activity",
          "type" : "object",
          "x-ob-item-type" : "DateItemType",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : { },
          "x-ob-item-type-group" : ""
        } ]
      },
      "InServiceDate" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "Date that a device is first placed in service.",
          "type" : "object",
          "x-ob-item-type" : "DateTimeItemType",
          "x-ob-item-type-group" : "",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : { }
        } ]
      },
      "Calibration" : {
        "properties" : {
          "CalibrationDateLast" : {
            "$ref" : "#/components/schemas/CalibrationDateLast"
          },
          "CalibrationMeth" : {
            "$ref" : "#/components/schemas/CalibrationMeth"
          }
        },
        "type" : "object",
        "x-ob-usage-tips" : ""
      },
      "CalibrationDateLast" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "Date of last calibration",
          "type" : "object",
          "x-ob-item-type" : "DateItemType",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "22-02-22"
          },
          "x-ob-item-type-group" : ""
        } ]
      },
      "CalibrationMeth" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "Description of calibration method for an instrument.",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : { },
          "x-ob-item-type-group" : ""
        } ]
      },
      "Warranties" : {
        "items" : {
          "$ref" : "#/components/schemas/Warranty"
        },
        "type" : "array"
      },
      "Warranty" : {
        "description" : "Guarantee of minimum quality level",
        "properties" : {
          "WarrantyType" : {
            "$ref" : "#/components/schemas/WarrantyType"
          },
          "FileFolderURL" : {
            "$ref" : "#/components/schemas/FileFolderURL"
          },
          "Description" : {
            "$ref" : "#/components/schemas/Description"
          },
          "WarrantyID" : {
            "$ref" : "#/components/schemas/WarrantyID"
          },
          "WarrantyName" : {
            "$ref" : "#/components/schemas/WarrantyName"
          },
          "WarrantyDuration" : {
            "$ref" : "#/components/schemas/WarrantyDuration"
          },
          "WarrantyEffectiveDate" : {
            "$ref" : "#/components/schemas/WarrantyEffectiveDate"
          },
          "WarrantyExpirationDate" : {
            "$ref" : "#/components/schemas/WarrantyExpirationDate"
          }
        },
        "type" : "object"
      },
      "WarrantyType" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "Classification of the Warranty. What type of Warranty is it?",
          "type" : "object",
          "x-ob-item-type" : "WarrantyItemType",
          "x-ob-item-type-group" : "",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "Power"
          }
        } ]
      },
      "FileFolderURL" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "A generic URL to a file folder or a single file for transmitting documents",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-usage-tips" : "Consider the permissions settings on any documents noted within the FileFolderURL object. User may adjust permissions to enable expanded access to documentation. For example, when using Google Docs, have permissions allow access to any user with the URL.",
          "x-ob-sample-value" : {
            "Value" : "https://www.lg.com/us/business/download/resources/BT00002151/[Print]%20Neon_2_60_BF_80308_ck_FRD_v4.pdf"
          },
          "x-ob-item-type-group" : ""
        } ]
      },
      "WarrantyID" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "Universally Unique Identifier for the Warranty",
          "type" : "object",
          "x-ob-item-type" : "UUIDItemType",
          "x-ob-item-type-group" : "",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "63e32227-7a31-4a0c-a715-20d46315cc9e"
          }
        } ]
      },
      "WarrantyName" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "Human Readable Name for the Warranty",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-item-type-group" : "",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "Standard REC 25 yr Warranty"
          }
        } ]
      },
      "WarrantyDuration" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementInteger"
        }, {
          "description" : "How long is the Warranty Valid For? ",
          "type" : "object",
          "x-ob-item-type" : "DurationItemType",
          "x-ob-item-type-group" : "",
          "x-ob-usage-tips" : "Enter as integer; Specify Units.",
          "x-ob-sample-value" : {
            "Value" : 25,
            "Unit" : "Y"
          }
        } ]
      },
      "TaxonomyElementInteger" : {
        "properties" : {
          "Value" : {
            "$ref" : "#/components/schemas/ValueInteger"
          },
          "Unit" : {
            "$ref" : "#/components/schemas/Unit"
          },
          "Decimals" : {
            "$ref" : "#/components/schemas/Decimals"
          },
          "Precision" : {
            "$ref" : "#/components/schemas/Precision"
          },
          "StartTime" : {
            "$ref" : "#/components/schemas/StartTime"
          },
          "EndTime" : {
            "$ref" : "#/components/schemas/EndTime"
          }
        },
        "type" : "object",
        "x-ob-usage-tips" : ""
      },
      "ValueInteger" : {
        "description" : "Value for the instance element",
        "type" : "integer",
        "x-ob-usage-tips" : ""
      },
      "WarrantyEffectiveDate" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "Date the Warranty Comes Into Force",
          "type" : "object",
          "x-ob-item-type" : "DateItemType",
          "x-ob-item-type-group" : "",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "2012-07-16"
          }
        } ]
      },
      "WarrantyExpirationDate" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "Date the Warranty Is No Longer in Force",
          "type" : "object",
          "x-ob-item-type" : "DateItemType",
          "x-ob-item-type-group" : "",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "2037-07-16"
          }
        } ]
      },
      "DeviceType" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "The type of a device",
          "type" : "object",
          "x-ob-item-type" : "DeviceTypeItemType",
          "x-ob-item-type-group" : "",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : { }
        } ]
      },
      "Components" : {
        "items" : {
          "$ref" : "#/components/schemas/Component"
        },
        "type" : "array"
      },
      "Component" : {
        "description" : "A part or component of a Device",
        "properties" : {
          "ComponentType" : {
            "$ref" : "#/components/schemas/ComponentType"
          },
          "ComponentName" : {
            "$ref" : "#/components/schemas/ComponentName"
          },
          "ComponentUUID" : {
            "$ref" : "#/components/schemas/ComponentUUID"
          },
          "IsMaintainable" : {
            "$ref" : "#/components/schemas/IsMaintainable"
          },
          "Nodes" : {
            "$ref" : "#/components/schemas/Nodes"
          },
          "Description" : {
            "$ref" : "#/components/schemas/Description"
          }
        },
        "type" : "object"
      },
      "ComponentType" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "The type of a Component",
          "type" : "object",
          "x-ob-item-type" : "ComponentTypeItemType",
          "x-ob-item-type-group" : "",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : { }
        } ]
      },
      "ComponentName" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "A user-defined name for a Component",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-item-type-group" : "",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : { }
        } ]
      },
      "ComponentUUID" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "An identifier for a component",
          "type" : "object",
          "x-ob-item-type" : "UUIDItemType",
          "x-ob-item-type-group" : "",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : { }
        } ]
      },
      "IsMaintainable" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementBoolean"
        }, {
          "description" : "True if an Assembly, Device or Component has parts that can be serviced or replaced without violating a warranty.",
          "type" : "object",
          "x-ob-item-type" : "BooleanItemType",
          "x-ob-item-type-group" : "",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : { }
        } ]
      },
      "TaxonomyElementBoolean" : {
        "properties" : {
          "Value" : {
            "$ref" : "#/components/schemas/ValueBoolean"
          },
          "Unit" : {
            "$ref" : "#/components/schemas/Unit"
          },
          "Decimals" : {
            "$ref" : "#/components/schemas/Decimals"
          },
          "Precision" : {
            "$ref" : "#/components/schemas/Precision"
          },
          "StartTime" : {
            "$ref" : "#/components/schemas/StartTime"
          },
          "EndTime" : {
            "$ref" : "#/components/schemas/EndTime"
          }
        },
        "type" : "object",
        "x-ob-usage-tips" : ""
      },
      "ValueBoolean" : {
        "description" : "Value for the instance element",
        "type" : "boolean",
        "x-ob-usage-tips" : ""
      },
      "Nodes" : {
        "items" : {
          "$ref" : "#/components/schemas/Node"
        },
        "type" : "array"
      },
      "Node" : {
        "description" : "A node is an element of a PVCollada file that describes geospatial positions and mechanical relationships.",
        "properties" : {
          "NodeUUID" : {
            "$ref" : "#/components/schemas/NodeUUID"
          },
          "Description" : {
            "$ref" : "#/components/schemas/Description"
          },
          "PVColladaID" : {
            "$ref" : "#/components/schemas/PVColladaID"
          },
          "PVColladaFileID" : {
            "$ref" : "#/components/schemas/PVColladaFileID"
          }
        },
        "type" : "object"
      },
      "NodeUUID" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "A UUID for a Node, which is an element of a topology.",
          "type" : "object",
          "x-ob-item-type" : "UUIDItemType",
          "x-ob-item-type-group" : "",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : { }
        } ]
      },
      "PVColladaID" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "An identifier for an object in a PVCollada file.",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-item-type-group" : "",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : { }
        } ]
      },
      "PVColladaFileID" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "An identifier for a PVCollada file.",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-item-type-group" : "",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : { }
        } ]
      },
      "DeviceName" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "A user-defined name for a device",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-item-type-group" : "",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : { }
        } ]
      },
      "DeviceUUID" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "UUID for an individual piece of equipment.",
          "type" : "object",
          "x-ob-item-type" : "UUIDItemType",
          "x-ob-usage-tips" : "Use SerialNum for the manufacturer's serial number.",
          "x-ob-sample-value" : { },
          "x-ob-item-type-group" : ""
        } ]
      },
      "CryptographicKeyIDs" : {
        "items" : {
          "$ref" : "#/components/schemas/CryptographicKeyID"
        },
        "type" : "array"
      },
      "CryptographicKeyID" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "This concept provides a cryptographically secure identity for a device and originates from the distributed ledger or blockchain technologies. The Cryptographic Key ID is derived from an asymmetric private/public key pair, typically generated on the device itself and stored securely, preferably in a hardware-secured environment like a Secure Element (SE). Private keys remain within this secure environment to prevent exposure. The CryptographicKeyID consists of a type identifier, the hash output of public-key-material, and optionally, a CRC check for error detection, ensuring uniqueness and integrity.",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-item-type-group" : "",
          "x-ob-usage-tips" : "For more info see: https://github.com/Lumian-Foundation/ckid-documentation/tree/main Lumian Foundation is a not-pro-profit Standards organization spun off from SunSpec.",
          "x-ob-sample-value" : {
            "Value" : "1E99423A4ED27608A15A2616A2B0E9E52CED330AC530EDCC32C8FFC6A526AEDD"
          }
        } ]
      },
      "Location" : {
        "description" : "A location is defined by Latitude, Longitude and Altitude.",
        "properties" : {
          "Latitude" : {
            "$ref" : "#/components/schemas/Latitude"
          },
          "Longitude" : {
            "$ref" : "#/components/schemas/Longitude"
          },
          "Altitude" : {
            "$ref" : "#/components/schemas/Altitude"
          },
          "Elevation" : {
            "$ref" : "#/components/schemas/Elevation"
          },
          "LocationType" : {
            "$ref" : "#/components/schemas/LocationType"
          },
          "LocationID" : {
            "$ref" : "#/components/schemas/LocationID"
          },
          "Description" : {
            "$ref" : "#/components/schemas/Description"
          },
          "LocationDeterminationMethod" : {
            "$ref" : "#/components/schemas/LocationDeterminationMethod"
          }
        },
        "type" : "object",
        "x-ob-usage-tips" : ""
      },
      "Latitude" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementNumber"
        }, {
          "description" : "Decimal value of latitude of the physical site in degrees.  Positive North of the Equator.  Negative South of the Equator",
          "type" : "object",
          "x-ob-item-type" : "PlaneAngleItemType",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Unit" : "Degree",
            "Value" : 45.7783517
          },
          "x-ob-item-type-group" : ""
        } ]
      },
      "TaxonomyElementNumber" : {
        "properties" : {
          "Value" : {
            "$ref" : "#/components/schemas/ValueNumber"
          },
          "Unit" : {
            "$ref" : "#/components/schemas/Unit"
          },
          "Decimals" : {
            "$ref" : "#/components/schemas/Decimals"
          },
          "Precision" : {
            "$ref" : "#/components/schemas/Precision"
          },
          "StartTime" : {
            "$ref" : "#/components/schemas/StartTime"
          },
          "EndTime" : {
            "$ref" : "#/components/schemas/EndTime"
          }
        },
        "type" : "object",
        "x-ob-usage-tips" : ""
      },
      "ValueNumber" : {
        "description" : "Value for the instance element",
        "type" : "number",
        "x-ob-usage-tips" : ""
      },
      "Longitude" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementNumber"
        }, {
          "description" : "Decimal value of longitude of the physical site in degrees.  Positive east of the Prime Meridian.  Negative west of the Prime Meridian.  North America is negative..",
          "type" : "object",
          "x-ob-item-type" : "PlaneAngleItemType",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Unit" : "Degree",
            "Value" : -108.5203597
          },
          "x-ob-item-type-group" : ""
        } ]
      },
      "Altitude" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementNumber"
        }, {
          "description" : "The height of ground level at a location relative to sea level.",
          "type" : "object",
          "x-ob-item-type" : "LengthItemType",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Unit" : "ft",
            "Value" : 3123
          },
          "x-ob-item-type-group" : ""
        } ]
      },
      "Elevation" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementNumber"
        }, {
          "description" : "Height from ground level.",
          "type" : "object",
          "x-ob-item-type" : "LengthItemType",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Unit" : "ft",
            "Value" : 20
          },
          "x-ob-item-type-group" : ""
        } ]
      },
      "LocationType" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "The type of location being specified",
          "type" : "object",
          "x-ob-item-type" : "LocationTypeItemType",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "GeneralProximity"
          },
          "x-ob-item-type-group" : ""
        } ]
      },
      "LocationID" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "The identifier of the location.",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "63e32227-7a31-4a0c-a715-20d46315cc9e"
          },
          "x-ob-item-type-group" : ""
        } ]
      },
      "LocationDeterminationMethod" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "Method of the determining the location",
          "type" : "object",
          "x-ob-item-type" : "LocationDeterminationMethodItemType",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "AddressGeocoding"
          },
          "x-ob-item-type-group" : ""
        } ]
      },
      "PVArray_1" : {
        "description" : "An array of modules within a PVSystem that have a common orientation.",
        "properties" : {
          "PVStrings" : {
            "$ref" : "#/components/schemas/PVStrings"
          },
          "Orientation" : {
            "$ref" : "#/components/schemas/Orientation"
          },
          "Area" : {
            "$ref" : "#/components/schemas/Area"
          },
          "RoofPlaneID" : {
            "$ref" : "#/components/schemas/RoofPlaneID"
          },
          "FileFolderURL" : {
            "$ref" : "#/components/schemas/FileFolderURL"
          },
          "Description" : {
            "$ref" : "#/components/schemas/Description"
          },
          "CapacityDC" : {
            "$ref" : "#/components/schemas/CapacityDC"
          },
          "ProductLineItems" : {
            "$ref" : "#/components/schemas/ProductLineItems"
          },
          "Devices" : {
            "$ref" : "#/components/schemas/Devices"
          },
          "PVArrayID" : {
            "$ref" : "#/components/schemas/PVArrayID"
          },
          "ModuleOrientation" : {
            "$ref" : "#/components/schemas/ModuleOrientation"
          }
        },
        "type" : "object"
      },
      "PVStrings" : {
        "items" : {
          "$ref" : "#/components/schemas/PVString_1"
        },
        "type" : "array"
      },
      "PVString_1" : {
        "description" : "A string of Modules within a PVSystem",
        "properties" : {
          "Devices" : {
            "$ref" : "#/components/schemas/Devices"
          },
          "Orientation" : {
            "$ref" : "#/components/schemas/Orientation"
          },
          "ProductLineItems" : {
            "$ref" : "#/components/schemas/ProductLineItems"
          },
          "CapacityDC" : {
            "$ref" : "#/components/schemas/CapacityDC"
          },
          "FileFolderURL" : {
            "$ref" : "#/components/schemas/FileFolderURL"
          },
          "Description" : {
            "$ref" : "#/components/schemas/Description"
          },
          "PVStringID" : {
            "$ref" : "#/components/schemas/PVStringID"
          },
          "ModuleOrientation" : {
            "$ref" : "#/components/schemas/ModuleOrientation"
          }
        },
        "type" : "object"
      },
      "Devices" : {
        "items" : {
          "$ref" : "#/components/schemas/Device_1"
        },
        "type" : "array",
        "x-ob-usage-tips" : ""
      },
      "Orientation" : {
        "description" : "Orientation is defined by Azimuth, Tilt and Roll. Azimuth and Tilt are defined in the context of a right-hand coordinate system where the the x-axis is East, y-axis is North, and the z-axis is vertical.",
        "properties" : {
          "Azimuth" : {
            "$ref" : "#/components/schemas/Azimuth"
          },
          "Tilt" : {
            "$ref" : "#/components/schemas/Tilt"
          },
          "Roll" : {
            "$ref" : "#/components/schemas/Roll"
          }
        },
        "type" : "object"
      },
      "Azimuth" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementNumber"
        }, {
          "description" : "Azimuth relative to North where North is 0 degrees and East is 90 degrees",
          "type" : "object",
          "x-ob-item-type" : "PlaneAngleItemType",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Unit" : "Degree",
            "Value" : 180
          },
          "x-ob-item-type-group" : ""
        } ]
      },
      "Tilt" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementNumber"
        }, {
          "description" : "Tilt is the angle relative to horizontal. Horizontal is defined as the x,y plane of a right-hand coordinate system where the the x-axis is East, y-axis is North, and the z-axis is vertical.",
          "type" : "object",
          "x-ob-item-type" : "PlaneAngleItemType",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Unit" : "Degree",
            "Value" : 30
          },
          "x-ob-item-type-group" : ""
        } ]
      },
      "Roll" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementNumber"
        }, {
          "description" : "Roll is a right-hand rotation about an oriented axis, with a positive value being a counter-clockwise rotation. In the context of a solar module, Roll is the rotation of the module about the vector normal to the module's plane that is oriented towards the sky.",
          "type" : "object",
          "x-ob-item-type" : "PlaneAngleItemType",
          "x-ob-usage-tips" : "The Roll element of Orientation is used when solar modules are installed on a slant.",
          "x-ob-sample-value" : {
            "Unit" : "Degree",
            "Value" : 20
          },
          "x-ob-item-type-group" : ""
        } ]
      },
      "ProductLineItems" : {
        "items" : {
          "$ref" : "#/components/schemas/ProductLineItem"
        },
        "type" : "array",
        "x-ob-usage-tips" : ""
      },
      "ProductLineItem" : {
        "description" : "A product used within a PVSystem and the quantity of that product",
        "properties" : {
          "Product" : {
            "$ref" : "#/components/schemas/Product"
          },
          "Description" : {
            "$ref" : "#/components/schemas/Description"
          },
          "FileFolderURL" : {
            "$ref" : "#/components/schemas/FileFolderURL"
          },
          "Quantity" : {
            "$ref" : "#/components/schemas/Quantity"
          },
          "AmountExtended" : {
            "$ref" : "#/components/schemas/AmountExtended"
          }
        },
        "type" : "object",
        "x-ob-usage-tips" : ""
      },
      "Product" : {
        "description" : "An item or equipment that is packaged and sold as a unit.",
        "properties" : {
          "ProdName" : {
            "$ref" : "#/components/schemas/ProdName"
          },
          "ProdMfr" : {
            "$ref" : "#/components/schemas/ProdMfr"
          },
          "ProdCode" : {
            "$ref" : "#/components/schemas/ProdCode"
          },
          "ProdType" : {
            "$ref" : "#/components/schemas/ProdType"
          },
          "ProdDatasheet" : {
            "$ref" : "#/components/schemas/ProdDatasheet"
          },
          "ProdInstructions" : {
            "$ref" : "#/components/schemas/ProdInstructions"
          },
          "ProdSpecifications" : {
            "$ref" : "#/components/schemas/ProdSpecifications"
          },
          "ProdCertifications" : {
            "$ref" : "#/components/schemas/ProdCertifications"
          },
          "Description" : {
            "$ref" : "#/components/schemas/Description"
          },
          "FileFolderURL" : {
            "$ref" : "#/components/schemas/FileFolderURL"
          },
          "Dimension" : {
            "$ref" : "#/components/schemas/Dimension"
          },
          "Packages" : {
            "$ref" : "#/components/schemas/Packages"
          },
          "Warranties" : {
            "$ref" : "#/components/schemas/Warranties"
          },
          "AlternativeIdentifiers" : {
            "$ref" : "#/components/schemas/AlternativeIdentifiers"
          },
          "ProdID" : {
            "$ref" : "#/components/schemas/ProdID"
          },
          "SubstituteProducts" : {
            "$ref" : "#/components/schemas/SubstituteProducts"
          },
          "ManufacturerUPC" : {
            "$ref" : "#/components/schemas/ManufacturerUPC"
          }
        },
        "type" : "object"
      },
      "ProdName" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "Name of the product, for example ABC Brand Inverter.",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "Q.PEAK DUO BLK-G10+/AC 360-365"
          },
          "x-ob-item-type-group" : ""
        } ]
      },
      "ProdMfr" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "Name of the product or equipment manufacturer.",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "Hanwha"
          },
          "x-ob-item-type-group" : ""
        } ]
      },
      "ProdType" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "The type of product",
          "type" : "object",
          "x-ob-item-type" : "ProdTypeItemType",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "ProdModule"
          },
          "x-ob-item-type-group" : ""
        } ]
      },
      "ProdDatasheet" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "The datasheet for the product",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-usage-tips" : "This is for a URL leading to the Datasheet for a product.",
          "x-ob-sample-value" : {
            "Value" : "http://www.lg-solar.com/downloads/spec-sheet/DS_NeON2_60cells.pdf"
          },
          "x-ob-item-type-group" : ""
        } ]
      },
      "ProdInstructions" : {
        "items" : {
          "$ref" : "#/components/schemas/ProdInstruction"
        },
        "type" : "array"
      },
      "ProdInstruction" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "A single document in a collection of the instructions for a product.",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-usage-tips" : "This should be used for sending all of the instructions for installing and servicing the product. Each file can be placed in one member of the array of ProdInstructions",
          "x-ob-sample-value" : {
            "Value" : "https://unirac.com/wp-content/uploads/pdf/FLASHKIT-PRO_Brochure_20180831.pdf"
          },
          "x-ob-item-type-group" : ""
        } ]
      },
      "ProdSpecifications" : {
        "items" : {
          "$ref" : "#/components/schemas/ProdSpecification"
        },
        "type" : "array"
      },
      "ProdSpecification" : {
        "description" : "A single specification for a product",
        "properties" : {
          "SpecificationName" : {
            "$ref" : "#/components/schemas/SpecificationName"
          },
          "SpecificationType" : {
            "$ref" : "#/components/schemas/SpecificationType"
          },
          "SpecificationUnit" : {
            "$ref" : "#/components/schemas/SpecificationUnit"
          },
          "SpecificationValue" : {
            "$ref" : "#/components/schemas/SpecificationValue"
          },
          "Description" : {
            "$ref" : "#/components/schemas/Description"
          }
        },
        "type" : "object"
      },
      "SpecificationName" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "Use this for describing an individual specification",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-usage-tips" : "Use this for custom units and details of the product",
          "x-ob-sample-value" : {
            "Value" : "Power factor (adjustable)"
          },
          "x-ob-item-type-group" : ""
        } ]
      },
      "SpecificationType" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "The enumerated list of the types of major specifications.",
          "type" : "object",
          "x-ob-item-type" : "SpecificationTypeItemType",
          "x-ob-usage-tips" : "If the specification does not have a type listed here, select \"None\" and then use the SpecificationName as an alternative.",
          "x-ob-sample-value" : { },
          "x-ob-item-type-group" : ""
        } ]
      },
      "SpecificationUnit" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "The specific unit of the specification",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-usage-tips" : "This needs to be the specific unit the SpecificationValue is given in",
          "x-ob-sample-value" : {
            "Value" : "mm"
          },
          "x-ob-item-type-group" : ""
        } ]
      },
      "SpecificationValue" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "The value of the specific Specification.",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-usage-tips" : "Note the unit always needs to be equal to the SpecificationUnit value",
          "x-ob-sample-value" : {
            "Value" : "9"
          },
          "x-ob-item-type-group" : ""
        } ]
      },
      "ProdCertifications" : {
        "items" : {
          "$ref" : "#/components/schemas/ProdCertification"
        },
        "type" : "array"
      },
      "ProdCertification" : {
        "description" : "A certification for a product",
        "properties" : {
          "CertificationAgency" : {
            "$ref" : "#/components/schemas/CertificationAgency"
          },
          "FileFolderURL" : {
            "$ref" : "#/components/schemas/FileFolderURL"
          },
          "Description" : {
            "$ref" : "#/components/schemas/Description"
          },
          "CertificationDate" : {
            "$ref" : "#/components/schemas/CertificationDate"
          },
          "CertificationExpirationDate" : {
            "$ref" : "#/components/schemas/CertificationExpirationDate"
          },
          "CertificationName" : {
            "$ref" : "#/components/schemas/CertificationName"
          },
          "CertificateValue" : {
            "$ref" : "#/components/schemas/CertificateValue"
          },
          "CertificationStandard" : {
            "$ref" : "#/components/schemas/CertificationStandard"
          },
          "Firmware" : {
            "$ref" : "#/components/schemas/Firmware"
          },
          "TestLab" : {
            "$ref" : "#/components/schemas/TestLab"
          }
        },
        "type" : "object"
      },
      "CertificationAgency" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Entity"
        }, {
          "description" : "The agency or testing center that grants the certification",
          "properties" : {
            "Description" : {
              "$ref" : "#/components/schemas/Description"
            },
            "CertificationAgencyName" : {
              "$ref" : "#/components/schemas/CertificationAgencyName"
            }
          },
          "type" : "object"
        } ]
      },
      "Entity" : {
        "description" : "Any commercial or legal organization.",
        "properties" : {
          "Addresses" : {
            "$ref" : "#/components/schemas/Addresses"
          },
          "Contacts" : {
            "$ref" : "#/components/schemas/Contacts"
          },
          "Email" : {
            "$ref" : "#/components/schemas/Email"
          },
          "WorkPhone" : {
            "$ref" : "#/components/schemas/WorkPhone"
          },
          "LegalEntityIdentifier" : {
            "$ref" : "#/components/schemas/LegalEntityIdentifier"
          },
          "URL" : {
            "$ref" : "#/components/schemas/URL"
          },
          "TaxID" : {
            "$ref" : "#/components/schemas/TaxID"
          },
          "CreditRatings" : {
            "$ref" : "#/components/schemas/CreditRatings"
          },
          "AlternativeIdentifiers" : {
            "$ref" : "#/components/schemas/AlternativeIdentifiers"
          },
          "PaymentMethods" : {
            "$ref" : "#/components/schemas/PaymentMethods"
          },
          "EntityRole" : {
            "$ref" : "#/components/schemas/EntityRole"
          }
        },
        "type" : "object"
      },
      "Addresses" : {
        "items" : {
          "$ref" : "#/components/schemas/Address"
        },
        "type" : "array",
        "x-ob-usage-tips" : ""
      },
      "Address" : {
        "description" : "Physical or Mailing address",
        "properties" : {
          "City" : {
            "$ref" : "#/components/schemas/City"
          },
          "StateProvince" : {
            "$ref" : "#/components/schemas/StateProvince"
          },
          "ZipPostalCode" : {
            "$ref" : "#/components/schemas/ZipPostalCode"
          },
          "Country" : {
            "$ref" : "#/components/schemas/Country"
          },
          "County" : {
            "$ref" : "#/components/schemas/County"
          },
          "AddressType" : {
            "$ref" : "#/components/schemas/AddressType"
          },
          "AddressID" : {
            "$ref" : "#/components/schemas/AddressID"
          },
          "Location" : {
            "$ref" : "#/components/schemas/Location"
          },
          "AddrLine1" : {
            "$ref" : "#/components/schemas/AddrLine1"
          },
          "AddrLine2" : {
            "$ref" : "#/components/schemas/AddrLine2"
          },
          "AddrLine3" : {
            "$ref" : "#/components/schemas/AddrLine3"
          },
          "Description" : {
            "$ref" : "#/components/schemas/Description"
          }
        },
        "type" : "object",
        "x-ob-usage-tips" : ""
      },
      "City" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "Name of the city in the physical or mailing address.",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "Billings"
          },
          "x-ob-item-type-group" : ""
        } ]
      },
      "StateProvince" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "State of a Province of the mailing or physical address.",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "MT"
          },
          "x-ob-item-type-group" : ""
        } ]
      },
      "ZipPostalCode" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "Zip Code / Postal Code of a mailing or physical address.",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "59101"
          },
          "x-ob-item-type-group" : ""
        } ]
      },
      "Country" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "ISO country code where system is located.",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "USA"
          },
          "x-ob-item-type-group" : ""
        } ]
      },
      "County" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "County of the physical or mailing address",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "Yellowstone County"
          },
          "x-ob-item-type-group" : ""
        } ]
      },
      "AddressType" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "The type of address being specified",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "Installation"
          },
          "x-ob-item-type-group" : ""
        } ]
      },
      "AddressID" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "The identifier of the address.",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "63e32227-7a31-4a0c-a715-20d46315cc9e"
          },
          "x-ob-item-type-group" : ""
        } ]
      },
      "AddrLine1" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "First line of a mailing or physical address.",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "135 Wyoming Avenue"
          },
          "x-ob-item-type-group" : ""
        } ]
      },
      "AddrLine2" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "Second line of a mailing or physical address.",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "Apt 31"
          },
          "x-ob-item-type-group" : ""
        } ]
      },
      "AddrLine3" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "Third line of a mailing or physical address.",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "Building H"
          },
          "x-ob-item-type-group" : ""
        } ]
      },
      "Contacts" : {
        "items" : {
          "$ref" : "#/components/schemas/Contact"
        },
        "type" : "array",
        "x-ob-usage-tips" : ""
      },
      "Contact" : {
        "description" : "A person or contact information",
        "properties" : {
          "Address" : {
            "$ref" : "#/components/schemas/Address"
          },
          "ContactID" : {
            "$ref" : "#/components/schemas/ContactID"
          },
          "Email" : {
            "$ref" : "#/components/schemas/Email"
          },
          "MobilePhone" : {
            "$ref" : "#/components/schemas/MobilePhone"
          },
          "WorkPhone" : {
            "$ref" : "#/components/schemas/WorkPhone"
          },
          "HomePhone" : {
            "$ref" : "#/components/schemas/HomePhone"
          },
          "FirstName" : {
            "$ref" : "#/components/schemas/FirstName"
          },
          "MiddleName" : {
            "$ref" : "#/components/schemas/MiddleName"
          },
          "LastName" : {
            "$ref" : "#/components/schemas/LastName"
          },
          "ContactType" : {
            "$ref" : "#/components/schemas/ContactType"
          },
          "Description" : {
            "$ref" : "#/components/schemas/Description"
          },
          "PreferredContactMethod" : {
            "$ref" : "#/components/schemas/PreferredContactMethod"
          },
          "ContactTimezone" : {
            "$ref" : "#/components/schemas/ContactTimezone"
          },
          "Title" : {
            "$ref" : "#/components/schemas/Title"
          },
          "URL" : {
            "$ref" : "#/components/schemas/URL"
          }
        },
        "type" : "object",
        "x-ob-usage-tips" : ""
      },
      "ContactID" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "The identifier of the contact.",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "63e32227-7a31-4a0c-a715-20d46315cc9e"
          },
          "x-ob-item-type-group" : ""
        } ]
      },
      "Email" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "Email address",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "Test@sunspec.com"
          },
          "x-ob-item-type-group" : ""
        } ]
      },
      "MobilePhone" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "Phone Number of a cell phone or mobile device.  This phone is expected to be able to receive text messages.  Characters like hyphen, period, x for extension are allowed.",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "(987) 654-3210"
          },
          "x-ob-item-type-group" : ""
        } ]
      },
      "WorkPhone" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "Phone number to be used during working hours.  Characters like hyphen, period, x for extension are allowed.",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "(987) 654-3210"
          },
          "x-ob-item-type-group" : ""
        } ]
      },
      "HomePhone" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "Phone number to be used for high priority calls only.  Characters like hyphen, period, x for extension are allowed.",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "(987) 654-3210"
          },
          "x-ob-item-type-group" : ""
        } ]
      },
      "FirstName" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "First name of a person.",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "Bob"
          },
          "x-ob-item-type-group" : ""
        } ]
      },
      "MiddleName" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "Middle name of a person.",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "Alex"
          },
          "x-ob-item-type-group" : ""
        } ]
      },
      "LastName" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "The last name of person.",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "Smith"
          },
          "x-ob-item-type-group" : ""
        } ]
      },
      "ContactType" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "The type of contact being specified",
          "type" : "object",
          "x-ob-item-type" : "ContactTypeItemType",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "Homeowner"
          },
          "x-ob-item-type-group" : ""
        } ]
      },
      "PreferredContactMethod" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "The method of contact the contact prefers",
          "type" : "object",
          "x-ob-item-type" : "PreferredContactMethodItemType",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "Email"
          },
          "x-ob-item-type-group" : ""
        } ]
      },
      "ContactTimezone" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "The timezone where the contact is located.",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "PST"
          },
          "x-ob-item-type-group" : ""
        } ]
      },
      "Title" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "The title of the contact",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "Department Manager"
          },
          "x-ob-item-type-group" : ""
        } ]
      },
      "LegalEntityIdentifier" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "Legal Entity Identifier (LEI) of the entity.",
          "type" : "object",
          "x-ob-item-type" : "LegalEntityIdentifierItemType",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "254900HROIFWPRGM1V77"
          },
          "x-ob-item-type-group" : ""
        } ]
      },
      "TaxID" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "Tax identification number of the entity.",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "13-7654321"
          },
          "x-ob-item-type-group" : ""
        } ]
      },
      "CreditRatings" : {
        "items" : {
          "$ref" : "#/components/schemas/CreditRating"
        },
        "type" : "array"
      },
      "CreditRating" : {
        "description" : "Credit rating.",
        "properties" : {
          "CreditScore" : {
            "$ref" : "#/components/schemas/CreditScore"
          },
          "CreditScoreSource" : {
            "$ref" : "#/components/schemas/CreditScoreSource"
          }
        },
        "type" : "object"
      },
      "CreditScore" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "Credit symbol that indicates the degree of credit worthiness. ",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-item-type-group" : "",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "AAA"
          }
        } ]
      },
      "CreditScoreSource" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "Issuing source of a credit score, such as a Rating Agency. ",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-item-type-group" : "",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "Standard & Poor's"
          }
        } ]
      },
      "AlternativeIdentifiers" : {
        "items" : {
          "$ref" : "#/components/schemas/AlternativeIdentifier"
        },
        "type" : "array"
      },
      "AlternativeIdentifier" : {
        "description" : "Additional identifier for a record or data set",
        "properties" : {
          "SourceName" : {
            "$ref" : "#/components/schemas/SourceName"
          },
          "Identifier" : {
            "$ref" : "#/components/schemas/Identifier"
          },
          "Description" : {
            "$ref" : "#/components/schemas/Description"
          },
          "IdentifierType" : {
            "$ref" : "#/components/schemas/IdentifierType"
          }
        },
        "type" : "object"
      },
      "SourceName" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "Name of the data source.",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-item-type-group" : "",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "Data Source"
          }
        } ]
      },
      "Identifier" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "A unique identifier for a record or dataset.",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-item-type-group" : "",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "be3827bd-0b57-4990-a757-7ee13348356f"
          }
        } ]
      },
      "IdentifierType" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "The type of unique identifier used to represent a unique datapoint as the AlternativeIdentifier. ",
          "type" : "object",
          "x-ob-item-type" : "IdentifierTypeItemType",
          "x-ob-item-type-group" : "",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "UUID"
          }
        } ]
      },
      "PaymentMethods" : {
        "items" : {
          "$ref" : "#/components/schemas/PaymentMethod"
        },
        "type" : "array"
      },
      "PaymentMethod" : {
        "description" : "The named method of payment(s) at the payment processor that can be used to fund the transaction(s). Used for expenses related to a task, non-payroll related payments and other payments that may not be included in existing contractual payments.",
        "properties" : {
          "PaymentToken" : {
            "$ref" : "#/components/schemas/PaymentToken"
          },
          "AlternativeIdentifiers" : {
            "$ref" : "#/components/schemas/AlternativeIdentifiers"
          },
          "Tags" : {
            "$ref" : "#/components/schemas/Tags"
          },
          "Comments" : {
            "$ref" : "#/components/schemas/Comments"
          },
          "PaymentMethodName" : {
            "$ref" : "#/components/schemas/PaymentMethodName"
          }
        },
        "type" : "object"
      },
      "PaymentToken" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "The token assigned by the payment processor to represent a previously stored payment method. This value should not contain any information that is subject to Payment Card Industry (PCI) compliance.",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-item-type-group" : "",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "tok_1Ne36S2eZvKYlo2CsVv8aURt"
          }
        } ]
      },
      "Tags" : {
        "items" : {
          "$ref" : "#/components/schemas/Tag"
        },
        "type" : "array"
      },
      "Tag" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "A tag, keyword or label.",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-item-type-group" : "",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : { }
        } ]
      },
      "Comments" : {
        "items" : {
          "$ref" : "#/components/schemas/Comment"
        },
        "type" : "array"
      },
      "Comment" : {
        "description" : "Date, source and content of a comment",
        "properties" : {
          "CommentID" : {
            "$ref" : "#/components/schemas/CommentID"
          },
          "CommentDate" : {
            "$ref" : "#/components/schemas/CommentDate"
          },
          "CommentText" : {
            "$ref" : "#/components/schemas/CommentText"
          },
          "Contacts" : {
            "$ref" : "#/components/schemas/Contacts"
          },
          "Tags" : {
            "$ref" : "#/components/schemas/Tags"
          },
          "Scope" : {
            "$ref" : "#/components/schemas/Scope"
          }
        },
        "type" : "object"
      },
      "CommentID" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "The UUID of a comment",
          "type" : "object",
          "x-ob-item-type" : "UUIDItemType",
          "x-ob-item-type-group" : "",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "82b2f9ea-0a88-464f-80ef-6712662eef68"
          }
        } ]
      },
      "CommentDate" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "Date of a comment",
          "type" : "object",
          "x-ob-item-type" : "DateTimeItemType",
          "x-ob-item-type-group" : "",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "2022-12-28T19:49:26Z"
          }
        } ]
      },
      "CommentText" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "Content text of a comment",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-item-type-group" : "",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "10 gauge wire is required for this project."
          }
        } ]
      },
      "Scope" : {
        "description" : "A generic object containing information describing where the aforementioned data applies to. ",
        "properties" : {
          "ScopeID" : {
            "$ref" : "#/components/schemas/ScopeID"
          },
          "ScopeType" : {
            "$ref" : "#/components/schemas/ScopeType"
          },
          "FileFolderURL" : {
            "$ref" : "#/components/schemas/FileFolderURL"
          },
          "Location" : {
            "$ref" : "#/components/schemas/Location"
          },
          "Description" : {
            "$ref" : "#/components/schemas/Description"
          }
        },
        "type" : "object",
        "x-ob-usage-tips" : "Scope is an element designed to allow Orange Button users to add context to the object it is included in. For example, if a user is trying to share BillOfMaterials information for a given Job, they would be able to share only the BillOfMaterials object and provide context by setting the JobID in the ScopeID field and setting the ScopeType to Job. By following this approach, users can narrow payloads to the specific target data while contributing the necessary context that allows the Orange Button Taxonomy to be so powerful. "
      },
      "ScopeID" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "An identifier for the device, system, portfolio, region, etc.",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-item-type-group" : "",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "82b2f9ea-0a88-464f-80ef-6712662eef68"
          }
        } ]
      },
      "ScopeType" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "The scope where data applies.",
          "type" : "object",
          "x-ob-item-type" : "ScopeTypeItemType",
          "x-ob-item-type-group" : "",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "Site"
          }
        } ]
      },
      "PaymentMethodName" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "The name of the account that is meaningful to the person making the payment. This does not need to be unique or meaningful to anyone else. This value is not subject to Payment Card Industry (PCI) compliance.",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-item-type-group" : "",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "MyBusinessCard"
          }
        } ]
      },
      "EntityRole" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "Services or function provided by this entity.",
          "type" : "object",
          "x-ob-item-type" : "EntityRoleItemType",
          "x-ob-item-type-group" : "",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "AuthorityHavingJurisdiction"
          }
        } ]
      },
      "CertificationAgencyName" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "The name of the certification name",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "ISO"
          },
          "x-ob-item-type-group" : ""
        } ]
      },
      "CertificationDate" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "The date that certification was awarded to product.",
          "type" : "object",
          "x-ob-item-type" : "DateItemType",
          "x-ob-item-type-group" : "",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "2022-3-18"
          }
        } ]
      },
      "CertificationExpirationDate" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "The expiration date of a certification.",
          "type" : "object",
          "x-ob-item-type" : "DateItemType",
          "x-ob-item-type-group" : "",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "2022-4-21"
          }
        } ]
      },
      "CertificationName" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "The name of the certification.",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-item-type-group" : "",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "SunSpec Modbus for IEEE 1547"
          }
        } ]
      },
      "CertificateValue" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "The document identifier of a certification.",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-item-type-group" : "",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "ABC-123"
          }
        } ]
      },
      "CertificationStandard" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "A value from the enumerated list of the possible standards that a product can have.",
          "type" : "object",
          "x-ob-item-type" : "StandardTypeItemType",
          "x-ob-item-type-group" : "",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "IEC61215_2016"
          }
        } ]
      },
      "TestLab" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Entity"
        }, {
          "description" : "A laboratory that performs testing to standards. Implementation partner rather than the certifier of the standard. ",
          "properties" : {
            "TestLabName" : {
              "$ref" : "#/components/schemas/TestLabName"
            }
          },
          "type" : "object"
        } ]
      },
      "TestLabName" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "Name of the TestLab",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-item-type-group" : "",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "UL"
          }
        } ]
      },
      "Dimension" : {
        "description" : "Dimensions of an object",
        "properties" : {
          "Length" : {
            "$ref" : "#/components/schemas/Length"
          },
          "Width" : {
            "$ref" : "#/components/schemas/Width"
          },
          "Height" : {
            "$ref" : "#/components/schemas/Height"
          },
          "Mass" : {
            "$ref" : "#/components/schemas/Mass"
          },
          "Weight" : {
            "$ref" : "#/components/schemas/Weight"
          }
        },
        "type" : "object"
      },
      "Length" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementNumber"
        }, {
          "description" : "The length of the parent object",
          "type" : "object",
          "x-ob-item-type" : "LengthItemType",
          "x-ob-usage-tips" : "For irregularly shaped objects use this as a bounding box dimension.",
          "x-ob-sample-value" : {
            "Unit" : "mm",
            "Value" : 1048
          },
          "x-ob-item-type-group" : ""
        } ]
      },
      "Width" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementNumber"
        }, {
          "description" : "The width of the parent object",
          "type" : "object",
          "x-ob-item-type" : "LengthItemType",
          "x-ob-usage-tips" : "For irregularly shaped objects use this as a bounding box dimension.",
          "x-ob-sample-value" : {
            "Unit" : "mm",
            "Value" : 1765
          },
          "x-ob-item-type-group" : ""
        } ]
      },
      "Height" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementNumber"
        }, {
          "description" : "The height of the parent object",
          "type" : "object",
          "x-ob-item-type" : "LengthItemType",
          "x-ob-usage-tips" : "For irregularly shaped objects use this as a bounding box dimension",
          "x-ob-sample-value" : {
            "Unit" : "mm",
            "Value" : 35
          },
          "x-ob-item-type-group" : ""
        } ]
      },
      "Mass" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementNumber"
        }, {
          "description" : "The mass of the parent object. ",
          "type" : "object",
          "x-ob-item-type" : "MassItemType",
          "x-ob-usage-tips" : "Apply appropriate engineering consistency with related object Weight.",
          "x-ob-sample-value" : {
            "Unit" : "kg",
            "Value" : 20
          },
          "x-ob-item-type-group" : "MassUnitItemType"
        } ]
      },
      "Weight" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementNumber"
        }, {
          "description" : "The weight of the parent object",
          "type" : "object",
          "x-ob-item-type" : "MassItemType",
          "x-ob-usage-tips" : "Use appropriate engineering consistency with related object Mass",
          "x-ob-sample-value" : {
            "Unit" : "lb",
            "Value" : 9.81
          },
          "x-ob-item-type-group" : ""
        } ]
      },
      "Packages" : {
        "items" : {
          "$ref" : "#/components/schemas/Package"
        },
        "type" : "array"
      },
      "Package" : {
        "description" : "Elements describing a package",
        "properties" : {
          "Dimension" : {
            "$ref" : "#/components/schemas/Dimension"
          },
          "Description" : {
            "$ref" : "#/components/schemas/Description"
          },
          "Quantity" : {
            "$ref" : "#/components/schemas/Quantity"
          }
        },
        "type" : "object"
      },
      "Quantity" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementInteger"
        }, {
          "description" : "A quantity",
          "type" : "object",
          "x-ob-item-type" : "IntegerItemType",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : 10
          },
          "x-ob-item-type-group" : ""
        } ]
      },
      "SubstituteProducts" : {
        "items" : {
          "$ref" : "#/components/schemas/SubstituteProduct"
        },
        "type" : "array"
      },
      "SubstituteProduct" : {
        "description" : "A product that can serve as a replacement for a given Product.",
        "properties" : {
          "ProdCode" : {
            "$ref" : "#/components/schemas/ProdCode"
          },
          "ProdID" : {
            "$ref" : "#/components/schemas/ProdID"
          },
          "ProdMfr" : {
            "$ref" : "#/components/schemas/ProdMfr"
          },
          "ProdName" : {
            "$ref" : "#/components/schemas/ProdName"
          },
          "ProdType" : {
            "$ref" : "#/components/schemas/ProdType"
          }
        },
        "type" : "object"
      },
      "ManufacturerUPC" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "Universal Product Code (UPC) (technically refers to UPC-A) consists of 12 digits that are uniquely assigned to each trade item. This value is assigned by the manufacturer of the trade item/product. ",
          "type" : "object",
          "x-ob-item-type" : "StringItemType",
          "x-ob-item-type-group" : "",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "036000291452"
          }
        } ]
      },
      "AmountExtended" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementNumber"
        }, {
          "description" : "The total amount of the individual line item calculated by multiplying Quantity by UnitPrice",
          "type" : "object",
          "x-ob-item-type" : "MonetaryItemType",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Unit" : "USD",
            "Value" : 1000
          },
          "x-ob-item-type-group" : ""
        } ]
      },
      "CapacityDC" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementNumber"
        }, {
          "description" : "Capacity in DC at Standard Test Conditions",
          "type" : "object",
          "x-ob-item-type" : "PowerItemType",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Unit" : "kW",
            "Value" : 11.5
          },
          "x-ob-item-type-group" : "OBElectricalPower"
        } ]
      },
      "PVStringID" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "A UUID for identifying a specific string",
          "type" : "object",
          "x-ob-item-type" : "UUIDItemType",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "7a00622c-6bb0-4a3f-c6da-73090958db3a"
          },
          "x-ob-item-type-group" : ""
        } ]
      },
      "ModuleOrientation" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "The orientation of a module, can be Landscape or Portrait",
          "type" : "object",
          "x-ob-item-type" : "ModuleOrientationItemType",
          "x-ob-item-type-group" : "",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : { }
        } ]
      },
      "Area" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementNumber"
        }, {
          "description" : "Area",
          "type" : "object",
          "x-ob-item-type" : "AreaItemType",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Unit" : "sqft",
            "Value" : 10
          },
          "x-ob-item-type-group" : ""
        } ]
      },
      "RoofPlaneID" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "The UUID of the roofplane",
          "type" : "object",
          "x-ob-item-type" : "UUIDItemType",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "7a00622c-6bb0-4a3f-c6da-73090958db3a"
          },
          "x-ob-item-type-group" : ""
        } ]
      },
      "PVArrayID" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaxonomyElementString"
        }, {
          "description" : "A UUID for identifying a specific array",
          "type" : "object",
          "x-ob-item-type" : "UUIDItemType",
          "x-ob-item-type-group" : "",
          "x-ob-usage-tips" : "",
          "x-ob-sample-value" : {
            "Value" : "7a00622c-6bb0-4a3f-c6da-73090958db3a"
          }
        } ]
      }
    }
  },
  "x-ob-item-types" : { },
  "x-ob-item-type-group" : { }
}
[main] INFO  o.o.c.l.AbstractCSharpCodegen - Environment variable CSHARP_POST_PROCESS_FILE not defined so the C# code may not be properly formatted by uncrustify (0.66 or later) or other code formatter. To define it, try `export CSHARP_POST_PROCESS_FILE="/usr/local/bin/uncrustify --no-backup" && export UNCRUSTIFY_CONFIG=/path/to/uncrustify-rules.cfg` (Linux/Mac). Note: replace /path/to with the location of uncrustify-rules.cfg
[main] INFO  o.o.c.l.AbstractCSharpCodegen - NOTE: To enable file post-processing, 'enablePostProcessFile' must be set to `true` (--enable-post-process-file for CLI).
[main] WARN  o.o.c.languages.CSharpClientCodegen - If using built-in templates, RestSharp only supports netstandard 2.0 or later.
[main] WARN  o.o.c.languages.CSharpClientCodegen - If using built-in templates, RestSharp only supports netstandard 2.0 or later.
[main] WARN  o.o.c.languages.CSharpClientCodegen - If using built-in templates, RestSharp only supports netstandard 2.0 or later.
[main] WARN  o.o.c.languages.CSharpClientCodegen - If using built-in templates, RestSharp only supports netstandard 2.0 or later.
[main] WARN  o.o.c.languages.CSharpClientCodegen - If using built-in templates, RestSharp only supports netstandard 2.0 or later.
[main] WARN  o.o.c.languages.CSharpClientCodegen - If using built-in templates, RestSharp only supports netstandard 2.0 or later.
[main] WARN  o.o.c.languages.CSharpClientCodegen - If using built-in templates, RestSharp only supports netstandard 2.0 or later.
[main] WARN  o.o.c.languages.CSharpClientCodegen - If using built-in templates, RestSharp only supports netstandard 2.0 or later.
[main] WARN  o.o.c.languages.CSharpClientCodegen - If using built-in templates, RestSharp only supports netstandard 2.0 or later.
[main] WARN  o.o.c.languages.CSharpClientCodegen - If using built-in templates, RestSharp only supports netstandard 2.0 or later.
[main] INFO  o.o.c.languages.CSharpClientCodegen - Generating code for .NET Framework net8.0
[main] INFO  o.o.codegen.utils.URLPathUtils - 'host' (OAS 2.0) or 'servers' (OAS 3.0) not defined in the spec. Default to [http://localhost] for server URL [http://localhost/]
[main] INFO  o.o.codegen.utils.URLPathUtils - 'host' (OAS 2.0) or 'servers' (OAS 3.0) not defined in the spec. Default to [http://localhost] for server URL [http://localhost/]
[main] INFO  o.o.codegen.TemplateManager - writing file C:\progetti\Supernova\models\dotnet\SupernovaModels\.\.\Supernova\Model\Device.cs
[main] INFO  o.o.codegen.TemplateManager - Ignored C:\progetti\Supernova\models\dotnet\SupernovaModels\.\.\Supernova.Test\Model\DeviceTests.cs (Ignored by rule in ignore file.)
[main] INFO  o.o.codegen.TemplateManager - Ignored C:\progetti\Supernova\models\dotnet\SupernovaModels\.\docs\Device.md (Ignored by rule in ignore file.)
[main] INFO  o.o.codegen.DefaultGenerator - ############ Model info ############
[ {
  "importPath" : "Model.Device",
  "model" : {
    "parent" : "Device1",
    "parentSchema" : "Device_1",
    "interfaces" : [ "Device1" ],
    "anyOf" : [ ],
    "oneOf" : [ ],
    "allOf" : [ "Device1" ],
    "name" : "Device",
    "schemaName" : "Device",
    "classname" : "Device",
    "description" : "...TODO...",
    "classVarName" : "Device",
    "modelJson" : "{\r\n  \"type\" : \"object\",\r\n  \"description\" : \"...TODO...\",\r\n  \"allOf\" : [ {\r\n    \"$ref\" : \"#/components/schemas/Device_1\"\r\n  }, {\r\n    \"type\" : \"object\",\r\n    \"properties\" : {\r\n      \"Locations\" : {\r\n        \"type\" : \"array\",\r\n        \"items\" : {\r\n          \"$ref\" : \"#/components/schemas/Location\"\r\n        }\r\n      }\r\n    },\r\n    \"description\" : \"State of a Province of the mailing or physical address.\"\r\n  } ]\r\n}",
    "dataType" : "Device1",
    "classFilename" : "Device",
    "unescapedDescription" : "...TODO...",
    "isAlias" : false,
    "isString" : false,
    "isInteger" : false,
    "isLong" : false,
    "isNumber" : false,
    "isNumeric" : false,
    "isFloat" : false,
    "isDouble" : false,
    "isDate" : false,
    "isDateTime" : false,
    "isDecimal" : false,
    "isShort" : false,
    "isUnboundedInteger" : false,
    "isPrimitiveType" : false,
    "isBoolean" : false,
    "isFreeFormObject" : false,
    "additionalPropertiesIsAnyType" : true,
    "vars" : [ {
      "openApiType" : "array",
      "baseName" : "Locations",
      "getter" : "getLocations",
      "setter" : "setLocations",
      "dataType" : "List<Location>",
      "datatypeWithEnum" : "List<Location>",
      "name" : "Locations",
      "defaultValueWithParam" : " = data.Locations;",
      "baseType" : "List",
      "containerType" : "array",
      "containerTypeMapped" : "List",
      "jsonSchema" : "{\r\n  \"items\" : {\r\n    \"$ref\" : \"#/components/schemas/Location\"\r\n  },\r\n  \"type\" : \"array\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : true,
      "isModel" : false,
      "isContainer" : true,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : true,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : false,
      "items" : {
        "openApiType" : "Location",
        "baseName" : "Locations",
        "getter" : "getLocations",
        "setter" : "setLocations",
        "dataType" : "Location",
        "datatypeWithEnum" : "Location",
        "name" : "Locations",
        "defaultValueWithParam" : " = data.Locations;",
        "baseType" : "Location",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Location\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : true,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : {
          "x-ob-usage-tips" : ""
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "locations",
        "nameInPascalCase" : "Locations",
        "nameInSnakeCase" : "LOCATIONS",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/Location",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "Location",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "mostInnerItems" : {
        "openApiType" : "Location",
        "baseName" : "Locations",
        "getter" : "getLocations",
        "setter" : "setLocations",
        "dataType" : "Location",
        "datatypeWithEnum" : "Location",
        "name" : "Locations",
        "defaultValueWithParam" : " = data.Locations;",
        "baseType" : "Location",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Location\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : true,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : {
          "x-ob-usage-tips" : ""
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "locations",
        "nameInPascalCase" : "Locations",
        "nameInSnakeCase" : "LOCATIONS",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/Location",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "Location",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      },
      "vendorExtensions" : {
        "x-emit-default-value" : false,
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "locations",
      "nameInPascalCase" : "Locations",
      "nameInSnakeCase" : "LOCATIONS",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : true,
      "datatype" : "List<Location>",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    } ],
    "allVars" : [ {
      "openApiType" : "SerialNum",
      "baseName" : "SerialNum",
      "complexType" : "SerialNum",
      "getter" : "getSerialNum",
      "setter" : "setSerialNum",
      "dataType" : "SerialNum",
      "datatypeWithEnum" : "SerialNum",
      "name" : "SerialNum",
      "defaultValueWithParam" : " = data.SerialNum;",
      "baseType" : "SerialNum",
      "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/SerialNum\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : {
        "x-emit-default-value" : false,
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "serialNum",
      "nameInPascalCase" : "SerialNum",
      "nameInSnakeCase" : "SERIAL_NUM",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "ref" : "#/components/schemas/SerialNum",
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : false,
      "datatype" : "SerialNum",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "Description",
      "baseName" : "Description",
      "complexType" : "Description",
      "getter" : "getDescription",
      "setter" : "setDescription",
      "dataType" : "Description",
      "datatypeWithEnum" : "Description",
      "name" : "Description",
      "defaultValueWithParam" : " = data.Description;",
      "baseType" : "Description",
      "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Description\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : {
        "x-emit-default-value" : false,
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "description",
      "nameInPascalCase" : "Description",
      "nameInSnakeCase" : "DESCRIPTION",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "ref" : "#/components/schemas/Description",
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : false,
      "datatype" : "Description",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "URL",
      "baseName" : "URL",
      "complexType" : "URL",
      "getter" : "getURL",
      "setter" : "setURL",
      "dataType" : "URL",
      "datatypeWithEnum" : "URL",
      "name" : "URL",
      "defaultValueWithParam" : " = data.URL;",
      "baseType" : "URL",
      "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/URL\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : {
        "x-emit-default-value" : false,
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "uRL",
      "nameInPascalCase" : "URL",
      "nameInSnakeCase" : "U_R_L",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "ref" : "#/components/schemas/URL",
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : false,
      "datatype" : "URL",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "ProdCode",
      "baseName" : "ProdCode",
      "complexType" : "ProdCode",
      "getter" : "getProdCode",
      "setter" : "setProdCode",
      "dataType" : "ProdCode",
      "datatypeWithEnum" : "ProdCode",
      "name" : "ProdCode",
      "defaultValueWithParam" : " = data.ProdCode;",
      "baseType" : "ProdCode",
      "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/ProdCode\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : {
        "x-emit-default-value" : false,
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "prodCode",
      "nameInPascalCase" : "ProdCode",
      "nameInSnakeCase" : "PROD_CODE",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "ref" : "#/components/schemas/ProdCode",
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : false,
      "datatype" : "ProdCode",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "ProdID",
      "baseName" : "ProdID",
      "complexType" : "ProdID",
      "getter" : "getProdID",
      "setter" : "setProdID",
      "dataType" : "ProdID",
      "datatypeWithEnum" : "ProdID",
      "name" : "ProdID",
      "defaultValueWithParam" : " = data.ProdID;",
      "baseType" : "ProdID",
      "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/ProdID\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : {
        "x-emit-default-value" : false,
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "prodID",
      "nameInPascalCase" : "ProdID",
      "nameInSnakeCase" : "PROD_I_D",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "ref" : "#/components/schemas/ProdID",
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : false,
      "datatype" : "ProdID",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "Firmware",
      "baseName" : "Firmware",
      "complexType" : "Firmware",
      "getter" : "getFirmware",
      "setter" : "setFirmware",
      "dataType" : "Firmware",
      "datatypeWithEnum" : "Firmware",
      "name" : "Firmware",
      "defaultValueWithParam" : " = data.Firmware;",
      "baseType" : "Firmware",
      "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Firmware\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : {
        "x-emit-default-value" : false,
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "firmware",
      "nameInPascalCase" : "Firmware",
      "nameInSnakeCase" : "FIRMWARE",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "ref" : "#/components/schemas/Firmware",
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : false,
      "datatype" : "Firmware",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "MaintDateLast",
      "baseName" : "MaintDateLast",
      "complexType" : "MaintDateLast",
      "getter" : "getMaintDateLast",
      "setter" : "setMaintDateLast",
      "dataType" : "MaintDateLast",
      "datatypeWithEnum" : "MaintDateLast",
      "name" : "MaintDateLast",
      "defaultValueWithParam" : " = data.MaintDateLast;",
      "baseType" : "MaintDateLast",
      "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/MaintDateLast\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : {
        "x-emit-default-value" : false,
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "maintDateLast",
      "nameInPascalCase" : "MaintDateLast",
      "nameInSnakeCase" : "MAINT_DATE_LAST",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "ref" : "#/components/schemas/MaintDateLast",
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : false,
      "datatype" : "MaintDateLast",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "InServiceDate",
      "baseName" : "InServiceDate",
      "complexType" : "InServiceDate",
      "getter" : "getInServiceDate",
      "setter" : "setInServiceDate",
      "dataType" : "InServiceDate",
      "datatypeWithEnum" : "InServiceDate",
      "name" : "InServiceDate",
      "defaultValueWithParam" : " = data.InServiceDate;",
      "baseType" : "InServiceDate",
      "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/InServiceDate\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : {
        "x-emit-default-value" : false,
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "inServiceDate",
      "nameInPascalCase" : "InServiceDate",
      "nameInSnakeCase" : "IN_SERVICE_DATE",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "ref" : "#/components/schemas/InServiceDate",
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : false,
      "datatype" : "InServiceDate",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "Calibration",
      "baseName" : "Calibration",
      "complexType" : "Calibration",
      "getter" : "getCalibration",
      "setter" : "setCalibration",
      "dataType" : "Calibration",
      "datatypeWithEnum" : "Calibration",
      "name" : "Calibration",
      "defaultValueWithParam" : " = data.Calibration;",
      "baseType" : "Calibration",
      "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Calibration\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : {
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-emit-default-value" : false,
        "x-is-reference-type" : true,
        "x-ob-usage-tips" : ""
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "calibration",
      "nameInPascalCase" : "Calibration",
      "nameInSnakeCase" : "CALIBRATION",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "ref" : "#/components/schemas/Calibration",
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : false,
      "datatype" : "Calibration",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "array",
      "baseName" : "Warranties",
      "complexType" : "Warranty",
      "getter" : "getWarranties",
      "setter" : "setWarranties",
      "dataType" : "List<Warranty>",
      "datatypeWithEnum" : "List<Warranty>",
      "name" : "Warranties",
      "defaultValueWithParam" : " = data.Warranties;",
      "baseType" : "List",
      "containerType" : "array",
      "containerTypeMapped" : "List",
      "jsonSchema" : "{\r\n  \"items\" : {\r\n    \"$ref\" : \"#/components/schemas/Warranty\"\r\n  },\r\n  \"type\" : \"array\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : true,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : true,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "items" : {
        "openApiType" : "Warranty",
        "baseName" : "Warranties",
        "complexType" : "Warranty",
        "getter" : "getWarranties",
        "setter" : "setWarranties",
        "dataType" : "Warranty",
        "datatypeWithEnum" : "Warranty",
        "name" : "Warranties",
        "defaultValueWithParam" : " = data.Warranties;",
        "baseType" : "Warranty",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Warranty\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "warranties",
        "nameInPascalCase" : "Warranties",
        "nameInSnakeCase" : "WARRANTIES",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/Warranty",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "Warranty",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "mostInnerItems" : {
        "openApiType" : "Warranty",
        "baseName" : "Warranties",
        "complexType" : "Warranty",
        "getter" : "getWarranties",
        "setter" : "setWarranties",
        "dataType" : "Warranty",
        "datatypeWithEnum" : "Warranty",
        "name" : "Warranties",
        "defaultValueWithParam" : " = data.Warranties;",
        "baseType" : "Warranty",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Warranty\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "warranties",
        "nameInPascalCase" : "Warranties",
        "nameInSnakeCase" : "WARRANTIES",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/Warranty",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "Warranty",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      },
      "vendorExtensions" : {
        "x-emit-default-value" : false,
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "warranties",
      "nameInPascalCase" : "Warranties",
      "nameInSnakeCase" : "WARRANTIES",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : true,
      "datatype" : "List<Warranty>",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "DeviceType",
      "baseName" : "DeviceType",
      "complexType" : "DeviceType",
      "getter" : "getDeviceType",
      "setter" : "setDeviceType",
      "dataType" : "DeviceType",
      "datatypeWithEnum" : "DeviceType",
      "name" : "DeviceType",
      "defaultValueWithParam" : " = data.DeviceType;",
      "baseType" : "DeviceType",
      "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/DeviceType\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : {
        "x-emit-default-value" : false,
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "deviceType",
      "nameInPascalCase" : "DeviceType",
      "nameInSnakeCase" : "DEVICE_TYPE",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "ref" : "#/components/schemas/DeviceType",
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : false,
      "datatype" : "DeviceType",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "array",
      "baseName" : "Components",
      "complexType" : "Component",
      "getter" : "getComponents",
      "setter" : "setComponents",
      "dataType" : "List<Component>",
      "datatypeWithEnum" : "List<Component>",
      "name" : "Components",
      "defaultValueWithParam" : " = data.Components;",
      "baseType" : "List",
      "containerType" : "array",
      "containerTypeMapped" : "List",
      "jsonSchema" : "{\r\n  \"items\" : {\r\n    \"$ref\" : \"#/components/schemas/Component\"\r\n  },\r\n  \"type\" : \"array\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : true,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : true,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "items" : {
        "openApiType" : "Component",
        "baseName" : "Components",
        "complexType" : "Component",
        "getter" : "getComponents",
        "setter" : "setComponents",
        "dataType" : "Component",
        "datatypeWithEnum" : "Component",
        "name" : "Components",
        "defaultValueWithParam" : " = data.Components;",
        "baseType" : "Component",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Component\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "components",
        "nameInPascalCase" : "Components",
        "nameInSnakeCase" : "COMPONENTS",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/Component",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "Component",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "mostInnerItems" : {
        "openApiType" : "Component",
        "baseName" : "Components",
        "complexType" : "Component",
        "getter" : "getComponents",
        "setter" : "setComponents",
        "dataType" : "Component",
        "datatypeWithEnum" : "Component",
        "name" : "Components",
        "defaultValueWithParam" : " = data.Components;",
        "baseType" : "Component",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Component\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "components",
        "nameInPascalCase" : "Components",
        "nameInSnakeCase" : "COMPONENTS",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/Component",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "Component",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      },
      "vendorExtensions" : {
        "x-emit-default-value" : false,
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "components",
      "nameInPascalCase" : "Components",
      "nameInSnakeCase" : "COMPONENTS",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : true,
      "datatype" : "List<Component>",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "DeviceName",
      "baseName" : "DeviceName",
      "complexType" : "DeviceName",
      "getter" : "getDeviceName",
      "setter" : "setDeviceName",
      "dataType" : "DeviceName",
      "datatypeWithEnum" : "DeviceName",
      "name" : "DeviceName",
      "defaultValueWithParam" : " = data.DeviceName;",
      "baseType" : "DeviceName",
      "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/DeviceName\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : {
        "x-emit-default-value" : false,
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "deviceName",
      "nameInPascalCase" : "DeviceName",
      "nameInSnakeCase" : "DEVICE_NAME",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "ref" : "#/components/schemas/DeviceName",
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : false,
      "datatype" : "DeviceName",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "DeviceUUID",
      "baseName" : "DeviceUUID",
      "complexType" : "DeviceUUID",
      "getter" : "getDeviceUUID",
      "setter" : "setDeviceUUID",
      "dataType" : "DeviceUUID",
      "datatypeWithEnum" : "DeviceUUID",
      "name" : "DeviceUUID",
      "defaultValueWithParam" : " = data.DeviceUUID;",
      "baseType" : "DeviceUUID",
      "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/DeviceUUID\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : {
        "x-emit-default-value" : false,
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "deviceUUID",
      "nameInPascalCase" : "DeviceUUID",
      "nameInSnakeCase" : "DEVICE_U_U_I_D",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "ref" : "#/components/schemas/DeviceUUID",
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : false,
      "datatype" : "DeviceUUID",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "array",
      "baseName" : "CryptographicKeyIDs",
      "complexType" : "CryptographicKeyID",
      "getter" : "getCryptographicKeyIDs",
      "setter" : "setCryptographicKeyIDs",
      "dataType" : "List<CryptographicKeyID>",
      "datatypeWithEnum" : "List<CryptographicKeyID>",
      "name" : "CryptographicKeyIDs",
      "defaultValueWithParam" : " = data.CryptographicKeyIDs;",
      "baseType" : "List",
      "containerType" : "array",
      "containerTypeMapped" : "List",
      "jsonSchema" : "{\r\n  \"items\" : {\r\n    \"$ref\" : \"#/components/schemas/CryptographicKeyID\"\r\n  },\r\n  \"type\" : \"array\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : true,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : true,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "items" : {
        "openApiType" : "CryptographicKeyID",
        "baseName" : "CryptographicKeyIDs",
        "complexType" : "CryptographicKeyID",
        "getter" : "getCryptographicKeyIDs",
        "setter" : "setCryptographicKeyIDs",
        "dataType" : "CryptographicKeyID",
        "datatypeWithEnum" : "CryptographicKeyID",
        "name" : "CryptographicKeyIDs",
        "defaultValueWithParam" : " = data.CryptographicKeyIDs;",
        "baseType" : "CryptographicKeyID",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/CryptographicKeyID\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "cryptographicKeyIDs",
        "nameInPascalCase" : "CryptographicKeyIDs",
        "nameInSnakeCase" : "CRYPTOGRAPHIC_KEY_I_DS",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/CryptographicKeyID",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "CryptographicKeyID",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "mostInnerItems" : {
        "openApiType" : "CryptographicKeyID",
        "baseName" : "CryptographicKeyIDs",
        "complexType" : "CryptographicKeyID",
        "getter" : "getCryptographicKeyIDs",
        "setter" : "setCryptographicKeyIDs",
        "dataType" : "CryptographicKeyID",
        "datatypeWithEnum" : "CryptographicKeyID",
        "name" : "CryptographicKeyIDs",
        "defaultValueWithParam" : " = data.CryptographicKeyIDs;",
        "baseType" : "CryptographicKeyID",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/CryptographicKeyID\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "cryptographicKeyIDs",
        "nameInPascalCase" : "CryptographicKeyIDs",
        "nameInSnakeCase" : "CRYPTOGRAPHIC_KEY_I_DS",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/CryptographicKeyID",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "CryptographicKeyID",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      },
      "vendorExtensions" : {
        "x-emit-default-value" : false,
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "cryptographicKeyIDs",
      "nameInPascalCase" : "CryptographicKeyIDs",
      "nameInSnakeCase" : "CRYPTOGRAPHIC_KEY_I_DS",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : true,
      "datatype" : "List<CryptographicKeyID>",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "IsMaintainable",
      "baseName" : "IsMaintainable",
      "complexType" : "IsMaintainable",
      "getter" : "getIsMaintainable",
      "setter" : "setIsMaintainable",
      "dataType" : "IsMaintainable",
      "datatypeWithEnum" : "IsMaintainable",
      "name" : "IsMaintainable",
      "defaultValueWithParam" : " = data.IsMaintainable;",
      "baseType" : "IsMaintainable",
      "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/IsMaintainable\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : {
        "x-emit-default-value" : false,
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "isMaintainable",
      "nameInPascalCase" : "IsMaintainable",
      "nameInSnakeCase" : "IS_MAINTAINABLE",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "ref" : "#/components/schemas/IsMaintainable",
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : false,
      "datatype" : "IsMaintainable",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "array",
      "baseName" : "Nodes",
      "complexType" : "Node",
      "getter" : "getNodes",
      "setter" : "setNodes",
      "dataType" : "List<Node>",
      "datatypeWithEnum" : "List<Node>",
      "name" : "Nodes",
      "defaultValueWithParam" : " = data.Nodes;",
      "baseType" : "List",
      "containerType" : "array",
      "containerTypeMapped" : "List",
      "jsonSchema" : "{\r\n  \"items\" : {\r\n    \"$ref\" : \"#/components/schemas/Node\"\r\n  },\r\n  \"type\" : \"array\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : true,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : true,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "items" : {
        "openApiType" : "Node",
        "baseName" : "Nodes",
        "complexType" : "Node",
        "getter" : "getNodes",
        "setter" : "setNodes",
        "dataType" : "Node",
        "datatypeWithEnum" : "Node",
        "name" : "Nodes",
        "defaultValueWithParam" : " = data.Nodes;",
        "baseType" : "Node",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Node\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "nodes",
        "nameInPascalCase" : "Nodes",
        "nameInSnakeCase" : "NODES",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/Node",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "Node",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "mostInnerItems" : {
        "openApiType" : "Node",
        "baseName" : "Nodes",
        "complexType" : "Node",
        "getter" : "getNodes",
        "setter" : "setNodes",
        "dataType" : "Node",
        "datatypeWithEnum" : "Node",
        "name" : "Nodes",
        "defaultValueWithParam" : " = data.Nodes;",
        "baseType" : "Node",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Node\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "nodes",
        "nameInPascalCase" : "Nodes",
        "nameInSnakeCase" : "NODES",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/Node",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "Node",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      },
      "vendorExtensions" : {
        "x-emit-default-value" : false,
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "nodes",
      "nameInPascalCase" : "Nodes",
      "nameInSnakeCase" : "NODES",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : true,
      "datatype" : "List<Node>",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "array",
      "baseName" : "Locations",
      "getter" : "getLocations",
      "setter" : "setLocations",
      "dataType" : "List<Location>",
      "datatypeWithEnum" : "List<Location>",
      "name" : "Locations",
      "defaultValueWithParam" : " = data.Locations;",
      "baseType" : "List",
      "containerType" : "array",
      "containerTypeMapped" : "List",
      "jsonSchema" : "{\r\n  \"items\" : {\r\n    \"$ref\" : \"#/components/schemas/Location\"\r\n  },\r\n  \"type\" : \"array\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : true,
      "isModel" : false,
      "isContainer" : true,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : true,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : false,
      "items" : {
        "openApiType" : "Location",
        "baseName" : "Locations",
        "getter" : "getLocations",
        "setter" : "setLocations",
        "dataType" : "Location",
        "datatypeWithEnum" : "Location",
        "name" : "Locations",
        "defaultValueWithParam" : " = data.Locations;",
        "baseType" : "Location",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Location\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : true,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : {
          "x-ob-usage-tips" : ""
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "locations",
        "nameInPascalCase" : "Locations",
        "nameInSnakeCase" : "LOCATIONS",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/Location",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "Location",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "mostInnerItems" : {
        "openApiType" : "Location",
        "baseName" : "Locations",
        "getter" : "getLocations",
        "setter" : "setLocations",
        "dataType" : "Location",
        "datatypeWithEnum" : "Location",
        "name" : "Locations",
        "defaultValueWithParam" : " = data.Locations;",
        "baseType" : "Location",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Location\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : true,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : {
          "x-ob-usage-tips" : ""
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "locations",
        "nameInPascalCase" : "Locations",
        "nameInSnakeCase" : "LOCATIONS",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/Location",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "Location",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      },
      "vendorExtensions" : {
        "x-emit-default-value" : false,
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "locations",
      "nameInPascalCase" : "Locations",
      "nameInSnakeCase" : "LOCATIONS",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : true,
      "datatype" : "List<Location>",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    } ],
    "requiredVars" : [ ],
    "optionalVars" : [ {
      "openApiType" : "array",
      "baseName" : "Locations",
      "getter" : "getLocations",
      "setter" : "setLocations",
      "dataType" : "List<Location>",
      "datatypeWithEnum" : "List<Location>",
      "name" : "Locations",
      "defaultValueWithParam" : " = data.Locations;",
      "baseType" : "List",
      "containerType" : "array",
      "containerTypeMapped" : "List",
      "jsonSchema" : "{\r\n  \"items\" : {\r\n    \"$ref\" : \"#/components/schemas/Location\"\r\n  },\r\n  \"type\" : \"array\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : true,
      "isModel" : false,
      "isContainer" : true,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : true,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : false,
      "items" : {
        "openApiType" : "Location",
        "baseName" : "Locations",
        "getter" : "getLocations",
        "setter" : "setLocations",
        "dataType" : "Location",
        "datatypeWithEnum" : "Location",
        "name" : "Locations",
        "defaultValueWithParam" : " = data.Locations;",
        "baseType" : "Location",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Location\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : true,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : {
          "x-ob-usage-tips" : ""
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "locations",
        "nameInPascalCase" : "Locations",
        "nameInSnakeCase" : "LOCATIONS",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/Location",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "Location",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "mostInnerItems" : {
        "openApiType" : "Location",
        "baseName" : "Locations",
        "getter" : "getLocations",
        "setter" : "setLocations",
        "dataType" : "Location",
        "datatypeWithEnum" : "Location",
        "name" : "Locations",
        "defaultValueWithParam" : " = data.Locations;",
        "baseType" : "Location",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Location\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : true,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : {
          "x-ob-usage-tips" : ""
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "locations",
        "nameInPascalCase" : "Locations",
        "nameInSnakeCase" : "LOCATIONS",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/Location",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "Location",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      },
      "vendorExtensions" : {
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "locations",
      "nameInPascalCase" : "Locations",
      "nameInSnakeCase" : "LOCATIONS",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : true,
      "datatype" : "List<Location>",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "SerialNum",
      "baseName" : "SerialNum",
      "complexType" : "SerialNum",
      "getter" : "getSerialNum",
      "setter" : "setSerialNum",
      "dataType" : "SerialNum",
      "datatypeWithEnum" : "SerialNum",
      "name" : "SerialNum",
      "defaultValueWithParam" : " = data.SerialNum;",
      "baseType" : "SerialNum",
      "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/SerialNum\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : {
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "serialNum",
      "nameInPascalCase" : "SerialNum",
      "nameInSnakeCase" : "SERIAL_NUM",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "ref" : "#/components/schemas/SerialNum",
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : false,
      "datatype" : "SerialNum",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "Description",
      "baseName" : "Description",
      "complexType" : "Description",
      "getter" : "getDescription",
      "setter" : "setDescription",
      "dataType" : "Description",
      "datatypeWithEnum" : "Description",
      "name" : "Description",
      "defaultValueWithParam" : " = data.Description;",
      "baseType" : "Description",
      "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Description\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : {
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "description",
      "nameInPascalCase" : "Description",
      "nameInSnakeCase" : "DESCRIPTION",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "ref" : "#/components/schemas/Description",
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : false,
      "datatype" : "Description",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "URL",
      "baseName" : "URL",
      "complexType" : "URL",
      "getter" : "getURL",
      "setter" : "setURL",
      "dataType" : "URL",
      "datatypeWithEnum" : "URL",
      "name" : "URL",
      "defaultValueWithParam" : " = data.URL;",
      "baseType" : "URL",
      "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/URL\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : {
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "uRL",
      "nameInPascalCase" : "URL",
      "nameInSnakeCase" : "U_R_L",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "ref" : "#/components/schemas/URL",
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : false,
      "datatype" : "URL",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "ProdCode",
      "baseName" : "ProdCode",
      "complexType" : "ProdCode",
      "getter" : "getProdCode",
      "setter" : "setProdCode",
      "dataType" : "ProdCode",
      "datatypeWithEnum" : "ProdCode",
      "name" : "ProdCode",
      "defaultValueWithParam" : " = data.ProdCode;",
      "baseType" : "ProdCode",
      "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/ProdCode\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : {
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "prodCode",
      "nameInPascalCase" : "ProdCode",
      "nameInSnakeCase" : "PROD_CODE",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "ref" : "#/components/schemas/ProdCode",
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : false,
      "datatype" : "ProdCode",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "ProdID",
      "baseName" : "ProdID",
      "complexType" : "ProdID",
      "getter" : "getProdID",
      "setter" : "setProdID",
      "dataType" : "ProdID",
      "datatypeWithEnum" : "ProdID",
      "name" : "ProdID",
      "defaultValueWithParam" : " = data.ProdID;",
      "baseType" : "ProdID",
      "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/ProdID\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : {
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "prodID",
      "nameInPascalCase" : "ProdID",
      "nameInSnakeCase" : "PROD_I_D",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "ref" : "#/components/schemas/ProdID",
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : false,
      "datatype" : "ProdID",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "Firmware",
      "baseName" : "Firmware",
      "complexType" : "Firmware",
      "getter" : "getFirmware",
      "setter" : "setFirmware",
      "dataType" : "Firmware",
      "datatypeWithEnum" : "Firmware",
      "name" : "Firmware",
      "defaultValueWithParam" : " = data.Firmware;",
      "baseType" : "Firmware",
      "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Firmware\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : {
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "firmware",
      "nameInPascalCase" : "Firmware",
      "nameInSnakeCase" : "FIRMWARE",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "ref" : "#/components/schemas/Firmware",
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : false,
      "datatype" : "Firmware",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "MaintDateLast",
      "baseName" : "MaintDateLast",
      "complexType" : "MaintDateLast",
      "getter" : "getMaintDateLast",
      "setter" : "setMaintDateLast",
      "dataType" : "MaintDateLast",
      "datatypeWithEnum" : "MaintDateLast",
      "name" : "MaintDateLast",
      "defaultValueWithParam" : " = data.MaintDateLast;",
      "baseType" : "MaintDateLast",
      "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/MaintDateLast\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : {
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "maintDateLast",
      "nameInPascalCase" : "MaintDateLast",
      "nameInSnakeCase" : "MAINT_DATE_LAST",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "ref" : "#/components/schemas/MaintDateLast",
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : false,
      "datatype" : "MaintDateLast",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "InServiceDate",
      "baseName" : "InServiceDate",
      "complexType" : "InServiceDate",
      "getter" : "getInServiceDate",
      "setter" : "setInServiceDate",
      "dataType" : "InServiceDate",
      "datatypeWithEnum" : "InServiceDate",
      "name" : "InServiceDate",
      "defaultValueWithParam" : " = data.InServiceDate;",
      "baseType" : "InServiceDate",
      "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/InServiceDate\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : {
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "inServiceDate",
      "nameInPascalCase" : "InServiceDate",
      "nameInSnakeCase" : "IN_SERVICE_DATE",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "ref" : "#/components/schemas/InServiceDate",
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : false,
      "datatype" : "InServiceDate",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "Calibration",
      "baseName" : "Calibration",
      "complexType" : "Calibration",
      "getter" : "getCalibration",
      "setter" : "setCalibration",
      "dataType" : "Calibration",
      "datatypeWithEnum" : "Calibration",
      "name" : "Calibration",
      "defaultValueWithParam" : " = data.Calibration;",
      "baseType" : "Calibration",
      "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Calibration\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : {
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true,
        "x-ob-usage-tips" : ""
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "calibration",
      "nameInPascalCase" : "Calibration",
      "nameInSnakeCase" : "CALIBRATION",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "ref" : "#/components/schemas/Calibration",
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : false,
      "datatype" : "Calibration",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "array",
      "baseName" : "Warranties",
      "complexType" : "Warranty",
      "getter" : "getWarranties",
      "setter" : "setWarranties",
      "dataType" : "List<Warranty>",
      "datatypeWithEnum" : "List<Warranty>",
      "name" : "Warranties",
      "defaultValueWithParam" : " = data.Warranties;",
      "baseType" : "List",
      "containerType" : "array",
      "containerTypeMapped" : "List",
      "jsonSchema" : "{\r\n  \"items\" : {\r\n    \"$ref\" : \"#/components/schemas/Warranty\"\r\n  },\r\n  \"type\" : \"array\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : true,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : true,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "items" : {
        "openApiType" : "Warranty",
        "baseName" : "Warranties",
        "complexType" : "Warranty",
        "getter" : "getWarranties",
        "setter" : "setWarranties",
        "dataType" : "Warranty",
        "datatypeWithEnum" : "Warranty",
        "name" : "Warranties",
        "defaultValueWithParam" : " = data.Warranties;",
        "baseType" : "Warranty",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Warranty\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "warranties",
        "nameInPascalCase" : "Warranties",
        "nameInSnakeCase" : "WARRANTIES",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/Warranty",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "Warranty",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "mostInnerItems" : {
        "openApiType" : "Warranty",
        "baseName" : "Warranties",
        "complexType" : "Warranty",
        "getter" : "getWarranties",
        "setter" : "setWarranties",
        "dataType" : "Warranty",
        "datatypeWithEnum" : "Warranty",
        "name" : "Warranties",
        "defaultValueWithParam" : " = data.Warranties;",
        "baseType" : "Warranty",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Warranty\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "warranties",
        "nameInPascalCase" : "Warranties",
        "nameInSnakeCase" : "WARRANTIES",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/Warranty",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "Warranty",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      },
      "vendorExtensions" : {
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "warranties",
      "nameInPascalCase" : "Warranties",
      "nameInSnakeCase" : "WARRANTIES",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : true,
      "datatype" : "List<Warranty>",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "DeviceType",
      "baseName" : "DeviceType",
      "complexType" : "DeviceType",
      "getter" : "getDeviceType",
      "setter" : "setDeviceType",
      "dataType" : "DeviceType",
      "datatypeWithEnum" : "DeviceType",
      "name" : "DeviceType",
      "defaultValueWithParam" : " = data.DeviceType;",
      "baseType" : "DeviceType",
      "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/DeviceType\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : {
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "deviceType",
      "nameInPascalCase" : "DeviceType",
      "nameInSnakeCase" : "DEVICE_TYPE",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "ref" : "#/components/schemas/DeviceType",
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : false,
      "datatype" : "DeviceType",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "array",
      "baseName" : "Components",
      "complexType" : "Component",
      "getter" : "getComponents",
      "setter" : "setComponents",
      "dataType" : "List<Component>",
      "datatypeWithEnum" : "List<Component>",
      "name" : "Components",
      "defaultValueWithParam" : " = data.Components;",
      "baseType" : "List",
      "containerType" : "array",
      "containerTypeMapped" : "List",
      "jsonSchema" : "{\r\n  \"items\" : {\r\n    \"$ref\" : \"#/components/schemas/Component\"\r\n  },\r\n  \"type\" : \"array\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : true,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : true,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "items" : {
        "openApiType" : "Component",
        "baseName" : "Components",
        "complexType" : "Component",
        "getter" : "getComponents",
        "setter" : "setComponents",
        "dataType" : "Component",
        "datatypeWithEnum" : "Component",
        "name" : "Components",
        "defaultValueWithParam" : " = data.Components;",
        "baseType" : "Component",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Component\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "components",
        "nameInPascalCase" : "Components",
        "nameInSnakeCase" : "COMPONENTS",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/Component",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "Component",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "mostInnerItems" : {
        "openApiType" : "Component",
        "baseName" : "Components",
        "complexType" : "Component",
        "getter" : "getComponents",
        "setter" : "setComponents",
        "dataType" : "Component",
        "datatypeWithEnum" : "Component",
        "name" : "Components",
        "defaultValueWithParam" : " = data.Components;",
        "baseType" : "Component",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Component\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "components",
        "nameInPascalCase" : "Components",
        "nameInSnakeCase" : "COMPONENTS",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/Component",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "Component",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      },
      "vendorExtensions" : {
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "components",
      "nameInPascalCase" : "Components",
      "nameInSnakeCase" : "COMPONENTS",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : true,
      "datatype" : "List<Component>",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "DeviceName",
      "baseName" : "DeviceName",
      "complexType" : "DeviceName",
      "getter" : "getDeviceName",
      "setter" : "setDeviceName",
      "dataType" : "DeviceName",
      "datatypeWithEnum" : "DeviceName",
      "name" : "DeviceName",
      "defaultValueWithParam" : " = data.DeviceName;",
      "baseType" : "DeviceName",
      "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/DeviceName\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : {
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "deviceName",
      "nameInPascalCase" : "DeviceName",
      "nameInSnakeCase" : "DEVICE_NAME",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "ref" : "#/components/schemas/DeviceName",
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : false,
      "datatype" : "DeviceName",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "DeviceUUID",
      "baseName" : "DeviceUUID",
      "complexType" : "DeviceUUID",
      "getter" : "getDeviceUUID",
      "setter" : "setDeviceUUID",
      "dataType" : "DeviceUUID",
      "datatypeWithEnum" : "DeviceUUID",
      "name" : "DeviceUUID",
      "defaultValueWithParam" : " = data.DeviceUUID;",
      "baseType" : "DeviceUUID",
      "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/DeviceUUID\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : {
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "deviceUUID",
      "nameInPascalCase" : "DeviceUUID",
      "nameInSnakeCase" : "DEVICE_U_U_I_D",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "ref" : "#/components/schemas/DeviceUUID",
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : false,
      "datatype" : "DeviceUUID",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "array",
      "baseName" : "CryptographicKeyIDs",
      "complexType" : "CryptographicKeyID",
      "getter" : "getCryptographicKeyIDs",
      "setter" : "setCryptographicKeyIDs",
      "dataType" : "List<CryptographicKeyID>",
      "datatypeWithEnum" : "List<CryptographicKeyID>",
      "name" : "CryptographicKeyIDs",
      "defaultValueWithParam" : " = data.CryptographicKeyIDs;",
      "baseType" : "List",
      "containerType" : "array",
      "containerTypeMapped" : "List",
      "jsonSchema" : "{\r\n  \"items\" : {\r\n    \"$ref\" : \"#/components/schemas/CryptographicKeyID\"\r\n  },\r\n  \"type\" : \"array\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : true,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : true,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "items" : {
        "openApiType" : "CryptographicKeyID",
        "baseName" : "CryptographicKeyIDs",
        "complexType" : "CryptographicKeyID",
        "getter" : "getCryptographicKeyIDs",
        "setter" : "setCryptographicKeyIDs",
        "dataType" : "CryptographicKeyID",
        "datatypeWithEnum" : "CryptographicKeyID",
        "name" : "CryptographicKeyIDs",
        "defaultValueWithParam" : " = data.CryptographicKeyIDs;",
        "baseType" : "CryptographicKeyID",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/CryptographicKeyID\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "cryptographicKeyIDs",
        "nameInPascalCase" : "CryptographicKeyIDs",
        "nameInSnakeCase" : "CRYPTOGRAPHIC_KEY_I_DS",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/CryptographicKeyID",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "CryptographicKeyID",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "mostInnerItems" : {
        "openApiType" : "CryptographicKeyID",
        "baseName" : "CryptographicKeyIDs",
        "complexType" : "CryptographicKeyID",
        "getter" : "getCryptographicKeyIDs",
        "setter" : "setCryptographicKeyIDs",
        "dataType" : "CryptographicKeyID",
        "datatypeWithEnum" : "CryptographicKeyID",
        "name" : "CryptographicKeyIDs",
        "defaultValueWithParam" : " = data.CryptographicKeyIDs;",
        "baseType" : "CryptographicKeyID",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/CryptographicKeyID\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "cryptographicKeyIDs",
        "nameInPascalCase" : "CryptographicKeyIDs",
        "nameInSnakeCase" : "CRYPTOGRAPHIC_KEY_I_DS",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/CryptographicKeyID",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "CryptographicKeyID",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      },
      "vendorExtensions" : {
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "cryptographicKeyIDs",
      "nameInPascalCase" : "CryptographicKeyIDs",
      "nameInSnakeCase" : "CRYPTOGRAPHIC_KEY_I_DS",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : true,
      "datatype" : "List<CryptographicKeyID>",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "IsMaintainable",
      "baseName" : "IsMaintainable",
      "complexType" : "IsMaintainable",
      "getter" : "getIsMaintainable",
      "setter" : "setIsMaintainable",
      "dataType" : "IsMaintainable",
      "datatypeWithEnum" : "IsMaintainable",
      "name" : "IsMaintainable",
      "defaultValueWithParam" : " = data.IsMaintainable;",
      "baseType" : "IsMaintainable",
      "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/IsMaintainable\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : {
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "isMaintainable",
      "nameInPascalCase" : "IsMaintainable",
      "nameInSnakeCase" : "IS_MAINTAINABLE",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "ref" : "#/components/schemas/IsMaintainable",
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : false,
      "datatype" : "IsMaintainable",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "array",
      "baseName" : "Nodes",
      "complexType" : "Node",
      "getter" : "getNodes",
      "setter" : "setNodes",
      "dataType" : "List<Node>",
      "datatypeWithEnum" : "List<Node>",
      "name" : "Nodes",
      "defaultValueWithParam" : " = data.Nodes;",
      "baseType" : "List",
      "containerType" : "array",
      "containerTypeMapped" : "List",
      "jsonSchema" : "{\r\n  \"items\" : {\r\n    \"$ref\" : \"#/components/schemas/Node\"\r\n  },\r\n  \"type\" : \"array\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : true,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : true,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "items" : {
        "openApiType" : "Node",
        "baseName" : "Nodes",
        "complexType" : "Node",
        "getter" : "getNodes",
        "setter" : "setNodes",
        "dataType" : "Node",
        "datatypeWithEnum" : "Node",
        "name" : "Nodes",
        "defaultValueWithParam" : " = data.Nodes;",
        "baseType" : "Node",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Node\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "nodes",
        "nameInPascalCase" : "Nodes",
        "nameInSnakeCase" : "NODES",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/Node",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "Node",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "mostInnerItems" : {
        "openApiType" : "Node",
        "baseName" : "Nodes",
        "complexType" : "Node",
        "getter" : "getNodes",
        "setter" : "setNodes",
        "dataType" : "Node",
        "datatypeWithEnum" : "Node",
        "name" : "Nodes",
        "defaultValueWithParam" : " = data.Nodes;",
        "baseType" : "Node",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Node\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "nodes",
        "nameInPascalCase" : "Nodes",
        "nameInSnakeCase" : "NODES",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/Node",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "Node",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      },
      "vendorExtensions" : {
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "nodes",
      "nameInPascalCase" : "Nodes",
      "nameInSnakeCase" : "NODES",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : true,
      "datatype" : "List<Node>",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    } ],
    "readOnlyVars" : [ ],
    "readWriteVars" : [ {
      "openApiType" : "array",
      "baseName" : "Locations",
      "getter" : "getLocations",
      "setter" : "setLocations",
      "dataType" : "List<Location>",
      "datatypeWithEnum" : "List<Location>",
      "name" : "Locations",
      "defaultValueWithParam" : " = data.Locations;",
      "baseType" : "List",
      "containerType" : "array",
      "containerTypeMapped" : "List",
      "jsonSchema" : "{\r\n  \"items\" : {\r\n    \"$ref\" : \"#/components/schemas/Location\"\r\n  },\r\n  \"type\" : \"array\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : true,
      "isModel" : false,
      "isContainer" : true,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : true,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : false,
      "items" : {
        "openApiType" : "Location",
        "baseName" : "Locations",
        "getter" : "getLocations",
        "setter" : "setLocations",
        "dataType" : "Location",
        "datatypeWithEnum" : "Location",
        "name" : "Locations",
        "defaultValueWithParam" : " = data.Locations;",
        "baseType" : "Location",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Location\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : true,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : {
          "x-ob-usage-tips" : ""
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "locations",
        "nameInPascalCase" : "Locations",
        "nameInSnakeCase" : "LOCATIONS",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/Location",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "Location",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "mostInnerItems" : {
        "openApiType" : "Location",
        "baseName" : "Locations",
        "getter" : "getLocations",
        "setter" : "setLocations",
        "dataType" : "Location",
        "datatypeWithEnum" : "Location",
        "name" : "Locations",
        "defaultValueWithParam" : " = data.Locations;",
        "baseType" : "Location",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Location\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : true,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : {
          "x-ob-usage-tips" : ""
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "locations",
        "nameInPascalCase" : "Locations",
        "nameInSnakeCase" : "LOCATIONS",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/Location",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "Location",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      },
      "vendorExtensions" : {
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "locations",
      "nameInPascalCase" : "Locations",
      "nameInSnakeCase" : "LOCATIONS",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : true,
      "datatype" : "List<Location>",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "SerialNum",
      "baseName" : "SerialNum",
      "complexType" : "SerialNum",
      "getter" : "getSerialNum",
      "setter" : "setSerialNum",
      "dataType" : "SerialNum",
      "datatypeWithEnum" : "SerialNum",
      "name" : "SerialNum",
      "defaultValueWithParam" : " = data.SerialNum;",
      "baseType" : "SerialNum",
      "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/SerialNum\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : {
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "serialNum",
      "nameInPascalCase" : "SerialNum",
      "nameInSnakeCase" : "SERIAL_NUM",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "ref" : "#/components/schemas/SerialNum",
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : false,
      "datatype" : "SerialNum",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "Description",
      "baseName" : "Description",
      "complexType" : "Description",
      "getter" : "getDescription",
      "setter" : "setDescription",
      "dataType" : "Description",
      "datatypeWithEnum" : "Description",
      "name" : "Description",
      "defaultValueWithParam" : " = data.Description;",
      "baseType" : "Description",
      "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Description\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : {
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "description",
      "nameInPascalCase" : "Description",
      "nameInSnakeCase" : "DESCRIPTION",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "ref" : "#/components/schemas/Description",
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : false,
      "datatype" : "Description",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "URL",
      "baseName" : "URL",
      "complexType" : "URL",
      "getter" : "getURL",
      "setter" : "setURL",
      "dataType" : "URL",
      "datatypeWithEnum" : "URL",
      "name" : "URL",
      "defaultValueWithParam" : " = data.URL;",
      "baseType" : "URL",
      "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/URL\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : {
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "uRL",
      "nameInPascalCase" : "URL",
      "nameInSnakeCase" : "U_R_L",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "ref" : "#/components/schemas/URL",
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : false,
      "datatype" : "URL",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "ProdCode",
      "baseName" : "ProdCode",
      "complexType" : "ProdCode",
      "getter" : "getProdCode",
      "setter" : "setProdCode",
      "dataType" : "ProdCode",
      "datatypeWithEnum" : "ProdCode",
      "name" : "ProdCode",
      "defaultValueWithParam" : " = data.ProdCode;",
      "baseType" : "ProdCode",
      "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/ProdCode\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : {
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "prodCode",
      "nameInPascalCase" : "ProdCode",
      "nameInSnakeCase" : "PROD_CODE",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "ref" : "#/components/schemas/ProdCode",
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : false,
      "datatype" : "ProdCode",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "ProdID",
      "baseName" : "ProdID",
      "complexType" : "ProdID",
      "getter" : "getProdID",
      "setter" : "setProdID",
      "dataType" : "ProdID",
      "datatypeWithEnum" : "ProdID",
      "name" : "ProdID",
      "defaultValueWithParam" : " = data.ProdID;",
      "baseType" : "ProdID",
      "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/ProdID\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : {
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "prodID",
      "nameInPascalCase" : "ProdID",
      "nameInSnakeCase" : "PROD_I_D",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "ref" : "#/components/schemas/ProdID",
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : false,
      "datatype" : "ProdID",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "Firmware",
      "baseName" : "Firmware",
      "complexType" : "Firmware",
      "getter" : "getFirmware",
      "setter" : "setFirmware",
      "dataType" : "Firmware",
      "datatypeWithEnum" : "Firmware",
      "name" : "Firmware",
      "defaultValueWithParam" : " = data.Firmware;",
      "baseType" : "Firmware",
      "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Firmware\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : {
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "firmware",
      "nameInPascalCase" : "Firmware",
      "nameInSnakeCase" : "FIRMWARE",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "ref" : "#/components/schemas/Firmware",
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : false,
      "datatype" : "Firmware",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "MaintDateLast",
      "baseName" : "MaintDateLast",
      "complexType" : "MaintDateLast",
      "getter" : "getMaintDateLast",
      "setter" : "setMaintDateLast",
      "dataType" : "MaintDateLast",
      "datatypeWithEnum" : "MaintDateLast",
      "name" : "MaintDateLast",
      "defaultValueWithParam" : " = data.MaintDateLast;",
      "baseType" : "MaintDateLast",
      "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/MaintDateLast\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : {
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "maintDateLast",
      "nameInPascalCase" : "MaintDateLast",
      "nameInSnakeCase" : "MAINT_DATE_LAST",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "ref" : "#/components/schemas/MaintDateLast",
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : false,
      "datatype" : "MaintDateLast",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "InServiceDate",
      "baseName" : "InServiceDate",
      "complexType" : "InServiceDate",
      "getter" : "getInServiceDate",
      "setter" : "setInServiceDate",
      "dataType" : "InServiceDate",
      "datatypeWithEnum" : "InServiceDate",
      "name" : "InServiceDate",
      "defaultValueWithParam" : " = data.InServiceDate;",
      "baseType" : "InServiceDate",
      "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/InServiceDate\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : {
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "inServiceDate",
      "nameInPascalCase" : "InServiceDate",
      "nameInSnakeCase" : "IN_SERVICE_DATE",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "ref" : "#/components/schemas/InServiceDate",
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : false,
      "datatype" : "InServiceDate",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "Calibration",
      "baseName" : "Calibration",
      "complexType" : "Calibration",
      "getter" : "getCalibration",
      "setter" : "setCalibration",
      "dataType" : "Calibration",
      "datatypeWithEnum" : "Calibration",
      "name" : "Calibration",
      "defaultValueWithParam" : " = data.Calibration;",
      "baseType" : "Calibration",
      "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Calibration\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : {
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true,
        "x-ob-usage-tips" : ""
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "calibration",
      "nameInPascalCase" : "Calibration",
      "nameInSnakeCase" : "CALIBRATION",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "ref" : "#/components/schemas/Calibration",
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : false,
      "datatype" : "Calibration",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "array",
      "baseName" : "Warranties",
      "complexType" : "Warranty",
      "getter" : "getWarranties",
      "setter" : "setWarranties",
      "dataType" : "List<Warranty>",
      "datatypeWithEnum" : "List<Warranty>",
      "name" : "Warranties",
      "defaultValueWithParam" : " = data.Warranties;",
      "baseType" : "List",
      "containerType" : "array",
      "containerTypeMapped" : "List",
      "jsonSchema" : "{\r\n  \"items\" : {\r\n    \"$ref\" : \"#/components/schemas/Warranty\"\r\n  },\r\n  \"type\" : \"array\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : true,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : true,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "items" : {
        "openApiType" : "Warranty",
        "baseName" : "Warranties",
        "complexType" : "Warranty",
        "getter" : "getWarranties",
        "setter" : "setWarranties",
        "dataType" : "Warranty",
        "datatypeWithEnum" : "Warranty",
        "name" : "Warranties",
        "defaultValueWithParam" : " = data.Warranties;",
        "baseType" : "Warranty",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Warranty\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "warranties",
        "nameInPascalCase" : "Warranties",
        "nameInSnakeCase" : "WARRANTIES",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/Warranty",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "Warranty",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "mostInnerItems" : {
        "openApiType" : "Warranty",
        "baseName" : "Warranties",
        "complexType" : "Warranty",
        "getter" : "getWarranties",
        "setter" : "setWarranties",
        "dataType" : "Warranty",
        "datatypeWithEnum" : "Warranty",
        "name" : "Warranties",
        "defaultValueWithParam" : " = data.Warranties;",
        "baseType" : "Warranty",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Warranty\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "warranties",
        "nameInPascalCase" : "Warranties",
        "nameInSnakeCase" : "WARRANTIES",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/Warranty",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "Warranty",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      },
      "vendorExtensions" : {
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "warranties",
      "nameInPascalCase" : "Warranties",
      "nameInSnakeCase" : "WARRANTIES",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : true,
      "datatype" : "List<Warranty>",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "DeviceType",
      "baseName" : "DeviceType",
      "complexType" : "DeviceType",
      "getter" : "getDeviceType",
      "setter" : "setDeviceType",
      "dataType" : "DeviceType",
      "datatypeWithEnum" : "DeviceType",
      "name" : "DeviceType",
      "defaultValueWithParam" : " = data.DeviceType;",
      "baseType" : "DeviceType",
      "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/DeviceType\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : {
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "deviceType",
      "nameInPascalCase" : "DeviceType",
      "nameInSnakeCase" : "DEVICE_TYPE",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "ref" : "#/components/schemas/DeviceType",
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : false,
      "datatype" : "DeviceType",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "array",
      "baseName" : "Components",
      "complexType" : "Component",
      "getter" : "getComponents",
      "setter" : "setComponents",
      "dataType" : "List<Component>",
      "datatypeWithEnum" : "List<Component>",
      "name" : "Components",
      "defaultValueWithParam" : " = data.Components;",
      "baseType" : "List",
      "containerType" : "array",
      "containerTypeMapped" : "List",
      "jsonSchema" : "{\r\n  \"items\" : {\r\n    \"$ref\" : \"#/components/schemas/Component\"\r\n  },\r\n  \"type\" : \"array\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : true,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : true,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "items" : {
        "openApiType" : "Component",
        "baseName" : "Components",
        "complexType" : "Component",
        "getter" : "getComponents",
        "setter" : "setComponents",
        "dataType" : "Component",
        "datatypeWithEnum" : "Component",
        "name" : "Components",
        "defaultValueWithParam" : " = data.Components;",
        "baseType" : "Component",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Component\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "components",
        "nameInPascalCase" : "Components",
        "nameInSnakeCase" : "COMPONENTS",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/Component",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "Component",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "mostInnerItems" : {
        "openApiType" : "Component",
        "baseName" : "Components",
        "complexType" : "Component",
        "getter" : "getComponents",
        "setter" : "setComponents",
        "dataType" : "Component",
        "datatypeWithEnum" : "Component",
        "name" : "Components",
        "defaultValueWithParam" : " = data.Components;",
        "baseType" : "Component",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Component\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "components",
        "nameInPascalCase" : "Components",
        "nameInSnakeCase" : "COMPONENTS",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/Component",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "Component",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      },
      "vendorExtensions" : {
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "components",
      "nameInPascalCase" : "Components",
      "nameInSnakeCase" : "COMPONENTS",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : true,
      "datatype" : "List<Component>",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "DeviceName",
      "baseName" : "DeviceName",
      "complexType" : "DeviceName",
      "getter" : "getDeviceName",
      "setter" : "setDeviceName",
      "dataType" : "DeviceName",
      "datatypeWithEnum" : "DeviceName",
      "name" : "DeviceName",
      "defaultValueWithParam" : " = data.DeviceName;",
      "baseType" : "DeviceName",
      "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/DeviceName\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : {
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "deviceName",
      "nameInPascalCase" : "DeviceName",
      "nameInSnakeCase" : "DEVICE_NAME",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "ref" : "#/components/schemas/DeviceName",
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : false,
      "datatype" : "DeviceName",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "DeviceUUID",
      "baseName" : "DeviceUUID",
      "complexType" : "DeviceUUID",
      "getter" : "getDeviceUUID",
      "setter" : "setDeviceUUID",
      "dataType" : "DeviceUUID",
      "datatypeWithEnum" : "DeviceUUID",
      "name" : "DeviceUUID",
      "defaultValueWithParam" : " = data.DeviceUUID;",
      "baseType" : "DeviceUUID",
      "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/DeviceUUID\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : {
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "deviceUUID",
      "nameInPascalCase" : "DeviceUUID",
      "nameInSnakeCase" : "DEVICE_U_U_I_D",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "ref" : "#/components/schemas/DeviceUUID",
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : false,
      "datatype" : "DeviceUUID",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "array",
      "baseName" : "CryptographicKeyIDs",
      "complexType" : "CryptographicKeyID",
      "getter" : "getCryptographicKeyIDs",
      "setter" : "setCryptographicKeyIDs",
      "dataType" : "List<CryptographicKeyID>",
      "datatypeWithEnum" : "List<CryptographicKeyID>",
      "name" : "CryptographicKeyIDs",
      "defaultValueWithParam" : " = data.CryptographicKeyIDs;",
      "baseType" : "List",
      "containerType" : "array",
      "containerTypeMapped" : "List",
      "jsonSchema" : "{\r\n  \"items\" : {\r\n    \"$ref\" : \"#/components/schemas/CryptographicKeyID\"\r\n  },\r\n  \"type\" : \"array\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : true,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : true,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "items" : {
        "openApiType" : "CryptographicKeyID",
        "baseName" : "CryptographicKeyIDs",
        "complexType" : "CryptographicKeyID",
        "getter" : "getCryptographicKeyIDs",
        "setter" : "setCryptographicKeyIDs",
        "dataType" : "CryptographicKeyID",
        "datatypeWithEnum" : "CryptographicKeyID",
        "name" : "CryptographicKeyIDs",
        "defaultValueWithParam" : " = data.CryptographicKeyIDs;",
        "baseType" : "CryptographicKeyID",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/CryptographicKeyID\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "cryptographicKeyIDs",
        "nameInPascalCase" : "CryptographicKeyIDs",
        "nameInSnakeCase" : "CRYPTOGRAPHIC_KEY_I_DS",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/CryptographicKeyID",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "CryptographicKeyID",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "mostInnerItems" : {
        "openApiType" : "CryptographicKeyID",
        "baseName" : "CryptographicKeyIDs",
        "complexType" : "CryptographicKeyID",
        "getter" : "getCryptographicKeyIDs",
        "setter" : "setCryptographicKeyIDs",
        "dataType" : "CryptographicKeyID",
        "datatypeWithEnum" : "CryptographicKeyID",
        "name" : "CryptographicKeyIDs",
        "defaultValueWithParam" : " = data.CryptographicKeyIDs;",
        "baseType" : "CryptographicKeyID",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/CryptographicKeyID\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "cryptographicKeyIDs",
        "nameInPascalCase" : "CryptographicKeyIDs",
        "nameInSnakeCase" : "CRYPTOGRAPHIC_KEY_I_DS",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/CryptographicKeyID",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "CryptographicKeyID",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      },
      "vendorExtensions" : {
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "cryptographicKeyIDs",
      "nameInPascalCase" : "CryptographicKeyIDs",
      "nameInSnakeCase" : "CRYPTOGRAPHIC_KEY_I_DS",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : true,
      "datatype" : "List<CryptographicKeyID>",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "IsMaintainable",
      "baseName" : "IsMaintainable",
      "complexType" : "IsMaintainable",
      "getter" : "getIsMaintainable",
      "setter" : "setIsMaintainable",
      "dataType" : "IsMaintainable",
      "datatypeWithEnum" : "IsMaintainable",
      "name" : "IsMaintainable",
      "defaultValueWithParam" : " = data.IsMaintainable;",
      "baseType" : "IsMaintainable",
      "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/IsMaintainable\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : {
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "isMaintainable",
      "nameInPascalCase" : "IsMaintainable",
      "nameInSnakeCase" : "IS_MAINTAINABLE",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "ref" : "#/components/schemas/IsMaintainable",
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : false,
      "datatype" : "IsMaintainable",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "array",
      "baseName" : "Nodes",
      "complexType" : "Node",
      "getter" : "getNodes",
      "setter" : "setNodes",
      "dataType" : "List<Node>",
      "datatypeWithEnum" : "List<Node>",
      "name" : "Nodes",
      "defaultValueWithParam" : " = data.Nodes;",
      "baseType" : "List",
      "containerType" : "array",
      "containerTypeMapped" : "List",
      "jsonSchema" : "{\r\n  \"items\" : {\r\n    \"$ref\" : \"#/components/schemas/Node\"\r\n  },\r\n  \"type\" : \"array\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : true,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : true,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "items" : {
        "openApiType" : "Node",
        "baseName" : "Nodes",
        "complexType" : "Node",
        "getter" : "getNodes",
        "setter" : "setNodes",
        "dataType" : "Node",
        "datatypeWithEnum" : "Node",
        "name" : "Nodes",
        "defaultValueWithParam" : " = data.Nodes;",
        "baseType" : "Node",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Node\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "nodes",
        "nameInPascalCase" : "Nodes",
        "nameInSnakeCase" : "NODES",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/Node",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "Node",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "mostInnerItems" : {
        "openApiType" : "Node",
        "baseName" : "Nodes",
        "complexType" : "Node",
        "getter" : "getNodes",
        "setter" : "setNodes",
        "dataType" : "Node",
        "datatypeWithEnum" : "Node",
        "name" : "Nodes",
        "defaultValueWithParam" : " = data.Nodes;",
        "baseType" : "Node",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Node\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "nodes",
        "nameInPascalCase" : "Nodes",
        "nameInSnakeCase" : "NODES",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/Node",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "Node",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      },
      "vendorExtensions" : {
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "nodes",
      "nameInPascalCase" : "Nodes",
      "nameInSnakeCase" : "NODES",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : true,
      "datatype" : "List<Node>",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    } ],
    "parentVars" : [ ],
    "parentRequiredVars" : [ ],
    "nonNullableVars" : [ {
      "openApiType" : "array",
      "baseName" : "Locations",
      "getter" : "getLocations",
      "setter" : "setLocations",
      "dataType" : "List<Location>",
      "datatypeWithEnum" : "List<Location>",
      "name" : "Locations",
      "defaultValueWithParam" : " = data.Locations;",
      "baseType" : "List",
      "containerType" : "array",
      "containerTypeMapped" : "List",
      "jsonSchema" : "{\r\n  \"items\" : {\r\n    \"$ref\" : \"#/components/schemas/Location\"\r\n  },\r\n  \"type\" : \"array\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : true,
      "isModel" : false,
      "isContainer" : true,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : true,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : false,
      "items" : {
        "openApiType" : "Location",
        "baseName" : "Locations",
        "getter" : "getLocations",
        "setter" : "setLocations",
        "dataType" : "Location",
        "datatypeWithEnum" : "Location",
        "name" : "Locations",
        "defaultValueWithParam" : " = data.Locations;",
        "baseType" : "Location",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Location\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : true,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : {
          "x-ob-usage-tips" : ""
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "locations",
        "nameInPascalCase" : "Locations",
        "nameInSnakeCase" : "LOCATIONS",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/Location",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "Location",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "mostInnerItems" : {
        "openApiType" : "Location",
        "baseName" : "Locations",
        "getter" : "getLocations",
        "setter" : "setLocations",
        "dataType" : "Location",
        "datatypeWithEnum" : "Location",
        "name" : "Locations",
        "defaultValueWithParam" : " = data.Locations;",
        "baseType" : "Location",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Location\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : true,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : {
          "x-ob-usage-tips" : ""
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "locations",
        "nameInPascalCase" : "Locations",
        "nameInSnakeCase" : "LOCATIONS",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/Location",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "Location",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      },
      "vendorExtensions" : {
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "locations",
      "nameInPascalCase" : "Locations",
      "nameInSnakeCase" : "LOCATIONS",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : true,
      "datatype" : "List<Location>",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "SerialNum",
      "baseName" : "SerialNum",
      "complexType" : "SerialNum",
      "getter" : "getSerialNum",
      "setter" : "setSerialNum",
      "dataType" : "SerialNum",
      "datatypeWithEnum" : "SerialNum",
      "name" : "SerialNum",
      "defaultValueWithParam" : " = data.SerialNum;",
      "baseType" : "SerialNum",
      "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/SerialNum\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : {
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "serialNum",
      "nameInPascalCase" : "SerialNum",
      "nameInSnakeCase" : "SERIAL_NUM",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "ref" : "#/components/schemas/SerialNum",
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : false,
      "datatype" : "SerialNum",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "Description",
      "baseName" : "Description",
      "complexType" : "Description",
      "getter" : "getDescription",
      "setter" : "setDescription",
      "dataType" : "Description",
      "datatypeWithEnum" : "Description",
      "name" : "Description",
      "defaultValueWithParam" : " = data.Description;",
      "baseType" : "Description",
      "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Description\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : {
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "description",
      "nameInPascalCase" : "Description",
      "nameInSnakeCase" : "DESCRIPTION",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "ref" : "#/components/schemas/Description",
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : false,
      "datatype" : "Description",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "URL",
      "baseName" : "URL",
      "complexType" : "URL",
      "getter" : "getURL",
      "setter" : "setURL",
      "dataType" : "URL",
      "datatypeWithEnum" : "URL",
      "name" : "URL",
      "defaultValueWithParam" : " = data.URL;",
      "baseType" : "URL",
      "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/URL\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : {
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "uRL",
      "nameInPascalCase" : "URL",
      "nameInSnakeCase" : "U_R_L",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "ref" : "#/components/schemas/URL",
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : false,
      "datatype" : "URL",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "ProdCode",
      "baseName" : "ProdCode",
      "complexType" : "ProdCode",
      "getter" : "getProdCode",
      "setter" : "setProdCode",
      "dataType" : "ProdCode",
      "datatypeWithEnum" : "ProdCode",
      "name" : "ProdCode",
      "defaultValueWithParam" : " = data.ProdCode;",
      "baseType" : "ProdCode",
      "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/ProdCode\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : {
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "prodCode",
      "nameInPascalCase" : "ProdCode",
      "nameInSnakeCase" : "PROD_CODE",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "ref" : "#/components/schemas/ProdCode",
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : false,
      "datatype" : "ProdCode",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "ProdID",
      "baseName" : "ProdID",
      "complexType" : "ProdID",
      "getter" : "getProdID",
      "setter" : "setProdID",
      "dataType" : "ProdID",
      "datatypeWithEnum" : "ProdID",
      "name" : "ProdID",
      "defaultValueWithParam" : " = data.ProdID;",
      "baseType" : "ProdID",
      "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/ProdID\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : {
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "prodID",
      "nameInPascalCase" : "ProdID",
      "nameInSnakeCase" : "PROD_I_D",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "ref" : "#/components/schemas/ProdID",
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : false,
      "datatype" : "ProdID",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "Firmware",
      "baseName" : "Firmware",
      "complexType" : "Firmware",
      "getter" : "getFirmware",
      "setter" : "setFirmware",
      "dataType" : "Firmware",
      "datatypeWithEnum" : "Firmware",
      "name" : "Firmware",
      "defaultValueWithParam" : " = data.Firmware;",
      "baseType" : "Firmware",
      "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Firmware\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : {
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "firmware",
      "nameInPascalCase" : "Firmware",
      "nameInSnakeCase" : "FIRMWARE",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "ref" : "#/components/schemas/Firmware",
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : false,
      "datatype" : "Firmware",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "MaintDateLast",
      "baseName" : "MaintDateLast",
      "complexType" : "MaintDateLast",
      "getter" : "getMaintDateLast",
      "setter" : "setMaintDateLast",
      "dataType" : "MaintDateLast",
      "datatypeWithEnum" : "MaintDateLast",
      "name" : "MaintDateLast",
      "defaultValueWithParam" : " = data.MaintDateLast;",
      "baseType" : "MaintDateLast",
      "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/MaintDateLast\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : {
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "maintDateLast",
      "nameInPascalCase" : "MaintDateLast",
      "nameInSnakeCase" : "MAINT_DATE_LAST",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "ref" : "#/components/schemas/MaintDateLast",
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : false,
      "datatype" : "MaintDateLast",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "InServiceDate",
      "baseName" : "InServiceDate",
      "complexType" : "InServiceDate",
      "getter" : "getInServiceDate",
      "setter" : "setInServiceDate",
      "dataType" : "InServiceDate",
      "datatypeWithEnum" : "InServiceDate",
      "name" : "InServiceDate",
      "defaultValueWithParam" : " = data.InServiceDate;",
      "baseType" : "InServiceDate",
      "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/InServiceDate\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : {
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "inServiceDate",
      "nameInPascalCase" : "InServiceDate",
      "nameInSnakeCase" : "IN_SERVICE_DATE",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "ref" : "#/components/schemas/InServiceDate",
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : false,
      "datatype" : "InServiceDate",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "Calibration",
      "baseName" : "Calibration",
      "complexType" : "Calibration",
      "getter" : "getCalibration",
      "setter" : "setCalibration",
      "dataType" : "Calibration",
      "datatypeWithEnum" : "Calibration",
      "name" : "Calibration",
      "defaultValueWithParam" : " = data.Calibration;",
      "baseType" : "Calibration",
      "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Calibration\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : {
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true,
        "x-ob-usage-tips" : ""
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "calibration",
      "nameInPascalCase" : "Calibration",
      "nameInSnakeCase" : "CALIBRATION",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "ref" : "#/components/schemas/Calibration",
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : false,
      "datatype" : "Calibration",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "array",
      "baseName" : "Warranties",
      "complexType" : "Warranty",
      "getter" : "getWarranties",
      "setter" : "setWarranties",
      "dataType" : "List<Warranty>",
      "datatypeWithEnum" : "List<Warranty>",
      "name" : "Warranties",
      "defaultValueWithParam" : " = data.Warranties;",
      "baseType" : "List",
      "containerType" : "array",
      "containerTypeMapped" : "List",
      "jsonSchema" : "{\r\n  \"items\" : {\r\n    \"$ref\" : \"#/components/schemas/Warranty\"\r\n  },\r\n  \"type\" : \"array\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : true,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : true,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "items" : {
        "openApiType" : "Warranty",
        "baseName" : "Warranties",
        "complexType" : "Warranty",
        "getter" : "getWarranties",
        "setter" : "setWarranties",
        "dataType" : "Warranty",
        "datatypeWithEnum" : "Warranty",
        "name" : "Warranties",
        "defaultValueWithParam" : " = data.Warranties;",
        "baseType" : "Warranty",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Warranty\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "warranties",
        "nameInPascalCase" : "Warranties",
        "nameInSnakeCase" : "WARRANTIES",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/Warranty",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "Warranty",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "mostInnerItems" : {
        "openApiType" : "Warranty",
        "baseName" : "Warranties",
        "complexType" : "Warranty",
        "getter" : "getWarranties",
        "setter" : "setWarranties",
        "dataType" : "Warranty",
        "datatypeWithEnum" : "Warranty",
        "name" : "Warranties",
        "defaultValueWithParam" : " = data.Warranties;",
        "baseType" : "Warranty",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Warranty\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "warranties",
        "nameInPascalCase" : "Warranties",
        "nameInSnakeCase" : "WARRANTIES",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/Warranty",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "Warranty",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      },
      "vendorExtensions" : {
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "warranties",
      "nameInPascalCase" : "Warranties",
      "nameInSnakeCase" : "WARRANTIES",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : true,
      "datatype" : "List<Warranty>",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "DeviceType",
      "baseName" : "DeviceType",
      "complexType" : "DeviceType",
      "getter" : "getDeviceType",
      "setter" : "setDeviceType",
      "dataType" : "DeviceType",
      "datatypeWithEnum" : "DeviceType",
      "name" : "DeviceType",
      "defaultValueWithParam" : " = data.DeviceType;",
      "baseType" : "DeviceType",
      "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/DeviceType\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : {
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "deviceType",
      "nameInPascalCase" : "DeviceType",
      "nameInSnakeCase" : "DEVICE_TYPE",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "ref" : "#/components/schemas/DeviceType",
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : false,
      "datatype" : "DeviceType",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "array",
      "baseName" : "Components",
      "complexType" : "Component",
      "getter" : "getComponents",
      "setter" : "setComponents",
      "dataType" : "List<Component>",
      "datatypeWithEnum" : "List<Component>",
      "name" : "Components",
      "defaultValueWithParam" : " = data.Components;",
      "baseType" : "List",
      "containerType" : "array",
      "containerTypeMapped" : "List",
      "jsonSchema" : "{\r\n  \"items\" : {\r\n    \"$ref\" : \"#/components/schemas/Component\"\r\n  },\r\n  \"type\" : \"array\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : true,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : true,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "items" : {
        "openApiType" : "Component",
        "baseName" : "Components",
        "complexType" : "Component",
        "getter" : "getComponents",
        "setter" : "setComponents",
        "dataType" : "Component",
        "datatypeWithEnum" : "Component",
        "name" : "Components",
        "defaultValueWithParam" : " = data.Components;",
        "baseType" : "Component",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Component\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "components",
        "nameInPascalCase" : "Components",
        "nameInSnakeCase" : "COMPONENTS",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/Component",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "Component",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "mostInnerItems" : {
        "openApiType" : "Component",
        "baseName" : "Components",
        "complexType" : "Component",
        "getter" : "getComponents",
        "setter" : "setComponents",
        "dataType" : "Component",
        "datatypeWithEnum" : "Component",
        "name" : "Components",
        "defaultValueWithParam" : " = data.Components;",
        "baseType" : "Component",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Component\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "components",
        "nameInPascalCase" : "Components",
        "nameInSnakeCase" : "COMPONENTS",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/Component",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "Component",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      },
      "vendorExtensions" : {
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "components",
      "nameInPascalCase" : "Components",
      "nameInSnakeCase" : "COMPONENTS",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : true,
      "datatype" : "List<Component>",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "DeviceName",
      "baseName" : "DeviceName",
      "complexType" : "DeviceName",
      "getter" : "getDeviceName",
      "setter" : "setDeviceName",
      "dataType" : "DeviceName",
      "datatypeWithEnum" : "DeviceName",
      "name" : "DeviceName",
      "defaultValueWithParam" : " = data.DeviceName;",
      "baseType" : "DeviceName",
      "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/DeviceName\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : {
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "deviceName",
      "nameInPascalCase" : "DeviceName",
      "nameInSnakeCase" : "DEVICE_NAME",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "ref" : "#/components/schemas/DeviceName",
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : false,
      "datatype" : "DeviceName",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "DeviceUUID",
      "baseName" : "DeviceUUID",
      "complexType" : "DeviceUUID",
      "getter" : "getDeviceUUID",
      "setter" : "setDeviceUUID",
      "dataType" : "DeviceUUID",
      "datatypeWithEnum" : "DeviceUUID",
      "name" : "DeviceUUID",
      "defaultValueWithParam" : " = data.DeviceUUID;",
      "baseType" : "DeviceUUID",
      "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/DeviceUUID\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : {
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "deviceUUID",
      "nameInPascalCase" : "DeviceUUID",
      "nameInSnakeCase" : "DEVICE_U_U_I_D",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "ref" : "#/components/schemas/DeviceUUID",
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : false,
      "datatype" : "DeviceUUID",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "array",
      "baseName" : "CryptographicKeyIDs",
      "complexType" : "CryptographicKeyID",
      "getter" : "getCryptographicKeyIDs",
      "setter" : "setCryptographicKeyIDs",
      "dataType" : "List<CryptographicKeyID>",
      "datatypeWithEnum" : "List<CryptographicKeyID>",
      "name" : "CryptographicKeyIDs",
      "defaultValueWithParam" : " = data.CryptographicKeyIDs;",
      "baseType" : "List",
      "containerType" : "array",
      "containerTypeMapped" : "List",
      "jsonSchema" : "{\r\n  \"items\" : {\r\n    \"$ref\" : \"#/components/schemas/CryptographicKeyID\"\r\n  },\r\n  \"type\" : \"array\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : true,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : true,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "items" : {
        "openApiType" : "CryptographicKeyID",
        "baseName" : "CryptographicKeyIDs",
        "complexType" : "CryptographicKeyID",
        "getter" : "getCryptographicKeyIDs",
        "setter" : "setCryptographicKeyIDs",
        "dataType" : "CryptographicKeyID",
        "datatypeWithEnum" : "CryptographicKeyID",
        "name" : "CryptographicKeyIDs",
        "defaultValueWithParam" : " = data.CryptographicKeyIDs;",
        "baseType" : "CryptographicKeyID",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/CryptographicKeyID\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "cryptographicKeyIDs",
        "nameInPascalCase" : "CryptographicKeyIDs",
        "nameInSnakeCase" : "CRYPTOGRAPHIC_KEY_I_DS",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/CryptographicKeyID",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "CryptographicKeyID",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "mostInnerItems" : {
        "openApiType" : "CryptographicKeyID",
        "baseName" : "CryptographicKeyIDs",
        "complexType" : "CryptographicKeyID",
        "getter" : "getCryptographicKeyIDs",
        "setter" : "setCryptographicKeyIDs",
        "dataType" : "CryptographicKeyID",
        "datatypeWithEnum" : "CryptographicKeyID",
        "name" : "CryptographicKeyIDs",
        "defaultValueWithParam" : " = data.CryptographicKeyIDs;",
        "baseType" : "CryptographicKeyID",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/CryptographicKeyID\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "cryptographicKeyIDs",
        "nameInPascalCase" : "CryptographicKeyIDs",
        "nameInSnakeCase" : "CRYPTOGRAPHIC_KEY_I_DS",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/CryptographicKeyID",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "CryptographicKeyID",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      },
      "vendorExtensions" : {
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "cryptographicKeyIDs",
      "nameInPascalCase" : "CryptographicKeyIDs",
      "nameInSnakeCase" : "CRYPTOGRAPHIC_KEY_I_DS",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : true,
      "datatype" : "List<CryptographicKeyID>",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "IsMaintainable",
      "baseName" : "IsMaintainable",
      "complexType" : "IsMaintainable",
      "getter" : "getIsMaintainable",
      "setter" : "setIsMaintainable",
      "dataType" : "IsMaintainable",
      "datatypeWithEnum" : "IsMaintainable",
      "name" : "IsMaintainable",
      "defaultValueWithParam" : " = data.IsMaintainable;",
      "baseType" : "IsMaintainable",
      "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/IsMaintainable\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : {
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "isMaintainable",
      "nameInPascalCase" : "IsMaintainable",
      "nameInSnakeCase" : "IS_MAINTAINABLE",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "ref" : "#/components/schemas/IsMaintainable",
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : false,
      "datatype" : "IsMaintainable",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    }, {
      "openApiType" : "array",
      "baseName" : "Nodes",
      "complexType" : "Node",
      "getter" : "getNodes",
      "setter" : "setNodes",
      "dataType" : "List<Node>",
      "datatypeWithEnum" : "List<Node>",
      "name" : "Nodes",
      "defaultValueWithParam" : " = data.Nodes;",
      "baseType" : "List",
      "containerType" : "array",
      "containerTypeMapped" : "List",
      "jsonSchema" : "{\r\n  \"items\" : {\r\n    \"$ref\" : \"#/components/schemas/Node\"\r\n  },\r\n  \"type\" : \"array\"\r\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : true,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isShort" : false,
      "isLong" : false,
      "isUnboundedInteger" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isPassword" : false,
      "isNull" : false,
      "isVoid" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : true,
      "isMap" : false,
      "isOptional" : false,
      "isEnum" : false,
      "isInnerEnum" : false,
      "isEnumRef" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "isNew" : false,
      "isOverridden" : true,
      "items" : {
        "openApiType" : "Node",
        "baseName" : "Nodes",
        "complexType" : "Node",
        "getter" : "getNodes",
        "setter" : "setNodes",
        "dataType" : "Node",
        "datatypeWithEnum" : "Node",
        "name" : "Nodes",
        "defaultValueWithParam" : " = data.Nodes;",
        "baseType" : "Node",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Node\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "nodes",
        "nameInPascalCase" : "Nodes",
        "nameInSnakeCase" : "NODES",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/Node",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "Node",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "mostInnerItems" : {
        "openApiType" : "Node",
        "baseName" : "Nodes",
        "complexType" : "Node",
        "getter" : "getNodes",
        "setter" : "setNodes",
        "dataType" : "Node",
        "datatypeWithEnum" : "Node",
        "name" : "Nodes",
        "defaultValueWithParam" : " = data.Nodes;",
        "baseType" : "Node",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Node\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "nodes",
        "nameInPascalCase" : "Nodes",
        "nameInSnakeCase" : "NODES",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/Node",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "Node",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      },
      "vendorExtensions" : {
        "x-is-nullable-type" : true,
        "x-is-value-type" : false,
        "x-is-reference-type" : true
      },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "nodes",
      "nameInPascalCase" : "Nodes",
      "nameInSnakeCase" : "NODES",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "hasMultipleTypes" : false,
      "hasSanitizedName" : false,
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "hasItems" : true,
      "datatype" : "List<Node>",
      "isEnumOrRef" : false,
      "iexclusiveMaximum" : false
    } ],
    "mandatory" : [ ],
    "allMandatory" : [ ],
    "imports" : [ "Calibration", "Component", "CryptographicKeyID", "Description", "Device1", "DeviceName", "DeviceType", "DeviceUUID", "Firmware", "InServiceDate", "IsMaintainable", "MaintDateLast", "Node", "ProdCode", "ProdID", "SerialNum", "URL", "Warranty" ],
    "emptyVars" : false,
    "hasVars" : true,
    "hasMoreModels" : false,
    "hasEnums" : false,
    "isEnum" : false,
    "hasValidation" : false,
    "isNullable" : false,
    "hasRequired" : false,
    "hasOptional" : true,
    "isArray" : false,
    "hasChildren" : false,
    "isMap" : false,
    "isOptional" : false,
    "isNull" : false,
    "isVoid" : false,
    "isDeprecated" : false,
    "hasReadOnly" : false,
    "hasOnlyReadOnly" : false,
    "vendorExtensions" : {
      "x-model-is-mutable" : true
    },
    "composedSchemas" : {
      "allOf" : [ {
        "openApiType" : "Device1",
        "baseName" : "all_of_0",
        "complexType" : "Device1",
        "getter" : "getAllOf0",
        "setter" : "setAllOf0",
        "dataType" : "Device1",
        "datatypeWithEnum" : "Device1",
        "name" : "Device1",
        "defaultValueWithParam" : " = data.all_of_0;",
        "baseType" : "Device1",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Device_1\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : {
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true,
          "x-parent" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "allOf0",
        "nameInPascalCase" : "AllOf0",
        "nameInSnakeCase" : "ALL_OF0",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : true,
        "ref" : "#/components/schemas/Device_1",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "Device1",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "object",
        "baseName" : "all_of_1",
        "getter" : "getAllOf1",
        "setter" : "setAllOf1",
        "description" : "State of a Province of the mailing or physical address.",
        "dataType" : "Object",
        "datatypeWithEnum" : "Object",
        "name" : "Object",
        "defaultValueWithParam" : " = data.all_of_1;",
        "baseType" : "Object",
        "unescapedDescription" : "State of a Province of the mailing or physical address.",
        "jsonSchema" : "{\r\n  \"description\" : \"State of a Province of the mailing or physical address.\",\r\n  \"properties\" : {\r\n    \"Locations\" : {\r\n      \"type\" : \"array\",\r\n      \"items\" : {\r\n        \"$ref\" : \"#/components/schemas/Location\"\r\n      }\r\n    }\r\n  },\r\n  \"type\" : \"object\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : true,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "additionalProperties" : {
          "openApiType" : "Object",
          "baseName" : "additional_properties",
          "getter" : "getAdditionalProperties",
          "setter" : "setAdditionalProperties",
          "dataType" : "Object",
          "datatypeWithEnum" : "Object",
          "name" : "AdditionalProperties",
          "defaultValueWithParam" : " = data.additional_properties;",
          "baseType" : "Object",
          "jsonSchema" : "{ }",
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false,
          "required" : false,
          "deprecated" : false,
          "hasMoreNonReadOnly" : false,
          "isPrimitiveType" : true,
          "isModel" : false,
          "isContainer" : false,
          "isString" : false,
          "isNumeric" : false,
          "isInteger" : false,
          "isShort" : false,
          "isLong" : false,
          "isUnboundedInteger" : false,
          "isNumber" : false,
          "isFloat" : false,
          "isDouble" : false,
          "isDecimal" : false,
          "isByteArray" : false,
          "isBinary" : false,
          "isFile" : false,
          "isBoolean" : false,
          "isDate" : false,
          "isDateTime" : false,
          "isUuid" : false,
          "isUri" : false,
          "isEmail" : false,
          "isPassword" : false,
          "isNull" : false,
          "isVoid" : false,
          "isFreeFormObject" : false,
          "isAnyType" : true,
          "isArray" : false,
          "isMap" : false,
          "isOptional" : false,
          "isEnum" : false,
          "isInnerEnum" : false,
          "isEnumRef" : false,
          "isReadOnly" : false,
          "isWriteOnly" : false,
          "isNullable" : true,
          "isSelfReference" : false,
          "isCircularReference" : false,
          "isDiscriminator" : false,
          "isNew" : false,
          "vars" : [ ],
          "requiredVars" : [ ],
          "vendorExtensions" : { },
          "hasValidation" : false,
          "isInherited" : false,
          "nameInCamelCase" : "additionalProperties",
          "nameInPascalCase" : "AdditionalProperties",
          "nameInSnakeCase" : "ADDITIONAL_PROPERTIES",
          "uniqueItems" : false,
          "isXmlAttribute" : false,
          "isXmlWrapped" : false,
          "additionalPropertiesIsAnyType" : false,
          "hasVars" : false,
          "hasRequired" : false,
          "hasDiscriminatorWithNonEmptyMapping" : false,
          "hasMultipleTypes" : false,
          "hasSanitizedName" : true,
          "schemaIsFromAdditionalProperties" : false,
          "isBooleanSchemaTrue" : true,
          "isBooleanSchemaFalse" : false,
          "hasItems" : false,
          "datatype" : "Object",
          "isEnumOrRef" : false,
          "iexclusiveMaximum" : false
        },
        "vars" : [ {
          "openApiType" : "array",
          "baseName" : "Locations",
          "getter" : "getLocations",
          "setter" : "setLocations",
          "dataType" : "List<Location>",
          "datatypeWithEnum" : "List<Location>",
          "name" : "Locations",
          "defaultValueWithParam" : " = data.Locations;",
          "baseType" : "List",
          "containerType" : "array",
          "containerTypeMapped" : "List",
          "jsonSchema" : "{\r\n  \"items\" : {\r\n    \"$ref\" : \"#/components/schemas/Location\"\r\n  },\r\n  \"type\" : \"array\"\r\n}",
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false,
          "required" : false,
          "deprecated" : false,
          "hasMoreNonReadOnly" : false,
          "isPrimitiveType" : true,
          "isModel" : false,
          "isContainer" : true,
          "isString" : false,
          "isNumeric" : false,
          "isInteger" : false,
          "isShort" : false,
          "isLong" : false,
          "isUnboundedInteger" : false,
          "isNumber" : false,
          "isFloat" : false,
          "isDouble" : false,
          "isDecimal" : false,
          "isByteArray" : false,
          "isBinary" : false,
          "isFile" : false,
          "isBoolean" : false,
          "isDate" : false,
          "isDateTime" : false,
          "isUuid" : false,
          "isUri" : false,
          "isEmail" : false,
          "isPassword" : false,
          "isNull" : false,
          "isVoid" : false,
          "isFreeFormObject" : false,
          "isAnyType" : false,
          "isArray" : true,
          "isMap" : false,
          "isOptional" : false,
          "isEnum" : false,
          "isInnerEnum" : false,
          "isEnumRef" : false,
          "isReadOnly" : false,
          "isWriteOnly" : false,
          "isNullable" : false,
          "isSelfReference" : false,
          "isCircularReference" : false,
          "isDiscriminator" : false,
          "isNew" : false,
          "isOverridden" : false,
          "items" : {
            "openApiType" : "Location",
            "baseName" : "Locations",
            "getter" : "getLocations",
            "setter" : "setLocations",
            "dataType" : "Location",
            "datatypeWithEnum" : "Location",
            "name" : "Locations",
            "defaultValueWithParam" : " = data.Locations;",
            "baseType" : "Location",
            "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Location\"\r\n}",
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "required" : false,
            "deprecated" : false,
            "hasMoreNonReadOnly" : false,
            "isPrimitiveType" : true,
            "isModel" : true,
            "isContainer" : false,
            "isString" : false,
            "isNumeric" : false,
            "isInteger" : false,
            "isShort" : false,
            "isLong" : false,
            "isUnboundedInteger" : false,
            "isNumber" : false,
            "isFloat" : false,
            "isDouble" : false,
            "isDecimal" : false,
            "isByteArray" : false,
            "isBinary" : false,
            "isFile" : false,
            "isBoolean" : false,
            "isDate" : false,
            "isDateTime" : false,
            "isUuid" : false,
            "isUri" : false,
            "isEmail" : false,
            "isPassword" : false,
            "isNull" : false,
            "isVoid" : false,
            "isFreeFormObject" : false,
            "isAnyType" : false,
            "isArray" : false,
            "isMap" : false,
            "isOptional" : false,
            "isEnum" : false,
            "isInnerEnum" : false,
            "isEnumRef" : false,
            "isReadOnly" : false,
            "isWriteOnly" : false,
            "isNullable" : false,
            "isSelfReference" : false,
            "isCircularReference" : false,
            "isDiscriminator" : false,
            "isNew" : false,
            "vars" : [ ],
            "requiredVars" : [ ],
            "vendorExtensions" : {
              "x-ob-usage-tips" : ""
            },
            "hasValidation" : false,
            "isInherited" : false,
            "nameInCamelCase" : "locations",
            "nameInPascalCase" : "Locations",
            "nameInSnakeCase" : "LOCATIONS",
            "uniqueItems" : false,
            "isXmlAttribute" : false,
            "isXmlWrapped" : false,
            "additionalPropertiesIsAnyType" : false,
            "hasVars" : false,
            "hasRequired" : false,
            "hasDiscriminatorWithNonEmptyMapping" : false,
            "hasMultipleTypes" : false,
            "hasSanitizedName" : false,
            "ref" : "#/components/schemas/Location",
            "schemaIsFromAdditionalProperties" : false,
            "isBooleanSchemaTrue" : false,
            "isBooleanSchemaFalse" : false,
            "hasItems" : false,
            "datatype" : "Location",
            "isEnumOrRef" : false,
            "iexclusiveMaximum" : false
          },
          "vars" : [ ],
          "requiredVars" : [ ],
          "mostInnerItems" : {
            "openApiType" : "Location",
            "baseName" : "Locations",
            "getter" : "getLocations",
            "setter" : "setLocations",
            "dataType" : "Location",
            "datatypeWithEnum" : "Location",
            "name" : "Locations",
            "defaultValueWithParam" : " = data.Locations;",
            "baseType" : "Location",
            "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Location\"\r\n}",
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "required" : false,
            "deprecated" : false,
            "hasMoreNonReadOnly" : false,
            "isPrimitiveType" : true,
            "isModel" : true,
            "isContainer" : false,
            "isString" : false,
            "isNumeric" : false,
            "isInteger" : false,
            "isShort" : false,
            "isLong" : false,
            "isUnboundedInteger" : false,
            "isNumber" : false,
            "isFloat" : false,
            "isDouble" : false,
            "isDecimal" : false,
            "isByteArray" : false,
            "isBinary" : false,
            "isFile" : false,
            "isBoolean" : false,
            "isDate" : false,
            "isDateTime" : false,
            "isUuid" : false,
            "isUri" : false,
            "isEmail" : false,
            "isPassword" : false,
            "isNull" : false,
            "isVoid" : false,
            "isFreeFormObject" : false,
            "isAnyType" : false,
            "isArray" : false,
            "isMap" : false,
            "isOptional" : false,
            "isEnum" : false,
            "isInnerEnum" : false,
            "isEnumRef" : false,
            "isReadOnly" : false,
            "isWriteOnly" : false,
            "isNullable" : false,
            "isSelfReference" : false,
            "isCircularReference" : false,
            "isDiscriminator" : false,
            "isNew" : false,
            "vars" : [ ],
            "requiredVars" : [ ],
            "vendorExtensions" : {
              "x-ob-usage-tips" : ""
            },
            "hasValidation" : false,
            "isInherited" : false,
            "nameInCamelCase" : "locations",
            "nameInPascalCase" : "Locations",
            "nameInSnakeCase" : "LOCATIONS",
            "uniqueItems" : false,
            "isXmlAttribute" : false,
            "isXmlWrapped" : false,
            "additionalPropertiesIsAnyType" : false,
            "hasVars" : false,
            "hasRequired" : false,
            "hasDiscriminatorWithNonEmptyMapping" : false,
            "hasMultipleTypes" : false,
            "hasSanitizedName" : false,
            "ref" : "#/components/schemas/Location",
            "schemaIsFromAdditionalProperties" : false,
            "isBooleanSchemaTrue" : false,
            "isBooleanSchemaFalse" : false,
            "hasItems" : false,
            "datatype" : "Location",
            "isEnumOrRef" : false,
            "iexclusiveMaximum" : false
          },
          "vendorExtensions" : { },
          "hasValidation" : false,
          "isInherited" : false,
          "nameInCamelCase" : "locations",
          "nameInPascalCase" : "Locations",
          "nameInSnakeCase" : "LOCATIONS",
          "uniqueItems" : false,
          "isXmlAttribute" : false,
          "isXmlWrapped" : false,
          "additionalPropertiesIsAnyType" : false,
          "hasVars" : false,
          "hasRequired" : false,
          "hasDiscriminatorWithNonEmptyMapping" : false,
          "hasMultipleTypes" : false,
          "hasSanitizedName" : false,
          "schemaIsFromAdditionalProperties" : false,
          "isBooleanSchemaTrue" : false,
          "isBooleanSchemaFalse" : false,
          "hasItems" : true,
          "datatype" : "List<Location>",
          "isEnumOrRef" : false,
          "iexclusiveMaximum" : false
        } ],
        "requiredVars" : [ ],
        "vendorExtensions" : {
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "allOf1",
        "nameInPascalCase" : "AllOf1",
        "nameInSnakeCase" : "ALL_OF1",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : true,
        "hasVars" : true,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : true,
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "Object",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      } ]
    },
    "hasMultipleTypes" : false,
    "schemaIsFromAdditionalProperties" : false,
    "isBooleanSchemaTrue" : false,
    "isBooleanSchemaFalse" : false,
    "isAdditionalPropertiesTrue" : true,
    "uniqueItems" : false,
    "exclusiveMinimum" : false,
    "exclusiveMaximum" : false,
    "isModel" : false,
    "hasDiscriminatorWithNonEmptyMapping" : false,
    "isAnyType" : false,
    "isUuid" : false,
    "isUri" : false,
    "hasItems" : false,
    "isByteArray" : false,
    "isBinary" : false,
    "isClassnameSanitized" : false
  }
} ]
[main] INFO  o.o.codegen.DefaultGenerator - Skipping generation of APIs.
[main] INFO  o.o.codegen.DefaultGenerator - Skipping generation of Webhooks.
[main] INFO  o.o.codegen.utils.URLPathUtils - 'host' (OAS 2.0) or 'servers' (OAS 3.0) not defined in the spec. Default to [http://localhost] for server URL [http://localhost/]
[main] INFO  o.o.codegen.DefaultGenerator - ############ Supporting file info ############
{
  "appVersion" : "1.0",
  "generatorClass" : "org.openapitools.codegen.languages.CSharpClientCodegen",
  "netstandard1.4" : false,
  "dateFormat" : "yyyy'-'MM'-'dd",
  "netstandard1.3" : false,
  "net7.0" : false,
  "netstandard1.6" : false,
  "netstandard1.5" : false,
  "clientPackage" : "Client",
  "useDateTimeOffset" : false,
  "generateModelTests" : true,
  "MUSTACHE_PARENT_CONTEXT" : { },
  "lambda" : {
    "lowercase" : { },
    "uppercase" : { },
    "snakecase" : { },
    "titlecase" : { },
    "kebabcase" : { },
    "camelcase" : { },
    "pascalcase" : { },
    "uncamelize" : { },
    "forwardslash" : { },
    "backslash" : { },
    "doublequote" : { },
    "indented" : { },
    "indented_8" : { },
    "indented_12" : { },
    "indented_16" : { },
    "camelcase_sanitize_param" : { },
    "required" : { },
    "optional" : { },
    "joinWithComma" : { },
    "joinWithAmpersand" : { },
    "joinLinesWithComma" : { },
    "joinConditions" : { },
    "trimLineBreaks" : { },
    "trimTrailingWithNewLine" : { },
    "trimTrailing" : { },
    "first" : { },
    "firstDot" : { },
    "indent1" : { },
    "indent3" : { },
    "indent4" : { },
    "copy" : { },
    "paste" : { },
    "pasteOnce" : { },
    "pasteLine" : { },
    "uniqueLines" : { },
    "unique" : { },
    "camel_case" : { },
    "escape_reserved_word" : { },
    "alphabet_or_underscore" : { }
  },
  "packageDescription" : "A library generated from a OpenAPI doc",
  "inputSpec" : ".\\supernova-extensions-datamodel.json",
  "nonPublicApi" : false,
  "packageCopyright" : "No Copyright",
  "models" : [ {
    "importPath" : "Model.Device",
    "model" : {
      "parent" : "Device1",
      "parentSchema" : "Device_1",
      "interfaces" : [ "Device1" ],
      "anyOf" : [ ],
      "oneOf" : [ ],
      "allOf" : [ "Device1" ],
      "name" : "Device",
      "schemaName" : "Device",
      "classname" : "Device",
      "description" : "...TODO...",
      "classVarName" : "Device",
      "modelJson" : "{\r\n  \"type\" : \"object\",\r\n  \"description\" : \"...TODO...\",\r\n  \"allOf\" : [ {\r\n    \"$ref\" : \"#/components/schemas/Device_1\"\r\n  }, {\r\n    \"type\" : \"object\",\r\n    \"properties\" : {\r\n      \"Locations\" : {\r\n        \"type\" : \"array\",\r\n        \"items\" : {\r\n          \"$ref\" : \"#/components/schemas/Location\"\r\n        }\r\n      }\r\n    },\r\n    \"description\" : \"State of a Province of the mailing or physical address.\"\r\n  } ]\r\n}",
      "dataType" : "Device1",
      "classFilename" : "Device",
      "unescapedDescription" : "...TODO...",
      "isAlias" : false,
      "isString" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isNumeric" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isDecimal" : false,
      "isShort" : false,
      "isUnboundedInteger" : false,
      "isPrimitiveType" : false,
      "isBoolean" : false,
      "isFreeFormObject" : false,
      "additionalPropertiesIsAnyType" : true,
      "vars" : [ {
        "openApiType" : "array",
        "baseName" : "Locations",
        "getter" : "getLocations",
        "setter" : "setLocations",
        "dataType" : "List<Location>",
        "datatypeWithEnum" : "List<Location>",
        "name" : "Locations",
        "defaultValueWithParam" : " = data.Locations;",
        "baseType" : "List",
        "containerType" : "array",
        "containerTypeMapped" : "List",
        "jsonSchema" : "{\r\n  \"items\" : {\r\n    \"$ref\" : \"#/components/schemas/Location\"\r\n  },\r\n  \"type\" : \"array\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : true,
        "isModel" : false,
        "isContainer" : true,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : true,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : false,
        "items" : {
          "openApiType" : "Location",
          "baseName" : "Locations",
          "getter" : "getLocations",
          "setter" : "setLocations",
          "dataType" : "Location",
          "datatypeWithEnum" : "Location",
          "name" : "Locations",
          "defaultValueWithParam" : " = data.Locations;",
          "baseType" : "Location",
          "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Location\"\r\n}",
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false,
          "required" : false,
          "deprecated" : false,
          "hasMoreNonReadOnly" : false,
          "isPrimitiveType" : true,
          "isModel" : true,
          "isContainer" : false,
          "isString" : false,
          "isNumeric" : false,
          "isInteger" : false,
          "isShort" : false,
          "isLong" : false,
          "isUnboundedInteger" : false,
          "isNumber" : false,
          "isFloat" : false,
          "isDouble" : false,
          "isDecimal" : false,
          "isByteArray" : false,
          "isBinary" : false,
          "isFile" : false,
          "isBoolean" : false,
          "isDate" : false,
          "isDateTime" : false,
          "isUuid" : false,
          "isUri" : false,
          "isEmail" : false,
          "isPassword" : false,
          "isNull" : false,
          "isVoid" : false,
          "isFreeFormObject" : false,
          "isAnyType" : false,
          "isArray" : false,
          "isMap" : false,
          "isOptional" : false,
          "isEnum" : false,
          "isInnerEnum" : false,
          "isEnumRef" : false,
          "isReadOnly" : false,
          "isWriteOnly" : false,
          "isNullable" : false,
          "isSelfReference" : false,
          "isCircularReference" : false,
          "isDiscriminator" : false,
          "isNew" : false,
          "vars" : [ ],
          "requiredVars" : [ ],
          "vendorExtensions" : {
            "x-ob-usage-tips" : ""
          },
          "hasValidation" : false,
          "isInherited" : false,
          "nameInCamelCase" : "locations",
          "nameInPascalCase" : "Locations",
          "nameInSnakeCase" : "LOCATIONS",
          "uniqueItems" : false,
          "isXmlAttribute" : false,
          "isXmlWrapped" : false,
          "additionalPropertiesIsAnyType" : false,
          "hasVars" : false,
          "hasRequired" : false,
          "hasDiscriminatorWithNonEmptyMapping" : false,
          "hasMultipleTypes" : false,
          "hasSanitizedName" : false,
          "ref" : "#/components/schemas/Location",
          "schemaIsFromAdditionalProperties" : false,
          "isBooleanSchemaTrue" : false,
          "isBooleanSchemaFalse" : false,
          "hasItems" : false,
          "datatype" : "Location",
          "isEnumOrRef" : false,
          "iexclusiveMaximum" : false
        },
        "vars" : [ ],
        "requiredVars" : [ ],
        "mostInnerItems" : {
          "openApiType" : "Location",
          "baseName" : "Locations",
          "getter" : "getLocations",
          "setter" : "setLocations",
          "dataType" : "Location",
          "datatypeWithEnum" : "Location",
          "name" : "Locations",
          "defaultValueWithParam" : " = data.Locations;",
          "baseType" : "Location",
          "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Location\"\r\n}",
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false,
          "required" : false,
          "deprecated" : false,
          "hasMoreNonReadOnly" : false,
          "isPrimitiveType" : true,
          "isModel" : true,
          "isContainer" : false,
          "isString" : false,
          "isNumeric" : false,
          "isInteger" : false,
          "isShort" : false,
          "isLong" : false,
          "isUnboundedInteger" : false,
          "isNumber" : false,
          "isFloat" : false,
          "isDouble" : false,
          "isDecimal" : false,
          "isByteArray" : false,
          "isBinary" : false,
          "isFile" : false,
          "isBoolean" : false,
          "isDate" : false,
          "isDateTime" : false,
          "isUuid" : false,
          "isUri" : false,
          "isEmail" : false,
          "isPassword" : false,
          "isNull" : false,
          "isVoid" : false,
          "isFreeFormObject" : false,
          "isAnyType" : false,
          "isArray" : false,
          "isMap" : false,
          "isOptional" : false,
          "isEnum" : false,
          "isInnerEnum" : false,
          "isEnumRef" : false,
          "isReadOnly" : false,
          "isWriteOnly" : false,
          "isNullable" : false,
          "isSelfReference" : false,
          "isCircularReference" : false,
          "isDiscriminator" : false,
          "isNew" : false,
          "vars" : [ ],
          "requiredVars" : [ ],
          "vendorExtensions" : {
            "x-ob-usage-tips" : ""
          },
          "hasValidation" : false,
          "isInherited" : false,
          "nameInCamelCase" : "locations",
          "nameInPascalCase" : "Locations",
          "nameInSnakeCase" : "LOCATIONS",
          "uniqueItems" : false,
          "isXmlAttribute" : false,
          "isXmlWrapped" : false,
          "additionalPropertiesIsAnyType" : false,
          "hasVars" : false,
          "hasRequired" : false,
          "hasDiscriminatorWithNonEmptyMapping" : false,
          "hasMultipleTypes" : false,
          "hasSanitizedName" : false,
          "ref" : "#/components/schemas/Location",
          "schemaIsFromAdditionalProperties" : false,
          "isBooleanSchemaTrue" : false,
          "isBooleanSchemaFalse" : false,
          "hasItems" : false,
          "datatype" : "Location",
          "isEnumOrRef" : false,
          "iexclusiveMaximum" : false
        },
        "vendorExtensions" : {
          "x-emit-default-value" : false,
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "locations",
        "nameInPascalCase" : "Locations",
        "nameInSnakeCase" : "LOCATIONS",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : true,
        "datatype" : "List<Location>",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      } ],
      "allVars" : [ {
        "openApiType" : "SerialNum",
        "baseName" : "SerialNum",
        "complexType" : "SerialNum",
        "getter" : "getSerialNum",
        "setter" : "setSerialNum",
        "dataType" : "SerialNum",
        "datatypeWithEnum" : "SerialNum",
        "name" : "SerialNum",
        "defaultValueWithParam" : " = data.SerialNum;",
        "baseType" : "SerialNum",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/SerialNum\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : {
          "x-emit-default-value" : false,
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "serialNum",
        "nameInPascalCase" : "SerialNum",
        "nameInSnakeCase" : "SERIAL_NUM",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/SerialNum",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "SerialNum",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "Description",
        "baseName" : "Description",
        "complexType" : "Description",
        "getter" : "getDescription",
        "setter" : "setDescription",
        "dataType" : "Description",
        "datatypeWithEnum" : "Description",
        "name" : "Description",
        "defaultValueWithParam" : " = data.Description;",
        "baseType" : "Description",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Description\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : {
          "x-emit-default-value" : false,
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "description",
        "nameInPascalCase" : "Description",
        "nameInSnakeCase" : "DESCRIPTION",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/Description",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "Description",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "URL",
        "baseName" : "URL",
        "complexType" : "URL",
        "getter" : "getURL",
        "setter" : "setURL",
        "dataType" : "URL",
        "datatypeWithEnum" : "URL",
        "name" : "URL",
        "defaultValueWithParam" : " = data.URL;",
        "baseType" : "URL",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/URL\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : {
          "x-emit-default-value" : false,
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "uRL",
        "nameInPascalCase" : "URL",
        "nameInSnakeCase" : "U_R_L",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/URL",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "URL",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "ProdCode",
        "baseName" : "ProdCode",
        "complexType" : "ProdCode",
        "getter" : "getProdCode",
        "setter" : "setProdCode",
        "dataType" : "ProdCode",
        "datatypeWithEnum" : "ProdCode",
        "name" : "ProdCode",
        "defaultValueWithParam" : " = data.ProdCode;",
        "baseType" : "ProdCode",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/ProdCode\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : {
          "x-emit-default-value" : false,
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "prodCode",
        "nameInPascalCase" : "ProdCode",
        "nameInSnakeCase" : "PROD_CODE",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/ProdCode",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "ProdCode",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "ProdID",
        "baseName" : "ProdID",
        "complexType" : "ProdID",
        "getter" : "getProdID",
        "setter" : "setProdID",
        "dataType" : "ProdID",
        "datatypeWithEnum" : "ProdID",
        "name" : "ProdID",
        "defaultValueWithParam" : " = data.ProdID;",
        "baseType" : "ProdID",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/ProdID\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : {
          "x-emit-default-value" : false,
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "prodID",
        "nameInPascalCase" : "ProdID",
        "nameInSnakeCase" : "PROD_I_D",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/ProdID",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "ProdID",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "Firmware",
        "baseName" : "Firmware",
        "complexType" : "Firmware",
        "getter" : "getFirmware",
        "setter" : "setFirmware",
        "dataType" : "Firmware",
        "datatypeWithEnum" : "Firmware",
        "name" : "Firmware",
        "defaultValueWithParam" : " = data.Firmware;",
        "baseType" : "Firmware",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Firmware\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : {
          "x-emit-default-value" : false,
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "firmware",
        "nameInPascalCase" : "Firmware",
        "nameInSnakeCase" : "FIRMWARE",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/Firmware",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "Firmware",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "MaintDateLast",
        "baseName" : "MaintDateLast",
        "complexType" : "MaintDateLast",
        "getter" : "getMaintDateLast",
        "setter" : "setMaintDateLast",
        "dataType" : "MaintDateLast",
        "datatypeWithEnum" : "MaintDateLast",
        "name" : "MaintDateLast",
        "defaultValueWithParam" : " = data.MaintDateLast;",
        "baseType" : "MaintDateLast",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/MaintDateLast\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : {
          "x-emit-default-value" : false,
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "maintDateLast",
        "nameInPascalCase" : "MaintDateLast",
        "nameInSnakeCase" : "MAINT_DATE_LAST",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/MaintDateLast",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "MaintDateLast",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "InServiceDate",
        "baseName" : "InServiceDate",
        "complexType" : "InServiceDate",
        "getter" : "getInServiceDate",
        "setter" : "setInServiceDate",
        "dataType" : "InServiceDate",
        "datatypeWithEnum" : "InServiceDate",
        "name" : "InServiceDate",
        "defaultValueWithParam" : " = data.InServiceDate;",
        "baseType" : "InServiceDate",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/InServiceDate\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : {
          "x-emit-default-value" : false,
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "inServiceDate",
        "nameInPascalCase" : "InServiceDate",
        "nameInSnakeCase" : "IN_SERVICE_DATE",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/InServiceDate",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "InServiceDate",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "Calibration",
        "baseName" : "Calibration",
        "complexType" : "Calibration",
        "getter" : "getCalibration",
        "setter" : "setCalibration",
        "dataType" : "Calibration",
        "datatypeWithEnum" : "Calibration",
        "name" : "Calibration",
        "defaultValueWithParam" : " = data.Calibration;",
        "baseType" : "Calibration",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Calibration\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : {
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-emit-default-value" : false,
          "x-is-reference-type" : true,
          "x-ob-usage-tips" : ""
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "calibration",
        "nameInPascalCase" : "Calibration",
        "nameInSnakeCase" : "CALIBRATION",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/Calibration",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "Calibration",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "array",
        "baseName" : "Warranties",
        "complexType" : "Warranty",
        "getter" : "getWarranties",
        "setter" : "setWarranties",
        "dataType" : "List<Warranty>",
        "datatypeWithEnum" : "List<Warranty>",
        "name" : "Warranties",
        "defaultValueWithParam" : " = data.Warranties;",
        "baseType" : "List",
        "containerType" : "array",
        "containerTypeMapped" : "List",
        "jsonSchema" : "{\r\n  \"items\" : {\r\n    \"$ref\" : \"#/components/schemas/Warranty\"\r\n  },\r\n  \"type\" : \"array\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : false,
        "isContainer" : true,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : true,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "items" : {
          "openApiType" : "Warranty",
          "baseName" : "Warranties",
          "complexType" : "Warranty",
          "getter" : "getWarranties",
          "setter" : "setWarranties",
          "dataType" : "Warranty",
          "datatypeWithEnum" : "Warranty",
          "name" : "Warranties",
          "defaultValueWithParam" : " = data.Warranties;",
          "baseType" : "Warranty",
          "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Warranty\"\r\n}",
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false,
          "required" : false,
          "deprecated" : false,
          "hasMoreNonReadOnly" : false,
          "isPrimitiveType" : false,
          "isModel" : true,
          "isContainer" : false,
          "isString" : false,
          "isNumeric" : false,
          "isInteger" : false,
          "isShort" : false,
          "isLong" : false,
          "isUnboundedInteger" : false,
          "isNumber" : false,
          "isFloat" : false,
          "isDouble" : false,
          "isDecimal" : false,
          "isByteArray" : false,
          "isBinary" : false,
          "isFile" : false,
          "isBoolean" : false,
          "isDate" : false,
          "isDateTime" : false,
          "isUuid" : false,
          "isUri" : false,
          "isEmail" : false,
          "isPassword" : false,
          "isNull" : false,
          "isVoid" : false,
          "isFreeFormObject" : false,
          "isAnyType" : false,
          "isArray" : false,
          "isMap" : false,
          "isOptional" : false,
          "isEnum" : false,
          "isInnerEnum" : false,
          "isEnumRef" : false,
          "isReadOnly" : false,
          "isWriteOnly" : false,
          "isNullable" : false,
          "isSelfReference" : false,
          "isCircularReference" : false,
          "isDiscriminator" : false,
          "isNew" : false,
          "vars" : [ ],
          "requiredVars" : [ ],
          "vendorExtensions" : { },
          "hasValidation" : false,
          "isInherited" : false,
          "nameInCamelCase" : "warranties",
          "nameInPascalCase" : "Warranties",
          "nameInSnakeCase" : "WARRANTIES",
          "uniqueItems" : false,
          "isXmlAttribute" : false,
          "isXmlWrapped" : false,
          "additionalPropertiesIsAnyType" : false,
          "hasVars" : false,
          "hasRequired" : false,
          "hasDiscriminatorWithNonEmptyMapping" : false,
          "hasMultipleTypes" : false,
          "hasSanitizedName" : false,
          "ref" : "#/components/schemas/Warranty",
          "schemaIsFromAdditionalProperties" : false,
          "isBooleanSchemaTrue" : false,
          "isBooleanSchemaFalse" : false,
          "hasItems" : false,
          "datatype" : "Warranty",
          "isEnumOrRef" : false,
          "iexclusiveMaximum" : false
        },
        "vars" : [ ],
        "requiredVars" : [ ],
        "mostInnerItems" : {
          "openApiType" : "Warranty",
          "baseName" : "Warranties",
          "complexType" : "Warranty",
          "getter" : "getWarranties",
          "setter" : "setWarranties",
          "dataType" : "Warranty",
          "datatypeWithEnum" : "Warranty",
          "name" : "Warranties",
          "defaultValueWithParam" : " = data.Warranties;",
          "baseType" : "Warranty",
          "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Warranty\"\r\n}",
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false,
          "required" : false,
          "deprecated" : false,
          "hasMoreNonReadOnly" : false,
          "isPrimitiveType" : false,
          "isModel" : true,
          "isContainer" : false,
          "isString" : false,
          "isNumeric" : false,
          "isInteger" : false,
          "isShort" : false,
          "isLong" : false,
          "isUnboundedInteger" : false,
          "isNumber" : false,
          "isFloat" : false,
          "isDouble" : false,
          "isDecimal" : false,
          "isByteArray" : false,
          "isBinary" : false,
          "isFile" : false,
          "isBoolean" : false,
          "isDate" : false,
          "isDateTime" : false,
          "isUuid" : false,
          "isUri" : false,
          "isEmail" : false,
          "isPassword" : false,
          "isNull" : false,
          "isVoid" : false,
          "isFreeFormObject" : false,
          "isAnyType" : false,
          "isArray" : false,
          "isMap" : false,
          "isOptional" : false,
          "isEnum" : false,
          "isInnerEnum" : false,
          "isEnumRef" : false,
          "isReadOnly" : false,
          "isWriteOnly" : false,
          "isNullable" : false,
          "isSelfReference" : false,
          "isCircularReference" : false,
          "isDiscriminator" : false,
          "isNew" : false,
          "vars" : [ ],
          "requiredVars" : [ ],
          "vendorExtensions" : { },
          "hasValidation" : false,
          "isInherited" : false,
          "nameInCamelCase" : "warranties",
          "nameInPascalCase" : "Warranties",
          "nameInSnakeCase" : "WARRANTIES",
          "uniqueItems" : false,
          "isXmlAttribute" : false,
          "isXmlWrapped" : false,
          "additionalPropertiesIsAnyType" : false,
          "hasVars" : false,
          "hasRequired" : false,
          "hasDiscriminatorWithNonEmptyMapping" : false,
          "hasMultipleTypes" : false,
          "hasSanitizedName" : false,
          "ref" : "#/components/schemas/Warranty",
          "schemaIsFromAdditionalProperties" : false,
          "isBooleanSchemaTrue" : false,
          "isBooleanSchemaFalse" : false,
          "hasItems" : false,
          "datatype" : "Warranty",
          "isEnumOrRef" : false,
          "iexclusiveMaximum" : false
        },
        "vendorExtensions" : {
          "x-emit-default-value" : false,
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "warranties",
        "nameInPascalCase" : "Warranties",
        "nameInSnakeCase" : "WARRANTIES",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : true,
        "datatype" : "List<Warranty>",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "DeviceType",
        "baseName" : "DeviceType",
        "complexType" : "DeviceType",
        "getter" : "getDeviceType",
        "setter" : "setDeviceType",
        "dataType" : "DeviceType",
        "datatypeWithEnum" : "DeviceType",
        "name" : "DeviceType",
        "defaultValueWithParam" : " = data.DeviceType;",
        "baseType" : "DeviceType",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/DeviceType\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : {
          "x-emit-default-value" : false,
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "deviceType",
        "nameInPascalCase" : "DeviceType",
        "nameInSnakeCase" : "DEVICE_TYPE",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/DeviceType",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "DeviceType",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "array",
        "baseName" : "Components",
        "complexType" : "Component",
        "getter" : "getComponents",
        "setter" : "setComponents",
        "dataType" : "List<Component>",
        "datatypeWithEnum" : "List<Component>",
        "name" : "Components",
        "defaultValueWithParam" : " = data.Components;",
        "baseType" : "List",
        "containerType" : "array",
        "containerTypeMapped" : "List",
        "jsonSchema" : "{\r\n  \"items\" : {\r\n    \"$ref\" : \"#/components/schemas/Component\"\r\n  },\r\n  \"type\" : \"array\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : false,
        "isContainer" : true,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : true,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "items" : {
          "openApiType" : "Component",
          "baseName" : "Components",
          "complexType" : "Component",
          "getter" : "getComponents",
          "setter" : "setComponents",
          "dataType" : "Component",
          "datatypeWithEnum" : "Component",
          "name" : "Components",
          "defaultValueWithParam" : " = data.Components;",
          "baseType" : "Component",
          "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Component\"\r\n}",
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false,
          "required" : false,
          "deprecated" : false,
          "hasMoreNonReadOnly" : false,
          "isPrimitiveType" : false,
          "isModel" : true,
          "isContainer" : false,
          "isString" : false,
          "isNumeric" : false,
          "isInteger" : false,
          "isShort" : false,
          "isLong" : false,
          "isUnboundedInteger" : false,
          "isNumber" : false,
          "isFloat" : false,
          "isDouble" : false,
          "isDecimal" : false,
          "isByteArray" : false,
          "isBinary" : false,
          "isFile" : false,
          "isBoolean" : false,
          "isDate" : false,
          "isDateTime" : false,
          "isUuid" : false,
          "isUri" : false,
          "isEmail" : false,
          "isPassword" : false,
          "isNull" : false,
          "isVoid" : false,
          "isFreeFormObject" : false,
          "isAnyType" : false,
          "isArray" : false,
          "isMap" : false,
          "isOptional" : false,
          "isEnum" : false,
          "isInnerEnum" : false,
          "isEnumRef" : false,
          "isReadOnly" : false,
          "isWriteOnly" : false,
          "isNullable" : false,
          "isSelfReference" : false,
          "isCircularReference" : false,
          "isDiscriminator" : false,
          "isNew" : false,
          "vars" : [ ],
          "requiredVars" : [ ],
          "vendorExtensions" : { },
          "hasValidation" : false,
          "isInherited" : false,
          "nameInCamelCase" : "components",
          "nameInPascalCase" : "Components",
          "nameInSnakeCase" : "COMPONENTS",
          "uniqueItems" : false,
          "isXmlAttribute" : false,
          "isXmlWrapped" : false,
          "additionalPropertiesIsAnyType" : false,
          "hasVars" : false,
          "hasRequired" : false,
          "hasDiscriminatorWithNonEmptyMapping" : false,
          "hasMultipleTypes" : false,
          "hasSanitizedName" : false,
          "ref" : "#/components/schemas/Component",
          "schemaIsFromAdditionalProperties" : false,
          "isBooleanSchemaTrue" : false,
          "isBooleanSchemaFalse" : false,
          "hasItems" : false,
          "datatype" : "Component",
          "isEnumOrRef" : false,
          "iexclusiveMaximum" : false
        },
        "vars" : [ ],
        "requiredVars" : [ ],
        "mostInnerItems" : {
          "openApiType" : "Component",
          "baseName" : "Components",
          "complexType" : "Component",
          "getter" : "getComponents",
          "setter" : "setComponents",
          "dataType" : "Component",
          "datatypeWithEnum" : "Component",
          "name" : "Components",
          "defaultValueWithParam" : " = data.Components;",
          "baseType" : "Component",
          "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Component\"\r\n}",
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false,
          "required" : false,
          "deprecated" : false,
          "hasMoreNonReadOnly" : false,
          "isPrimitiveType" : false,
          "isModel" : true,
          "isContainer" : false,
          "isString" : false,
          "isNumeric" : false,
          "isInteger" : false,
          "isShort" : false,
          "isLong" : false,
          "isUnboundedInteger" : false,
          "isNumber" : false,
          "isFloat" : false,
          "isDouble" : false,
          "isDecimal" : false,
          "isByteArray" : false,
          "isBinary" : false,
          "isFile" : false,
          "isBoolean" : false,
          "isDate" : false,
          "isDateTime" : false,
          "isUuid" : false,
          "isUri" : false,
          "isEmail" : false,
          "isPassword" : false,
          "isNull" : false,
          "isVoid" : false,
          "isFreeFormObject" : false,
          "isAnyType" : false,
          "isArray" : false,
          "isMap" : false,
          "isOptional" : false,
          "isEnum" : false,
          "isInnerEnum" : false,
          "isEnumRef" : false,
          "isReadOnly" : false,
          "isWriteOnly" : false,
          "isNullable" : false,
          "isSelfReference" : false,
          "isCircularReference" : false,
          "isDiscriminator" : false,
          "isNew" : false,
          "vars" : [ ],
          "requiredVars" : [ ],
          "vendorExtensions" : { },
          "hasValidation" : false,
          "isInherited" : false,
          "nameInCamelCase" : "components",
          "nameInPascalCase" : "Components",
          "nameInSnakeCase" : "COMPONENTS",
          "uniqueItems" : false,
          "isXmlAttribute" : false,
          "isXmlWrapped" : false,
          "additionalPropertiesIsAnyType" : false,
          "hasVars" : false,
          "hasRequired" : false,
          "hasDiscriminatorWithNonEmptyMapping" : false,
          "hasMultipleTypes" : false,
          "hasSanitizedName" : false,
          "ref" : "#/components/schemas/Component",
          "schemaIsFromAdditionalProperties" : false,
          "isBooleanSchemaTrue" : false,
          "isBooleanSchemaFalse" : false,
          "hasItems" : false,
          "datatype" : "Component",
          "isEnumOrRef" : false,
          "iexclusiveMaximum" : false
        },
        "vendorExtensions" : {
          "x-emit-default-value" : false,
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "components",
        "nameInPascalCase" : "Components",
        "nameInSnakeCase" : "COMPONENTS",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : true,
        "datatype" : "List<Component>",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "DeviceName",
        "baseName" : "DeviceName",
        "complexType" : "DeviceName",
        "getter" : "getDeviceName",
        "setter" : "setDeviceName",
        "dataType" : "DeviceName",
        "datatypeWithEnum" : "DeviceName",
        "name" : "DeviceName",
        "defaultValueWithParam" : " = data.DeviceName;",
        "baseType" : "DeviceName",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/DeviceName\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : {
          "x-emit-default-value" : false,
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "deviceName",
        "nameInPascalCase" : "DeviceName",
        "nameInSnakeCase" : "DEVICE_NAME",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/DeviceName",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "DeviceName",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "DeviceUUID",
        "baseName" : "DeviceUUID",
        "complexType" : "DeviceUUID",
        "getter" : "getDeviceUUID",
        "setter" : "setDeviceUUID",
        "dataType" : "DeviceUUID",
        "datatypeWithEnum" : "DeviceUUID",
        "name" : "DeviceUUID",
        "defaultValueWithParam" : " = data.DeviceUUID;",
        "baseType" : "DeviceUUID",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/DeviceUUID\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : {
          "x-emit-default-value" : false,
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "deviceUUID",
        "nameInPascalCase" : "DeviceUUID",
        "nameInSnakeCase" : "DEVICE_U_U_I_D",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/DeviceUUID",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "DeviceUUID",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "array",
        "baseName" : "CryptographicKeyIDs",
        "complexType" : "CryptographicKeyID",
        "getter" : "getCryptographicKeyIDs",
        "setter" : "setCryptographicKeyIDs",
        "dataType" : "List<CryptographicKeyID>",
        "datatypeWithEnum" : "List<CryptographicKeyID>",
        "name" : "CryptographicKeyIDs",
        "defaultValueWithParam" : " = data.CryptographicKeyIDs;",
        "baseType" : "List",
        "containerType" : "array",
        "containerTypeMapped" : "List",
        "jsonSchema" : "{\r\n  \"items\" : {\r\n    \"$ref\" : \"#/components/schemas/CryptographicKeyID\"\r\n  },\r\n  \"type\" : \"array\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : false,
        "isContainer" : true,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : true,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "items" : {
          "openApiType" : "CryptographicKeyID",
          "baseName" : "CryptographicKeyIDs",
          "complexType" : "CryptographicKeyID",
          "getter" : "getCryptographicKeyIDs",
          "setter" : "setCryptographicKeyIDs",
          "dataType" : "CryptographicKeyID",
          "datatypeWithEnum" : "CryptographicKeyID",
          "name" : "CryptographicKeyIDs",
          "defaultValueWithParam" : " = data.CryptographicKeyIDs;",
          "baseType" : "CryptographicKeyID",
          "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/CryptographicKeyID\"\r\n}",
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false,
          "required" : false,
          "deprecated" : false,
          "hasMoreNonReadOnly" : false,
          "isPrimitiveType" : false,
          "isModel" : true,
          "isContainer" : false,
          "isString" : false,
          "isNumeric" : false,
          "isInteger" : false,
          "isShort" : false,
          "isLong" : false,
          "isUnboundedInteger" : false,
          "isNumber" : false,
          "isFloat" : false,
          "isDouble" : false,
          "isDecimal" : false,
          "isByteArray" : false,
          "isBinary" : false,
          "isFile" : false,
          "isBoolean" : false,
          "isDate" : false,
          "isDateTime" : false,
          "isUuid" : false,
          "isUri" : false,
          "isEmail" : false,
          "isPassword" : false,
          "isNull" : false,
          "isVoid" : false,
          "isFreeFormObject" : false,
          "isAnyType" : false,
          "isArray" : false,
          "isMap" : false,
          "isOptional" : false,
          "isEnum" : false,
          "isInnerEnum" : false,
          "isEnumRef" : false,
          "isReadOnly" : false,
          "isWriteOnly" : false,
          "isNullable" : false,
          "isSelfReference" : false,
          "isCircularReference" : false,
          "isDiscriminator" : false,
          "isNew" : false,
          "vars" : [ ],
          "requiredVars" : [ ],
          "vendorExtensions" : { },
          "hasValidation" : false,
          "isInherited" : false,
          "nameInCamelCase" : "cryptographicKeyIDs",
          "nameInPascalCase" : "CryptographicKeyIDs",
          "nameInSnakeCase" : "CRYPTOGRAPHIC_KEY_I_DS",
          "uniqueItems" : false,
          "isXmlAttribute" : false,
          "isXmlWrapped" : false,
          "additionalPropertiesIsAnyType" : false,
          "hasVars" : false,
          "hasRequired" : false,
          "hasDiscriminatorWithNonEmptyMapping" : false,
          "hasMultipleTypes" : false,
          "hasSanitizedName" : false,
          "ref" : "#/components/schemas/CryptographicKeyID",
          "schemaIsFromAdditionalProperties" : false,
          "isBooleanSchemaTrue" : false,
          "isBooleanSchemaFalse" : false,
          "hasItems" : false,
          "datatype" : "CryptographicKeyID",
          "isEnumOrRef" : false,
          "iexclusiveMaximum" : false
        },
        "vars" : [ ],
        "requiredVars" : [ ],
        "mostInnerItems" : {
          "openApiType" : "CryptographicKeyID",
          "baseName" : "CryptographicKeyIDs",
          "complexType" : "CryptographicKeyID",
          "getter" : "getCryptographicKeyIDs",
          "setter" : "setCryptographicKeyIDs",
          "dataType" : "CryptographicKeyID",
          "datatypeWithEnum" : "CryptographicKeyID",
          "name" : "CryptographicKeyIDs",
          "defaultValueWithParam" : " = data.CryptographicKeyIDs;",
          "baseType" : "CryptographicKeyID",
          "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/CryptographicKeyID\"\r\n}",
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false,
          "required" : false,
          "deprecated" : false,
          "hasMoreNonReadOnly" : false,
          "isPrimitiveType" : false,
          "isModel" : true,
          "isContainer" : false,
          "isString" : false,
          "isNumeric" : false,
          "isInteger" : false,
          "isShort" : false,
          "isLong" : false,
          "isUnboundedInteger" : false,
          "isNumber" : false,
          "isFloat" : false,
          "isDouble" : false,
          "isDecimal" : false,
          "isByteArray" : false,
          "isBinary" : false,
          "isFile" : false,
          "isBoolean" : false,
          "isDate" : false,
          "isDateTime" : false,
          "isUuid" : false,
          "isUri" : false,
          "isEmail" : false,
          "isPassword" : false,
          "isNull" : false,
          "isVoid" : false,
          "isFreeFormObject" : false,
          "isAnyType" : false,
          "isArray" : false,
          "isMap" : false,
          "isOptional" : false,
          "isEnum" : false,
          "isInnerEnum" : false,
          "isEnumRef" : false,
          "isReadOnly" : false,
          "isWriteOnly" : false,
          "isNullable" : false,
          "isSelfReference" : false,
          "isCircularReference" : false,
          "isDiscriminator" : false,
          "isNew" : false,
          "vars" : [ ],
          "requiredVars" : [ ],
          "vendorExtensions" : { },
          "hasValidation" : false,
          "isInherited" : false,
          "nameInCamelCase" : "cryptographicKeyIDs",
          "nameInPascalCase" : "CryptographicKeyIDs",
          "nameInSnakeCase" : "CRYPTOGRAPHIC_KEY_I_DS",
          "uniqueItems" : false,
          "isXmlAttribute" : false,
          "isXmlWrapped" : false,
          "additionalPropertiesIsAnyType" : false,
          "hasVars" : false,
          "hasRequired" : false,
          "hasDiscriminatorWithNonEmptyMapping" : false,
          "hasMultipleTypes" : false,
          "hasSanitizedName" : false,
          "ref" : "#/components/schemas/CryptographicKeyID",
          "schemaIsFromAdditionalProperties" : false,
          "isBooleanSchemaTrue" : false,
          "isBooleanSchemaFalse" : false,
          "hasItems" : false,
          "datatype" : "CryptographicKeyID",
          "isEnumOrRef" : false,
          "iexclusiveMaximum" : false
        },
        "vendorExtensions" : {
          "x-emit-default-value" : false,
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "cryptographicKeyIDs",
        "nameInPascalCase" : "CryptographicKeyIDs",
        "nameInSnakeCase" : "CRYPTOGRAPHIC_KEY_I_DS",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : true,
        "datatype" : "List<CryptographicKeyID>",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "IsMaintainable",
        "baseName" : "IsMaintainable",
        "complexType" : "IsMaintainable",
        "getter" : "getIsMaintainable",
        "setter" : "setIsMaintainable",
        "dataType" : "IsMaintainable",
        "datatypeWithEnum" : "IsMaintainable",
        "name" : "IsMaintainable",
        "defaultValueWithParam" : " = data.IsMaintainable;",
        "baseType" : "IsMaintainable",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/IsMaintainable\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : {
          "x-emit-default-value" : false,
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "isMaintainable",
        "nameInPascalCase" : "IsMaintainable",
        "nameInSnakeCase" : "IS_MAINTAINABLE",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/IsMaintainable",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "IsMaintainable",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "array",
        "baseName" : "Nodes",
        "complexType" : "Node",
        "getter" : "getNodes",
        "setter" : "setNodes",
        "dataType" : "List<Node>",
        "datatypeWithEnum" : "List<Node>",
        "name" : "Nodes",
        "defaultValueWithParam" : " = data.Nodes;",
        "baseType" : "List",
        "containerType" : "array",
        "containerTypeMapped" : "List",
        "jsonSchema" : "{\r\n  \"items\" : {\r\n    \"$ref\" : \"#/components/schemas/Node\"\r\n  },\r\n  \"type\" : \"array\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : false,
        "isContainer" : true,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : true,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "items" : {
          "openApiType" : "Node",
          "baseName" : "Nodes",
          "complexType" : "Node",
          "getter" : "getNodes",
          "setter" : "setNodes",
          "dataType" : "Node",
          "datatypeWithEnum" : "Node",
          "name" : "Nodes",
          "defaultValueWithParam" : " = data.Nodes;",
          "baseType" : "Node",
          "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Node\"\r\n}",
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false,
          "required" : false,
          "deprecated" : false,
          "hasMoreNonReadOnly" : false,
          "isPrimitiveType" : false,
          "isModel" : true,
          "isContainer" : false,
          "isString" : false,
          "isNumeric" : false,
          "isInteger" : false,
          "isShort" : false,
          "isLong" : false,
          "isUnboundedInteger" : false,
          "isNumber" : false,
          "isFloat" : false,
          "isDouble" : false,
          "isDecimal" : false,
          "isByteArray" : false,
          "isBinary" : false,
          "isFile" : false,
          "isBoolean" : false,
          "isDate" : false,
          "isDateTime" : false,
          "isUuid" : false,
          "isUri" : false,
          "isEmail" : false,
          "isPassword" : false,
          "isNull" : false,
          "isVoid" : false,
          "isFreeFormObject" : false,
          "isAnyType" : false,
          "isArray" : false,
          "isMap" : false,
          "isOptional" : false,
          "isEnum" : false,
          "isInnerEnum" : false,
          "isEnumRef" : false,
          "isReadOnly" : false,
          "isWriteOnly" : false,
          "isNullable" : false,
          "isSelfReference" : false,
          "isCircularReference" : false,
          "isDiscriminator" : false,
          "isNew" : false,
          "vars" : [ ],
          "requiredVars" : [ ],
          "vendorExtensions" : { },
          "hasValidation" : false,
          "isInherited" : false,
          "nameInCamelCase" : "nodes",
          "nameInPascalCase" : "Nodes",
          "nameInSnakeCase" : "NODES",
          "uniqueItems" : false,
          "isXmlAttribute" : false,
          "isXmlWrapped" : false,
          "additionalPropertiesIsAnyType" : false,
          "hasVars" : false,
          "hasRequired" : false,
          "hasDiscriminatorWithNonEmptyMapping" : false,
          "hasMultipleTypes" : false,
          "hasSanitizedName" : false,
          "ref" : "#/components/schemas/Node",
          "schemaIsFromAdditionalProperties" : false,
          "isBooleanSchemaTrue" : false,
          "isBooleanSchemaFalse" : false,
          "hasItems" : false,
          "datatype" : "Node",
          "isEnumOrRef" : false,
          "iexclusiveMaximum" : false
        },
        "vars" : [ ],
        "requiredVars" : [ ],
        "mostInnerItems" : {
          "openApiType" : "Node",
          "baseName" : "Nodes",
          "complexType" : "Node",
          "getter" : "getNodes",
          "setter" : "setNodes",
          "dataType" : "Node",
          "datatypeWithEnum" : "Node",
          "name" : "Nodes",
          "defaultValueWithParam" : " = data.Nodes;",
          "baseType" : "Node",
          "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Node\"\r\n}",
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false,
          "required" : false,
          "deprecated" : false,
          "hasMoreNonReadOnly" : false,
          "isPrimitiveType" : false,
          "isModel" : true,
          "isContainer" : false,
          "isString" : false,
          "isNumeric" : false,
          "isInteger" : false,
          "isShort" : false,
          "isLong" : false,
          "isUnboundedInteger" : false,
          "isNumber" : false,
          "isFloat" : false,
          "isDouble" : false,
          "isDecimal" : false,
          "isByteArray" : false,
          "isBinary" : false,
          "isFile" : false,
          "isBoolean" : false,
          "isDate" : false,
          "isDateTime" : false,
          "isUuid" : false,
          "isUri" : false,
          "isEmail" : false,
          "isPassword" : false,
          "isNull" : false,
          "isVoid" : false,
          "isFreeFormObject" : false,
          "isAnyType" : false,
          "isArray" : false,
          "isMap" : false,
          "isOptional" : false,
          "isEnum" : false,
          "isInnerEnum" : false,
          "isEnumRef" : false,
          "isReadOnly" : false,
          "isWriteOnly" : false,
          "isNullable" : false,
          "isSelfReference" : false,
          "isCircularReference" : false,
          "isDiscriminator" : false,
          "isNew" : false,
          "vars" : [ ],
          "requiredVars" : [ ],
          "vendorExtensions" : { },
          "hasValidation" : false,
          "isInherited" : false,
          "nameInCamelCase" : "nodes",
          "nameInPascalCase" : "Nodes",
          "nameInSnakeCase" : "NODES",
          "uniqueItems" : false,
          "isXmlAttribute" : false,
          "isXmlWrapped" : false,
          "additionalPropertiesIsAnyType" : false,
          "hasVars" : false,
          "hasRequired" : false,
          "hasDiscriminatorWithNonEmptyMapping" : false,
          "hasMultipleTypes" : false,
          "hasSanitizedName" : false,
          "ref" : "#/components/schemas/Node",
          "schemaIsFromAdditionalProperties" : false,
          "isBooleanSchemaTrue" : false,
          "isBooleanSchemaFalse" : false,
          "hasItems" : false,
          "datatype" : "Node",
          "isEnumOrRef" : false,
          "iexclusiveMaximum" : false
        },
        "vendorExtensions" : {
          "x-emit-default-value" : false,
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "nodes",
        "nameInPascalCase" : "Nodes",
        "nameInSnakeCase" : "NODES",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : true,
        "datatype" : "List<Node>",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "array",
        "baseName" : "Locations",
        "getter" : "getLocations",
        "setter" : "setLocations",
        "dataType" : "List<Location>",
        "datatypeWithEnum" : "List<Location>",
        "name" : "Locations",
        "defaultValueWithParam" : " = data.Locations;",
        "baseType" : "List",
        "containerType" : "array",
        "containerTypeMapped" : "List",
        "jsonSchema" : "{\r\n  \"items\" : {\r\n    \"$ref\" : \"#/components/schemas/Location\"\r\n  },\r\n  \"type\" : \"array\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : true,
        "isModel" : false,
        "isContainer" : true,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : true,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : false,
        "items" : {
          "openApiType" : "Location",
          "baseName" : "Locations",
          "getter" : "getLocations",
          "setter" : "setLocations",
          "dataType" : "Location",
          "datatypeWithEnum" : "Location",
          "name" : "Locations",
          "defaultValueWithParam" : " = data.Locations;",
          "baseType" : "Location",
          "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Location\"\r\n}",
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false,
          "required" : false,
          "deprecated" : false,
          "hasMoreNonReadOnly" : false,
          "isPrimitiveType" : true,
          "isModel" : true,
          "isContainer" : false,
          "isString" : false,
          "isNumeric" : false,
          "isInteger" : false,
          "isShort" : false,
          "isLong" : false,
          "isUnboundedInteger" : false,
          "isNumber" : false,
          "isFloat" : false,
          "isDouble" : false,
          "isDecimal" : false,
          "isByteArray" : false,
          "isBinary" : false,
          "isFile" : false,
          "isBoolean" : false,
          "isDate" : false,
          "isDateTime" : false,
          "isUuid" : false,
          "isUri" : false,
          "isEmail" : false,
          "isPassword" : false,
          "isNull" : false,
          "isVoid" : false,
          "isFreeFormObject" : false,
          "isAnyType" : false,
          "isArray" : false,
          "isMap" : false,
          "isOptional" : false,
          "isEnum" : false,
          "isInnerEnum" : false,
          "isEnumRef" : false,
          "isReadOnly" : false,
          "isWriteOnly" : false,
          "isNullable" : false,
          "isSelfReference" : false,
          "isCircularReference" : false,
          "isDiscriminator" : false,
          "isNew" : false,
          "vars" : [ ],
          "requiredVars" : [ ],
          "vendorExtensions" : {
            "x-ob-usage-tips" : ""
          },
          "hasValidation" : false,
          "isInherited" : false,
          "nameInCamelCase" : "locations",
          "nameInPascalCase" : "Locations",
          "nameInSnakeCase" : "LOCATIONS",
          "uniqueItems" : false,
          "isXmlAttribute" : false,
          "isXmlWrapped" : false,
          "additionalPropertiesIsAnyType" : false,
          "hasVars" : false,
          "hasRequired" : false,
          "hasDiscriminatorWithNonEmptyMapping" : false,
          "hasMultipleTypes" : false,
          "hasSanitizedName" : false,
          "ref" : "#/components/schemas/Location",
          "schemaIsFromAdditionalProperties" : false,
          "isBooleanSchemaTrue" : false,
          "isBooleanSchemaFalse" : false,
          "hasItems" : false,
          "datatype" : "Location",
          "isEnumOrRef" : false,
          "iexclusiveMaximum" : false
        },
        "vars" : [ ],
        "requiredVars" : [ ],
        "mostInnerItems" : {
          "openApiType" : "Location",
          "baseName" : "Locations",
          "getter" : "getLocations",
          "setter" : "setLocations",
          "dataType" : "Location",
          "datatypeWithEnum" : "Location",
          "name" : "Locations",
          "defaultValueWithParam" : " = data.Locations;",
          "baseType" : "Location",
          "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Location\"\r\n}",
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false,
          "required" : false,
          "deprecated" : false,
          "hasMoreNonReadOnly" : false,
          "isPrimitiveType" : true,
          "isModel" : true,
          "isContainer" : false,
          "isString" : false,
          "isNumeric" : false,
          "isInteger" : false,
          "isShort" : false,
          "isLong" : false,
          "isUnboundedInteger" : false,
          "isNumber" : false,
          "isFloat" : false,
          "isDouble" : false,
          "isDecimal" : false,
          "isByteArray" : false,
          "isBinary" : false,
          "isFile" : false,
          "isBoolean" : false,
          "isDate" : false,
          "isDateTime" : false,
          "isUuid" : false,
          "isUri" : false,
          "isEmail" : false,
          "isPassword" : false,
          "isNull" : false,
          "isVoid" : false,
          "isFreeFormObject" : false,
          "isAnyType" : false,
          "isArray" : false,
          "isMap" : false,
          "isOptional" : false,
          "isEnum" : false,
          "isInnerEnum" : false,
          "isEnumRef" : false,
          "isReadOnly" : false,
          "isWriteOnly" : false,
          "isNullable" : false,
          "isSelfReference" : false,
          "isCircularReference" : false,
          "isDiscriminator" : false,
          "isNew" : false,
          "vars" : [ ],
          "requiredVars" : [ ],
          "vendorExtensions" : {
            "x-ob-usage-tips" : ""
          },
          "hasValidation" : false,
          "isInherited" : false,
          "nameInCamelCase" : "locations",
          "nameInPascalCase" : "Locations",
          "nameInSnakeCase" : "LOCATIONS",
          "uniqueItems" : false,
          "isXmlAttribute" : false,
          "isXmlWrapped" : false,
          "additionalPropertiesIsAnyType" : false,
          "hasVars" : false,
          "hasRequired" : false,
          "hasDiscriminatorWithNonEmptyMapping" : false,
          "hasMultipleTypes" : false,
          "hasSanitizedName" : false,
          "ref" : "#/components/schemas/Location",
          "schemaIsFromAdditionalProperties" : false,
          "isBooleanSchemaTrue" : false,
          "isBooleanSchemaFalse" : false,
          "hasItems" : false,
          "datatype" : "Location",
          "isEnumOrRef" : false,
          "iexclusiveMaximum" : false
        },
        "vendorExtensions" : {
          "x-emit-default-value" : false,
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "locations",
        "nameInPascalCase" : "Locations",
        "nameInSnakeCase" : "LOCATIONS",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : true,
        "datatype" : "List<Location>",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      } ],
      "requiredVars" : [ ],
      "optionalVars" : [ {
        "openApiType" : "array",
        "baseName" : "Locations",
        "getter" : "getLocations",
        "setter" : "setLocations",
        "dataType" : "List<Location>",
        "datatypeWithEnum" : "List<Location>",
        "name" : "Locations",
        "defaultValueWithParam" : " = data.Locations;",
        "baseType" : "List",
        "containerType" : "array",
        "containerTypeMapped" : "List",
        "jsonSchema" : "{\r\n  \"items\" : {\r\n    \"$ref\" : \"#/components/schemas/Location\"\r\n  },\r\n  \"type\" : \"array\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : true,
        "isModel" : false,
        "isContainer" : true,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : true,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : false,
        "items" : {
          "openApiType" : "Location",
          "baseName" : "Locations",
          "getter" : "getLocations",
          "setter" : "setLocations",
          "dataType" : "Location",
          "datatypeWithEnum" : "Location",
          "name" : "Locations",
          "defaultValueWithParam" : " = data.Locations;",
          "baseType" : "Location",
          "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Location\"\r\n}",
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false,
          "required" : false,
          "deprecated" : false,
          "hasMoreNonReadOnly" : false,
          "isPrimitiveType" : true,
          "isModel" : true,
          "isContainer" : false,
          "isString" : false,
          "isNumeric" : false,
          "isInteger" : false,
          "isShort" : false,
          "isLong" : false,
          "isUnboundedInteger" : false,
          "isNumber" : false,
          "isFloat" : false,
          "isDouble" : false,
          "isDecimal" : false,
          "isByteArray" : false,
          "isBinary" : false,
          "isFile" : false,
          "isBoolean" : false,
          "isDate" : false,
          "isDateTime" : false,
          "isUuid" : false,
          "isUri" : false,
          "isEmail" : false,
          "isPassword" : false,
          "isNull" : false,
          "isVoid" : false,
          "isFreeFormObject" : false,
          "isAnyType" : false,
          "isArray" : false,
          "isMap" : false,
          "isOptional" : false,
          "isEnum" : false,
          "isInnerEnum" : false,
          "isEnumRef" : false,
          "isReadOnly" : false,
          "isWriteOnly" : false,
          "isNullable" : false,
          "isSelfReference" : false,
          "isCircularReference" : false,
          "isDiscriminator" : false,
          "isNew" : false,
          "vars" : [ ],
          "requiredVars" : [ ],
          "vendorExtensions" : {
            "x-ob-usage-tips" : ""
          },
          "hasValidation" : false,
          "isInherited" : false,
          "nameInCamelCase" : "locations",
          "nameInPascalCase" : "Locations",
          "nameInSnakeCase" : "LOCATIONS",
          "uniqueItems" : false,
          "isXmlAttribute" : false,
          "isXmlWrapped" : false,
          "additionalPropertiesIsAnyType" : false,
          "hasVars" : false,
          "hasRequired" : false,
          "hasDiscriminatorWithNonEmptyMapping" : false,
          "hasMultipleTypes" : false,
          "hasSanitizedName" : false,
          "ref" : "#/components/schemas/Location",
          "schemaIsFromAdditionalProperties" : false,
          "isBooleanSchemaTrue" : false,
          "isBooleanSchemaFalse" : false,
          "hasItems" : false,
          "datatype" : "Location",
          "isEnumOrRef" : false,
          "iexclusiveMaximum" : false
        },
        "vars" : [ ],
        "requiredVars" : [ ],
        "mostInnerItems" : {
          "openApiType" : "Location",
          "baseName" : "Locations",
          "getter" : "getLocations",
          "setter" : "setLocations",
          "dataType" : "Location",
          "datatypeWithEnum" : "Location",
          "name" : "Locations",
          "defaultValueWithParam" : " = data.Locations;",
          "baseType" : "Location",
          "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Location\"\r\n}",
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false,
          "required" : false,
          "deprecated" : false,
          "hasMoreNonReadOnly" : false,
          "isPrimitiveType" : true,
          "isModel" : true,
          "isContainer" : false,
          "isString" : false,
          "isNumeric" : false,
          "isInteger" : false,
          "isShort" : false,
          "isLong" : false,
          "isUnboundedInteger" : false,
          "isNumber" : false,
          "isFloat" : false,
          "isDouble" : false,
          "isDecimal" : false,
          "isByteArray" : false,
          "isBinary" : false,
          "isFile" : false,
          "isBoolean" : false,
          "isDate" : false,
          "isDateTime" : false,
          "isUuid" : false,
          "isUri" : false,
          "isEmail" : false,
          "isPassword" : false,
          "isNull" : false,
          "isVoid" : false,
          "isFreeFormObject" : false,
          "isAnyType" : false,
          "isArray" : false,
          "isMap" : false,
          "isOptional" : false,
          "isEnum" : false,
          "isInnerEnum" : false,
          "isEnumRef" : false,
          "isReadOnly" : false,
          "isWriteOnly" : false,
          "isNullable" : false,
          "isSelfReference" : false,
          "isCircularReference" : false,
          "isDiscriminator" : false,
          "isNew" : false,
          "vars" : [ ],
          "requiredVars" : [ ],
          "vendorExtensions" : {
            "x-ob-usage-tips" : ""
          },
          "hasValidation" : false,
          "isInherited" : false,
          "nameInCamelCase" : "locations",
          "nameInPascalCase" : "Locations",
          "nameInSnakeCase" : "LOCATIONS",
          "uniqueItems" : false,
          "isXmlAttribute" : false,
          "isXmlWrapped" : false,
          "additionalPropertiesIsAnyType" : false,
          "hasVars" : false,
          "hasRequired" : false,
          "hasDiscriminatorWithNonEmptyMapping" : false,
          "hasMultipleTypes" : false,
          "hasSanitizedName" : false,
          "ref" : "#/components/schemas/Location",
          "schemaIsFromAdditionalProperties" : false,
          "isBooleanSchemaTrue" : false,
          "isBooleanSchemaFalse" : false,
          "hasItems" : false,
          "datatype" : "Location",
          "isEnumOrRef" : false,
          "iexclusiveMaximum" : false
        },
        "vendorExtensions" : {
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "locations",
        "nameInPascalCase" : "Locations",
        "nameInSnakeCase" : "LOCATIONS",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : true,
        "datatype" : "List<Location>",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "SerialNum",
        "baseName" : "SerialNum",
        "complexType" : "SerialNum",
        "getter" : "getSerialNum",
        "setter" : "setSerialNum",
        "dataType" : "SerialNum",
        "datatypeWithEnum" : "SerialNum",
        "name" : "SerialNum",
        "defaultValueWithParam" : " = data.SerialNum;",
        "baseType" : "SerialNum",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/SerialNum\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : {
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "serialNum",
        "nameInPascalCase" : "SerialNum",
        "nameInSnakeCase" : "SERIAL_NUM",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/SerialNum",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "SerialNum",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "Description",
        "baseName" : "Description",
        "complexType" : "Description",
        "getter" : "getDescription",
        "setter" : "setDescription",
        "dataType" : "Description",
        "datatypeWithEnum" : "Description",
        "name" : "Description",
        "defaultValueWithParam" : " = data.Description;",
        "baseType" : "Description",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Description\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : {
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "description",
        "nameInPascalCase" : "Description",
        "nameInSnakeCase" : "DESCRIPTION",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/Description",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "Description",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "URL",
        "baseName" : "URL",
        "complexType" : "URL",
        "getter" : "getURL",
        "setter" : "setURL",
        "dataType" : "URL",
        "datatypeWithEnum" : "URL",
        "name" : "URL",
        "defaultValueWithParam" : " = data.URL;",
        "baseType" : "URL",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/URL\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : {
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "uRL",
        "nameInPascalCase" : "URL",
        "nameInSnakeCase" : "U_R_L",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/URL",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "URL",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "ProdCode",
        "baseName" : "ProdCode",
        "complexType" : "ProdCode",
        "getter" : "getProdCode",
        "setter" : "setProdCode",
        "dataType" : "ProdCode",
        "datatypeWithEnum" : "ProdCode",
        "name" : "ProdCode",
        "defaultValueWithParam" : " = data.ProdCode;",
        "baseType" : "ProdCode",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/ProdCode\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : {
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "prodCode",
        "nameInPascalCase" : "ProdCode",
        "nameInSnakeCase" : "PROD_CODE",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/ProdCode",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "ProdCode",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "ProdID",
        "baseName" : "ProdID",
        "complexType" : "ProdID",
        "getter" : "getProdID",
        "setter" : "setProdID",
        "dataType" : "ProdID",
        "datatypeWithEnum" : "ProdID",
        "name" : "ProdID",
        "defaultValueWithParam" : " = data.ProdID;",
        "baseType" : "ProdID",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/ProdID\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : {
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "prodID",
        "nameInPascalCase" : "ProdID",
        "nameInSnakeCase" : "PROD_I_D",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/ProdID",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "ProdID",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "Firmware",
        "baseName" : "Firmware",
        "complexType" : "Firmware",
        "getter" : "getFirmware",
        "setter" : "setFirmware",
        "dataType" : "Firmware",
        "datatypeWithEnum" : "Firmware",
        "name" : "Firmware",
        "defaultValueWithParam" : " = data.Firmware;",
        "baseType" : "Firmware",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Firmware\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : {
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "firmware",
        "nameInPascalCase" : "Firmware",
        "nameInSnakeCase" : "FIRMWARE",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/Firmware",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "Firmware",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "MaintDateLast",
        "baseName" : "MaintDateLast",
        "complexType" : "MaintDateLast",
        "getter" : "getMaintDateLast",
        "setter" : "setMaintDateLast",
        "dataType" : "MaintDateLast",
        "datatypeWithEnum" : "MaintDateLast",
        "name" : "MaintDateLast",
        "defaultValueWithParam" : " = data.MaintDateLast;",
        "baseType" : "MaintDateLast",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/MaintDateLast\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : {
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "maintDateLast",
        "nameInPascalCase" : "MaintDateLast",
        "nameInSnakeCase" : "MAINT_DATE_LAST",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/MaintDateLast",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "MaintDateLast",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "InServiceDate",
        "baseName" : "InServiceDate",
        "complexType" : "InServiceDate",
        "getter" : "getInServiceDate",
        "setter" : "setInServiceDate",
        "dataType" : "InServiceDate",
        "datatypeWithEnum" : "InServiceDate",
        "name" : "InServiceDate",
        "defaultValueWithParam" : " = data.InServiceDate;",
        "baseType" : "InServiceDate",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/InServiceDate\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : {
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "inServiceDate",
        "nameInPascalCase" : "InServiceDate",
        "nameInSnakeCase" : "IN_SERVICE_DATE",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/InServiceDate",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "InServiceDate",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "Calibration",
        "baseName" : "Calibration",
        "complexType" : "Calibration",
        "getter" : "getCalibration",
        "setter" : "setCalibration",
        "dataType" : "Calibration",
        "datatypeWithEnum" : "Calibration",
        "name" : "Calibration",
        "defaultValueWithParam" : " = data.Calibration;",
        "baseType" : "Calibration",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Calibration\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : {
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true,
          "x-ob-usage-tips" : ""
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "calibration",
        "nameInPascalCase" : "Calibration",
        "nameInSnakeCase" : "CALIBRATION",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/Calibration",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "Calibration",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "array",
        "baseName" : "Warranties",
        "complexType" : "Warranty",
        "getter" : "getWarranties",
        "setter" : "setWarranties",
        "dataType" : "List<Warranty>",
        "datatypeWithEnum" : "List<Warranty>",
        "name" : "Warranties",
        "defaultValueWithParam" : " = data.Warranties;",
        "baseType" : "List",
        "containerType" : "array",
        "containerTypeMapped" : "List",
        "jsonSchema" : "{\r\n  \"items\" : {\r\n    \"$ref\" : \"#/components/schemas/Warranty\"\r\n  },\r\n  \"type\" : \"array\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : false,
        "isContainer" : true,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : true,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "items" : {
          "openApiType" : "Warranty",
          "baseName" : "Warranties",
          "complexType" : "Warranty",
          "getter" : "getWarranties",
          "setter" : "setWarranties",
          "dataType" : "Warranty",
          "datatypeWithEnum" : "Warranty",
          "name" : "Warranties",
          "defaultValueWithParam" : " = data.Warranties;",
          "baseType" : "Warranty",
          "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Warranty\"\r\n}",
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false,
          "required" : false,
          "deprecated" : false,
          "hasMoreNonReadOnly" : false,
          "isPrimitiveType" : false,
          "isModel" : true,
          "isContainer" : false,
          "isString" : false,
          "isNumeric" : false,
          "isInteger" : false,
          "isShort" : false,
          "isLong" : false,
          "isUnboundedInteger" : false,
          "isNumber" : false,
          "isFloat" : false,
          "isDouble" : false,
          "isDecimal" : false,
          "isByteArray" : false,
          "isBinary" : false,
          "isFile" : false,
          "isBoolean" : false,
          "isDate" : false,
          "isDateTime" : false,
          "isUuid" : false,
          "isUri" : false,
          "isEmail" : false,
          "isPassword" : false,
          "isNull" : false,
          "isVoid" : false,
          "isFreeFormObject" : false,
          "isAnyType" : false,
          "isArray" : false,
          "isMap" : false,
          "isOptional" : false,
          "isEnum" : false,
          "isInnerEnum" : false,
          "isEnumRef" : false,
          "isReadOnly" : false,
          "isWriteOnly" : false,
          "isNullable" : false,
          "isSelfReference" : false,
          "isCircularReference" : false,
          "isDiscriminator" : false,
          "isNew" : false,
          "vars" : [ ],
          "requiredVars" : [ ],
          "vendorExtensions" : { },
          "hasValidation" : false,
          "isInherited" : false,
          "nameInCamelCase" : "warranties",
          "nameInPascalCase" : "Warranties",
          "nameInSnakeCase" : "WARRANTIES",
          "uniqueItems" : false,
          "isXmlAttribute" : false,
          "isXmlWrapped" : false,
          "additionalPropertiesIsAnyType" : false,
          "hasVars" : false,
          "hasRequired" : false,
          "hasDiscriminatorWithNonEmptyMapping" : false,
          "hasMultipleTypes" : false,
          "hasSanitizedName" : false,
          "ref" : "#/components/schemas/Warranty",
          "schemaIsFromAdditionalProperties" : false,
          "isBooleanSchemaTrue" : false,
          "isBooleanSchemaFalse" : false,
          "hasItems" : false,
          "datatype" : "Warranty",
          "isEnumOrRef" : false,
          "iexclusiveMaximum" : false
        },
        "vars" : [ ],
        "requiredVars" : [ ],
        "mostInnerItems" : {
          "openApiType" : "Warranty",
          "baseName" : "Warranties",
          "complexType" : "Warranty",
          "getter" : "getWarranties",
          "setter" : "setWarranties",
          "dataType" : "Warranty",
          "datatypeWithEnum" : "Warranty",
          "name" : "Warranties",
          "defaultValueWithParam" : " = data.Warranties;",
          "baseType" : "Warranty",
          "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Warranty\"\r\n}",
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false,
          "required" : false,
          "deprecated" : false,
          "hasMoreNonReadOnly" : false,
          "isPrimitiveType" : false,
          "isModel" : true,
          "isContainer" : false,
          "isString" : false,
          "isNumeric" : false,
          "isInteger" : false,
          "isShort" : false,
          "isLong" : false,
          "isUnboundedInteger" : false,
          "isNumber" : false,
          "isFloat" : false,
          "isDouble" : false,
          "isDecimal" : false,
          "isByteArray" : false,
          "isBinary" : false,
          "isFile" : false,
          "isBoolean" : false,
          "isDate" : false,
          "isDateTime" : false,
          "isUuid" : false,
          "isUri" : false,
          "isEmail" : false,
          "isPassword" : false,
          "isNull" : false,
          "isVoid" : false,
          "isFreeFormObject" : false,
          "isAnyType" : false,
          "isArray" : false,
          "isMap" : false,
          "isOptional" : false,
          "isEnum" : false,
          "isInnerEnum" : false,
          "isEnumRef" : false,
          "isReadOnly" : false,
          "isWriteOnly" : false,
          "isNullable" : false,
          "isSelfReference" : false,
          "isCircularReference" : false,
          "isDiscriminator" : false,
          "isNew" : false,
          "vars" : [ ],
          "requiredVars" : [ ],
          "vendorExtensions" : { },
          "hasValidation" : false,
          "isInherited" : false,
          "nameInCamelCase" : "warranties",
          "nameInPascalCase" : "Warranties",
          "nameInSnakeCase" : "WARRANTIES",
          "uniqueItems" : false,
          "isXmlAttribute" : false,
          "isXmlWrapped" : false,
          "additionalPropertiesIsAnyType" : false,
          "hasVars" : false,
          "hasRequired" : false,
          "hasDiscriminatorWithNonEmptyMapping" : false,
          "hasMultipleTypes" : false,
          "hasSanitizedName" : false,
          "ref" : "#/components/schemas/Warranty",
          "schemaIsFromAdditionalProperties" : false,
          "isBooleanSchemaTrue" : false,
          "isBooleanSchemaFalse" : false,
          "hasItems" : false,
          "datatype" : "Warranty",
          "isEnumOrRef" : false,
          "iexclusiveMaximum" : false
        },
        "vendorExtensions" : {
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "warranties",
        "nameInPascalCase" : "Warranties",
        "nameInSnakeCase" : "WARRANTIES",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : true,
        "datatype" : "List<Warranty>",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "DeviceType",
        "baseName" : "DeviceType",
        "complexType" : "DeviceType",
        "getter" : "getDeviceType",
        "setter" : "setDeviceType",
        "dataType" : "DeviceType",
        "datatypeWithEnum" : "DeviceType",
        "name" : "DeviceType",
        "defaultValueWithParam" : " = data.DeviceType;",
        "baseType" : "DeviceType",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/DeviceType\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : {
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "deviceType",
        "nameInPascalCase" : "DeviceType",
        "nameInSnakeCase" : "DEVICE_TYPE",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/DeviceType",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "DeviceType",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "array",
        "baseName" : "Components",
        "complexType" : "Component",
        "getter" : "getComponents",
        "setter" : "setComponents",
        "dataType" : "List<Component>",
        "datatypeWithEnum" : "List<Component>",
        "name" : "Components",
        "defaultValueWithParam" : " = data.Components;",
        "baseType" : "List",
        "containerType" : "array",
        "containerTypeMapped" : "List",
        "jsonSchema" : "{\r\n  \"items\" : {\r\n    \"$ref\" : \"#/components/schemas/Component\"\r\n  },\r\n  \"type\" : \"array\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : false,
        "isContainer" : true,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : true,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "items" : {
          "openApiType" : "Component",
          "baseName" : "Components",
          "complexType" : "Component",
          "getter" : "getComponents",
          "setter" : "setComponents",
          "dataType" : "Component",
          "datatypeWithEnum" : "Component",
          "name" : "Components",
          "defaultValueWithParam" : " = data.Components;",
          "baseType" : "Component",
          "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Component\"\r\n}",
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false,
          "required" : false,
          "deprecated" : false,
          "hasMoreNonReadOnly" : false,
          "isPrimitiveType" : false,
          "isModel" : true,
          "isContainer" : false,
          "isString" : false,
          "isNumeric" : false,
          "isInteger" : false,
          "isShort" : false,
          "isLong" : false,
          "isUnboundedInteger" : false,
          "isNumber" : false,
          "isFloat" : false,
          "isDouble" : false,
          "isDecimal" : false,
          "isByteArray" : false,
          "isBinary" : false,
          "isFile" : false,
          "isBoolean" : false,
          "isDate" : false,
          "isDateTime" : false,
          "isUuid" : false,
          "isUri" : false,
          "isEmail" : false,
          "isPassword" : false,
          "isNull" : false,
          "isVoid" : false,
          "isFreeFormObject" : false,
          "isAnyType" : false,
          "isArray" : false,
          "isMap" : false,
          "isOptional" : false,
          "isEnum" : false,
          "isInnerEnum" : false,
          "isEnumRef" : false,
          "isReadOnly" : false,
          "isWriteOnly" : false,
          "isNullable" : false,
          "isSelfReference" : false,
          "isCircularReference" : false,
          "isDiscriminator" : false,
          "isNew" : false,
          "vars" : [ ],
          "requiredVars" : [ ],
          "vendorExtensions" : { },
          "hasValidation" : false,
          "isInherited" : false,
          "nameInCamelCase" : "components",
          "nameInPascalCase" : "Components",
          "nameInSnakeCase" : "COMPONENTS",
          "uniqueItems" : false,
          "isXmlAttribute" : false,
          "isXmlWrapped" : false,
          "additionalPropertiesIsAnyType" : false,
          "hasVars" : false,
          "hasRequired" : false,
          "hasDiscriminatorWithNonEmptyMapping" : false,
          "hasMultipleTypes" : false,
          "hasSanitizedName" : false,
          "ref" : "#/components/schemas/Component",
          "schemaIsFromAdditionalProperties" : false,
          "isBooleanSchemaTrue" : false,
          "isBooleanSchemaFalse" : false,
          "hasItems" : false,
          "datatype" : "Component",
          "isEnumOrRef" : false,
          "iexclusiveMaximum" : false
        },
        "vars" : [ ],
        "requiredVars" : [ ],
        "mostInnerItems" : {
          "openApiType" : "Component",
          "baseName" : "Components",
          "complexType" : "Component",
          "getter" : "getComponents",
          "setter" : "setComponents",
          "dataType" : "Component",
          "datatypeWithEnum" : "Component",
          "name" : "Components",
          "defaultValueWithParam" : " = data.Components;",
          "baseType" : "Component",
          "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Component\"\r\n}",
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false,
          "required" : false,
          "deprecated" : false,
          "hasMoreNonReadOnly" : false,
          "isPrimitiveType" : false,
          "isModel" : true,
          "isContainer" : false,
          "isString" : false,
          "isNumeric" : false,
          "isInteger" : false,
          "isShort" : false,
          "isLong" : false,
          "isUnboundedInteger" : false,
          "isNumber" : false,
          "isFloat" : false,
          "isDouble" : false,
          "isDecimal" : false,
          "isByteArray" : false,
          "isBinary" : false,
          "isFile" : false,
          "isBoolean" : false,
          "isDate" : false,
          "isDateTime" : false,
          "isUuid" : false,
          "isUri" : false,
          "isEmail" : false,
          "isPassword" : false,
          "isNull" : false,
          "isVoid" : false,
          "isFreeFormObject" : false,
          "isAnyType" : false,
          "isArray" : false,
          "isMap" : false,
          "isOptional" : false,
          "isEnum" : false,
          "isInnerEnum" : false,
          "isEnumRef" : false,
          "isReadOnly" : false,
          "isWriteOnly" : false,
          "isNullable" : false,
          "isSelfReference" : false,
          "isCircularReference" : false,
          "isDiscriminator" : false,
          "isNew" : false,
          "vars" : [ ],
          "requiredVars" : [ ],
          "vendorExtensions" : { },
          "hasValidation" : false,
          "isInherited" : false,
          "nameInCamelCase" : "components",
          "nameInPascalCase" : "Components",
          "nameInSnakeCase" : "COMPONENTS",
          "uniqueItems" : false,
          "isXmlAttribute" : false,
          "isXmlWrapped" : false,
          "additionalPropertiesIsAnyType" : false,
          "hasVars" : false,
          "hasRequired" : false,
          "hasDiscriminatorWithNonEmptyMapping" : false,
          "hasMultipleTypes" : false,
          "hasSanitizedName" : false,
          "ref" : "#/components/schemas/Component",
          "schemaIsFromAdditionalProperties" : false,
          "isBooleanSchemaTrue" : false,
          "isBooleanSchemaFalse" : false,
          "hasItems" : false,
          "datatype" : "Component",
          "isEnumOrRef" : false,
          "iexclusiveMaximum" : false
        },
        "vendorExtensions" : {
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "components",
        "nameInPascalCase" : "Components",
        "nameInSnakeCase" : "COMPONENTS",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : true,
        "datatype" : "List<Component>",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "DeviceName",
        "baseName" : "DeviceName",
        "complexType" : "DeviceName",
        "getter" : "getDeviceName",
        "setter" : "setDeviceName",
        "dataType" : "DeviceName",
        "datatypeWithEnum" : "DeviceName",
        "name" : "DeviceName",
        "defaultValueWithParam" : " = data.DeviceName;",
        "baseType" : "DeviceName",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/DeviceName\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : {
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "deviceName",
        "nameInPascalCase" : "DeviceName",
        "nameInSnakeCase" : "DEVICE_NAME",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/DeviceName",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "DeviceName",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "DeviceUUID",
        "baseName" : "DeviceUUID",
        "complexType" : "DeviceUUID",
        "getter" : "getDeviceUUID",
        "setter" : "setDeviceUUID",
        "dataType" : "DeviceUUID",
        "datatypeWithEnum" : "DeviceUUID",
        "name" : "DeviceUUID",
        "defaultValueWithParam" : " = data.DeviceUUID;",
        "baseType" : "DeviceUUID",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/DeviceUUID\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : {
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "deviceUUID",
        "nameInPascalCase" : "DeviceUUID",
        "nameInSnakeCase" : "DEVICE_U_U_I_D",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/DeviceUUID",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "DeviceUUID",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "array",
        "baseName" : "CryptographicKeyIDs",
        "complexType" : "CryptographicKeyID",
        "getter" : "getCryptographicKeyIDs",
        "setter" : "setCryptographicKeyIDs",
        "dataType" : "List<CryptographicKeyID>",
        "datatypeWithEnum" : "List<CryptographicKeyID>",
        "name" : "CryptographicKeyIDs",
        "defaultValueWithParam" : " = data.CryptographicKeyIDs;",
        "baseType" : "List",
        "containerType" : "array",
        "containerTypeMapped" : "List",
        "jsonSchema" : "{\r\n  \"items\" : {\r\n    \"$ref\" : \"#/components/schemas/CryptographicKeyID\"\r\n  },\r\n  \"type\" : \"array\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : false,
        "isContainer" : true,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : true,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "items" : {
          "openApiType" : "CryptographicKeyID",
          "baseName" : "CryptographicKeyIDs",
          "complexType" : "CryptographicKeyID",
          "getter" : "getCryptographicKeyIDs",
          "setter" : "setCryptographicKeyIDs",
          "dataType" : "CryptographicKeyID",
          "datatypeWithEnum" : "CryptographicKeyID",
          "name" : "CryptographicKeyIDs",
          "defaultValueWithParam" : " = data.CryptographicKeyIDs;",
          "baseType" : "CryptographicKeyID",
          "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/CryptographicKeyID\"\r\n}",
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false,
          "required" : false,
          "deprecated" : false,
          "hasMoreNonReadOnly" : false,
          "isPrimitiveType" : false,
          "isModel" : true,
          "isContainer" : false,
          "isString" : false,
          "isNumeric" : false,
          "isInteger" : false,
          "isShort" : false,
          "isLong" : false,
          "isUnboundedInteger" : false,
          "isNumber" : false,
          "isFloat" : false,
          "isDouble" : false,
          "isDecimal" : false,
          "isByteArray" : false,
          "isBinary" : false,
          "isFile" : false,
          "isBoolean" : false,
          "isDate" : false,
          "isDateTime" : false,
          "isUuid" : false,
          "isUri" : false,
          "isEmail" : false,
          "isPassword" : false,
          "isNull" : false,
          "isVoid" : false,
          "isFreeFormObject" : false,
          "isAnyType" : false,
          "isArray" : false,
          "isMap" : false,
          "isOptional" : false,
          "isEnum" : false,
          "isInnerEnum" : false,
          "isEnumRef" : false,
          "isReadOnly" : false,
          "isWriteOnly" : false,
          "isNullable" : false,
          "isSelfReference" : false,
          "isCircularReference" : false,
          "isDiscriminator" : false,
          "isNew" : false,
          "vars" : [ ],
          "requiredVars" : [ ],
          "vendorExtensions" : { },
          "hasValidation" : false,
          "isInherited" : false,
          "nameInCamelCase" : "cryptographicKeyIDs",
          "nameInPascalCase" : "CryptographicKeyIDs",
          "nameInSnakeCase" : "CRYPTOGRAPHIC_KEY_I_DS",
          "uniqueItems" : false,
          "isXmlAttribute" : false,
          "isXmlWrapped" : false,
          "additionalPropertiesIsAnyType" : false,
          "hasVars" : false,
          "hasRequired" : false,
          "hasDiscriminatorWithNonEmptyMapping" : false,
          "hasMultipleTypes" : false,
          "hasSanitizedName" : false,
          "ref" : "#/components/schemas/CryptographicKeyID",
          "schemaIsFromAdditionalProperties" : false,
          "isBooleanSchemaTrue" : false,
          "isBooleanSchemaFalse" : false,
          "hasItems" : false,
          "datatype" : "CryptographicKeyID",
          "isEnumOrRef" : false,
          "iexclusiveMaximum" : false
        },
        "vars" : [ ],
        "requiredVars" : [ ],
        "mostInnerItems" : {
          "openApiType" : "CryptographicKeyID",
          "baseName" : "CryptographicKeyIDs",
          "complexType" : "CryptographicKeyID",
          "getter" : "getCryptographicKeyIDs",
          "setter" : "setCryptographicKeyIDs",
          "dataType" : "CryptographicKeyID",
          "datatypeWithEnum" : "CryptographicKeyID",
          "name" : "CryptographicKeyIDs",
          "defaultValueWithParam" : " = data.CryptographicKeyIDs;",
          "baseType" : "CryptographicKeyID",
          "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/CryptographicKeyID\"\r\n}",
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false,
          "required" : false,
          "deprecated" : false,
          "hasMoreNonReadOnly" : false,
          "isPrimitiveType" : false,
          "isModel" : true,
          "isContainer" : false,
          "isString" : false,
          "isNumeric" : false,
          "isInteger" : false,
          "isShort" : false,
          "isLong" : false,
          "isUnboundedInteger" : false,
          "isNumber" : false,
          "isFloat" : false,
          "isDouble" : false,
          "isDecimal" : false,
          "isByteArray" : false,
          "isBinary" : false,
          "isFile" : false,
          "isBoolean" : false,
          "isDate" : false,
          "isDateTime" : false,
          "isUuid" : false,
          "isUri" : false,
          "isEmail" : false,
          "isPassword" : false,
          "isNull" : false,
          "isVoid" : false,
          "isFreeFormObject" : false,
          "isAnyType" : false,
          "isArray" : false,
          "isMap" : false,
          "isOptional" : false,
          "isEnum" : false,
          "isInnerEnum" : false,
          "isEnumRef" : false,
          "isReadOnly" : false,
          "isWriteOnly" : false,
          "isNullable" : false,
          "isSelfReference" : false,
          "isCircularReference" : false,
          "isDiscriminator" : false,
          "isNew" : false,
          "vars" : [ ],
          "requiredVars" : [ ],
          "vendorExtensions" : { },
          "hasValidation" : false,
          "isInherited" : false,
          "nameInCamelCase" : "cryptographicKeyIDs",
          "nameInPascalCase" : "CryptographicKeyIDs",
          "nameInSnakeCase" : "CRYPTOGRAPHIC_KEY_I_DS",
          "uniqueItems" : false,
          "isXmlAttribute" : false,
          "isXmlWrapped" : false,
          "additionalPropertiesIsAnyType" : false,
          "hasVars" : false,
          "hasRequired" : false,
          "hasDiscriminatorWithNonEmptyMapping" : false,
          "hasMultipleTypes" : false,
          "hasSanitizedName" : false,
          "ref" : "#/components/schemas/CryptographicKeyID",
          "schemaIsFromAdditionalProperties" : false,
          "isBooleanSchemaTrue" : false,
          "isBooleanSchemaFalse" : false,
          "hasItems" : false,
          "datatype" : "CryptographicKeyID",
          "isEnumOrRef" : false,
          "iexclusiveMaximum" : false
        },
        "vendorExtensions" : {
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "cryptographicKeyIDs",
        "nameInPascalCase" : "CryptographicKeyIDs",
        "nameInSnakeCase" : "CRYPTOGRAPHIC_KEY_I_DS",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : true,
        "datatype" : "List<CryptographicKeyID>",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "IsMaintainable",
        "baseName" : "IsMaintainable",
        "complexType" : "IsMaintainable",
        "getter" : "getIsMaintainable",
        "setter" : "setIsMaintainable",
        "dataType" : "IsMaintainable",
        "datatypeWithEnum" : "IsMaintainable",
        "name" : "IsMaintainable",
        "defaultValueWithParam" : " = data.IsMaintainable;",
        "baseType" : "IsMaintainable",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/IsMaintainable\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : {
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "isMaintainable",
        "nameInPascalCase" : "IsMaintainable",
        "nameInSnakeCase" : "IS_MAINTAINABLE",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/IsMaintainable",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "IsMaintainable",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "array",
        "baseName" : "Nodes",
        "complexType" : "Node",
        "getter" : "getNodes",
        "setter" : "setNodes",
        "dataType" : "List<Node>",
        "datatypeWithEnum" : "List<Node>",
        "name" : "Nodes",
        "defaultValueWithParam" : " = data.Nodes;",
        "baseType" : "List",
        "containerType" : "array",
        "containerTypeMapped" : "List",
        "jsonSchema" : "{\r\n  \"items\" : {\r\n    \"$ref\" : \"#/components/schemas/Node\"\r\n  },\r\n  \"type\" : \"array\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : false,
        "isContainer" : true,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : true,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "items" : {
          "openApiType" : "Node",
          "baseName" : "Nodes",
          "complexType" : "Node",
          "getter" : "getNodes",
          "setter" : "setNodes",
          "dataType" : "Node",
          "datatypeWithEnum" : "Node",
          "name" : "Nodes",
          "defaultValueWithParam" : " = data.Nodes;",
          "baseType" : "Node",
          "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Node\"\r\n}",
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false,
          "required" : false,
          "deprecated" : false,
          "hasMoreNonReadOnly" : false,
          "isPrimitiveType" : false,
          "isModel" : true,
          "isContainer" : false,
          "isString" : false,
          "isNumeric" : false,
          "isInteger" : false,
          "isShort" : false,
          "isLong" : false,
          "isUnboundedInteger" : false,
          "isNumber" : false,
          "isFloat" : false,
          "isDouble" : false,
          "isDecimal" : false,
          "isByteArray" : false,
          "isBinary" : false,
          "isFile" : false,
          "isBoolean" : false,
          "isDate" : false,
          "isDateTime" : false,
          "isUuid" : false,
          "isUri" : false,
          "isEmail" : false,
          "isPassword" : false,
          "isNull" : false,
          "isVoid" : false,
          "isFreeFormObject" : false,
          "isAnyType" : false,
          "isArray" : false,
          "isMap" : false,
          "isOptional" : false,
          "isEnum" : false,
          "isInnerEnum" : false,
          "isEnumRef" : false,
          "isReadOnly" : false,
          "isWriteOnly" : false,
          "isNullable" : false,
          "isSelfReference" : false,
          "isCircularReference" : false,
          "isDiscriminator" : false,
          "isNew" : false,
          "vars" : [ ],
          "requiredVars" : [ ],
          "vendorExtensions" : { },
          "hasValidation" : false,
          "isInherited" : false,
          "nameInCamelCase" : "nodes",
          "nameInPascalCase" : "Nodes",
          "nameInSnakeCase" : "NODES",
          "uniqueItems" : false,
          "isXmlAttribute" : false,
          "isXmlWrapped" : false,
          "additionalPropertiesIsAnyType" : false,
          "hasVars" : false,
          "hasRequired" : false,
          "hasDiscriminatorWithNonEmptyMapping" : false,
          "hasMultipleTypes" : false,
          "hasSanitizedName" : false,
          "ref" : "#/components/schemas/Node",
          "schemaIsFromAdditionalProperties" : false,
          "isBooleanSchemaTrue" : false,
          "isBooleanSchemaFalse" : false,
          "hasItems" : false,
          "datatype" : "Node",
          "isEnumOrRef" : false,
          "iexclusiveMaximum" : false
        },
        "vars" : [ ],
        "requiredVars" : [ ],
        "mostInnerItems" : {
          "openApiType" : "Node",
          "baseName" : "Nodes",
          "complexType" : "Node",
          "getter" : "getNodes",
          "setter" : "setNodes",
          "dataType" : "Node",
          "datatypeWithEnum" : "Node",
          "name" : "Nodes",
          "defaultValueWithParam" : " = data.Nodes;",
          "baseType" : "Node",
          "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Node\"\r\n}",
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false,
          "required" : false,
          "deprecated" : false,
          "hasMoreNonReadOnly" : false,
          "isPrimitiveType" : false,
          "isModel" : true,
          "isContainer" : false,
          "isString" : false,
          "isNumeric" : false,
          "isInteger" : false,
          "isShort" : false,
          "isLong" : false,
          "isUnboundedInteger" : false,
          "isNumber" : false,
          "isFloat" : false,
          "isDouble" : false,
          "isDecimal" : false,
          "isByteArray" : false,
          "isBinary" : false,
          "isFile" : false,
          "isBoolean" : false,
          "isDate" : false,
          "isDateTime" : false,
          "isUuid" : false,
          "isUri" : false,
          "isEmail" : false,
          "isPassword" : false,
          "isNull" : false,
          "isVoid" : false,
          "isFreeFormObject" : false,
          "isAnyType" : false,
          "isArray" : false,
          "isMap" : false,
          "isOptional" : false,
          "isEnum" : false,
          "isInnerEnum" : false,
          "isEnumRef" : false,
          "isReadOnly" : false,
          "isWriteOnly" : false,
          "isNullable" : false,
          "isSelfReference" : false,
          "isCircularReference" : false,
          "isDiscriminator" : false,
          "isNew" : false,
          "vars" : [ ],
          "requiredVars" : [ ],
          "vendorExtensions" : { },
          "hasValidation" : false,
          "isInherited" : false,
          "nameInCamelCase" : "nodes",
          "nameInPascalCase" : "Nodes",
          "nameInSnakeCase" : "NODES",
          "uniqueItems" : false,
          "isXmlAttribute" : false,
          "isXmlWrapped" : false,
          "additionalPropertiesIsAnyType" : false,
          "hasVars" : false,
          "hasRequired" : false,
          "hasDiscriminatorWithNonEmptyMapping" : false,
          "hasMultipleTypes" : false,
          "hasSanitizedName" : false,
          "ref" : "#/components/schemas/Node",
          "schemaIsFromAdditionalProperties" : false,
          "isBooleanSchemaTrue" : false,
          "isBooleanSchemaFalse" : false,
          "hasItems" : false,
          "datatype" : "Node",
          "isEnumOrRef" : false,
          "iexclusiveMaximum" : false
        },
        "vendorExtensions" : {
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "nodes",
        "nameInPascalCase" : "Nodes",
        "nameInSnakeCase" : "NODES",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : true,
        "datatype" : "List<Node>",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      } ],
      "readOnlyVars" : [ ],
      "readWriteVars" : [ {
        "openApiType" : "array",
        "baseName" : "Locations",
        "getter" : "getLocations",
        "setter" : "setLocations",
        "dataType" : "List<Location>",
        "datatypeWithEnum" : "List<Location>",
        "name" : "Locations",
        "defaultValueWithParam" : " = data.Locations;",
        "baseType" : "List",
        "containerType" : "array",
        "containerTypeMapped" : "List",
        "jsonSchema" : "{\r\n  \"items\" : {\r\n    \"$ref\" : \"#/components/schemas/Location\"\r\n  },\r\n  \"type\" : \"array\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : true,
        "isModel" : false,
        "isContainer" : true,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : true,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : false,
        "items" : {
          "openApiType" : "Location",
          "baseName" : "Locations",
          "getter" : "getLocations",
          "setter" : "setLocations",
          "dataType" : "Location",
          "datatypeWithEnum" : "Location",
          "name" : "Locations",
          "defaultValueWithParam" : " = data.Locations;",
          "baseType" : "Location",
          "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Location\"\r\n}",
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false,
          "required" : false,
          "deprecated" : false,
          "hasMoreNonReadOnly" : false,
          "isPrimitiveType" : true,
          "isModel" : true,
          "isContainer" : false,
          "isString" : false,
          "isNumeric" : false,
          "isInteger" : false,
          "isShort" : false,
          "isLong" : false,
          "isUnboundedInteger" : false,
          "isNumber" : false,
          "isFloat" : false,
          "isDouble" : false,
          "isDecimal" : false,
          "isByteArray" : false,
          "isBinary" : false,
          "isFile" : false,
          "isBoolean" : false,
          "isDate" : false,
          "isDateTime" : false,
          "isUuid" : false,
          "isUri" : false,
          "isEmail" : false,
          "isPassword" : false,
          "isNull" : false,
          "isVoid" : false,
          "isFreeFormObject" : false,
          "isAnyType" : false,
          "isArray" : false,
          "isMap" : false,
          "isOptional" : false,
          "isEnum" : false,
          "isInnerEnum" : false,
          "isEnumRef" : false,
          "isReadOnly" : false,
          "isWriteOnly" : false,
          "isNullable" : false,
          "isSelfReference" : false,
          "isCircularReference" : false,
          "isDiscriminator" : false,
          "isNew" : false,
          "vars" : [ ],
          "requiredVars" : [ ],
          "vendorExtensions" : {
            "x-ob-usage-tips" : ""
          },
          "hasValidation" : false,
          "isInherited" : false,
          "nameInCamelCase" : "locations",
          "nameInPascalCase" : "Locations",
          "nameInSnakeCase" : "LOCATIONS",
          "uniqueItems" : false,
          "isXmlAttribute" : false,
          "isXmlWrapped" : false,
          "additionalPropertiesIsAnyType" : false,
          "hasVars" : false,
          "hasRequired" : false,
          "hasDiscriminatorWithNonEmptyMapping" : false,
          "hasMultipleTypes" : false,
          "hasSanitizedName" : false,
          "ref" : "#/components/schemas/Location",
          "schemaIsFromAdditionalProperties" : false,
          "isBooleanSchemaTrue" : false,
          "isBooleanSchemaFalse" : false,
          "hasItems" : false,
          "datatype" : "Location",
          "isEnumOrRef" : false,
          "iexclusiveMaximum" : false
        },
        "vars" : [ ],
        "requiredVars" : [ ],
        "mostInnerItems" : {
          "openApiType" : "Location",
          "baseName" : "Locations",
          "getter" : "getLocations",
          "setter" : "setLocations",
          "dataType" : "Location",
          "datatypeWithEnum" : "Location",
          "name" : "Locations",
          "defaultValueWithParam" : " = data.Locations;",
          "baseType" : "Location",
          "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Location\"\r\n}",
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false,
          "required" : false,
          "deprecated" : false,
          "hasMoreNonReadOnly" : false,
          "isPrimitiveType" : true,
          "isModel" : true,
          "isContainer" : false,
          "isString" : false,
          "isNumeric" : false,
          "isInteger" : false,
          "isShort" : false,
          "isLong" : false,
          "isUnboundedInteger" : false,
          "isNumber" : false,
          "isFloat" : false,
          "isDouble" : false,
          "isDecimal" : false,
          "isByteArray" : false,
          "isBinary" : false,
          "isFile" : false,
          "isBoolean" : false,
          "isDate" : false,
          "isDateTime" : false,
          "isUuid" : false,
          "isUri" : false,
          "isEmail" : false,
          "isPassword" : false,
          "isNull" : false,
          "isVoid" : false,
          "isFreeFormObject" : false,
          "isAnyType" : false,
          "isArray" : false,
          "isMap" : false,
          "isOptional" : false,
          "isEnum" : false,
          "isInnerEnum" : false,
          "isEnumRef" : false,
          "isReadOnly" : false,
          "isWriteOnly" : false,
          "isNullable" : false,
          "isSelfReference" : false,
          "isCircularReference" : false,
          "isDiscriminator" : false,
          "isNew" : false,
          "vars" : [ ],
          "requiredVars" : [ ],
          "vendorExtensions" : {
            "x-ob-usage-tips" : ""
          },
          "hasValidation" : false,
          "isInherited" : false,
          "nameInCamelCase" : "locations",
          "nameInPascalCase" : "Locations",
          "nameInSnakeCase" : "LOCATIONS",
          "uniqueItems" : false,
          "isXmlAttribute" : false,
          "isXmlWrapped" : false,
          "additionalPropertiesIsAnyType" : false,
          "hasVars" : false,
          "hasRequired" : false,
          "hasDiscriminatorWithNonEmptyMapping" : false,
          "hasMultipleTypes" : false,
          "hasSanitizedName" : false,
          "ref" : "#/components/schemas/Location",
          "schemaIsFromAdditionalProperties" : false,
          "isBooleanSchemaTrue" : false,
          "isBooleanSchemaFalse" : false,
          "hasItems" : false,
          "datatype" : "Location",
          "isEnumOrRef" : false,
          "iexclusiveMaximum" : false
        },
        "vendorExtensions" : {
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "locations",
        "nameInPascalCase" : "Locations",
        "nameInSnakeCase" : "LOCATIONS",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : true,
        "datatype" : "List<Location>",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "SerialNum",
        "baseName" : "SerialNum",
        "complexType" : "SerialNum",
        "getter" : "getSerialNum",
        "setter" : "setSerialNum",
        "dataType" : "SerialNum",
        "datatypeWithEnum" : "SerialNum",
        "name" : "SerialNum",
        "defaultValueWithParam" : " = data.SerialNum;",
        "baseType" : "SerialNum",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/SerialNum\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : {
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "serialNum",
        "nameInPascalCase" : "SerialNum",
        "nameInSnakeCase" : "SERIAL_NUM",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/SerialNum",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "SerialNum",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "Description",
        "baseName" : "Description",
        "complexType" : "Description",
        "getter" : "getDescription",
        "setter" : "setDescription",
        "dataType" : "Description",
        "datatypeWithEnum" : "Description",
        "name" : "Description",
        "defaultValueWithParam" : " = data.Description;",
        "baseType" : "Description",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Description\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : {
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "description",
        "nameInPascalCase" : "Description",
        "nameInSnakeCase" : "DESCRIPTION",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/Description",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "Description",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "URL",
        "baseName" : "URL",
        "complexType" : "URL",
        "getter" : "getURL",
        "setter" : "setURL",
        "dataType" : "URL",
        "datatypeWithEnum" : "URL",
        "name" : "URL",
        "defaultValueWithParam" : " = data.URL;",
        "baseType" : "URL",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/URL\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : {
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "uRL",
        "nameInPascalCase" : "URL",
        "nameInSnakeCase" : "U_R_L",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/URL",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "URL",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "ProdCode",
        "baseName" : "ProdCode",
        "complexType" : "ProdCode",
        "getter" : "getProdCode",
        "setter" : "setProdCode",
        "dataType" : "ProdCode",
        "datatypeWithEnum" : "ProdCode",
        "name" : "ProdCode",
        "defaultValueWithParam" : " = data.ProdCode;",
        "baseType" : "ProdCode",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/ProdCode\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : {
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "prodCode",
        "nameInPascalCase" : "ProdCode",
        "nameInSnakeCase" : "PROD_CODE",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/ProdCode",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "ProdCode",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "ProdID",
        "baseName" : "ProdID",
        "complexType" : "ProdID",
        "getter" : "getProdID",
        "setter" : "setProdID",
        "dataType" : "ProdID",
        "datatypeWithEnum" : "ProdID",
        "name" : "ProdID",
        "defaultValueWithParam" : " = data.ProdID;",
        "baseType" : "ProdID",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/ProdID\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : {
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "prodID",
        "nameInPascalCase" : "ProdID",
        "nameInSnakeCase" : "PROD_I_D",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/ProdID",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "ProdID",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "Firmware",
        "baseName" : "Firmware",
        "complexType" : "Firmware",
        "getter" : "getFirmware",
        "setter" : "setFirmware",
        "dataType" : "Firmware",
        "datatypeWithEnum" : "Firmware",
        "name" : "Firmware",
        "defaultValueWithParam" : " = data.Firmware;",
        "baseType" : "Firmware",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Firmware\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : {
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "firmware",
        "nameInPascalCase" : "Firmware",
        "nameInSnakeCase" : "FIRMWARE",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/Firmware",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "Firmware",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "MaintDateLast",
        "baseName" : "MaintDateLast",
        "complexType" : "MaintDateLast",
        "getter" : "getMaintDateLast",
        "setter" : "setMaintDateLast",
        "dataType" : "MaintDateLast",
        "datatypeWithEnum" : "MaintDateLast",
        "name" : "MaintDateLast",
        "defaultValueWithParam" : " = data.MaintDateLast;",
        "baseType" : "MaintDateLast",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/MaintDateLast\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : {
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "maintDateLast",
        "nameInPascalCase" : "MaintDateLast",
        "nameInSnakeCase" : "MAINT_DATE_LAST",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/MaintDateLast",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "MaintDateLast",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "InServiceDate",
        "baseName" : "InServiceDate",
        "complexType" : "InServiceDate",
        "getter" : "getInServiceDate",
        "setter" : "setInServiceDate",
        "dataType" : "InServiceDate",
        "datatypeWithEnum" : "InServiceDate",
        "name" : "InServiceDate",
        "defaultValueWithParam" : " = data.InServiceDate;",
        "baseType" : "InServiceDate",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/InServiceDate\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : {
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "inServiceDate",
        "nameInPascalCase" : "InServiceDate",
        "nameInSnakeCase" : "IN_SERVICE_DATE",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/InServiceDate",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "InServiceDate",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "Calibration",
        "baseName" : "Calibration",
        "complexType" : "Calibration",
        "getter" : "getCalibration",
        "setter" : "setCalibration",
        "dataType" : "Calibration",
        "datatypeWithEnum" : "Calibration",
        "name" : "Calibration",
        "defaultValueWithParam" : " = data.Calibration;",
        "baseType" : "Calibration",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Calibration\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : {
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true,
          "x-ob-usage-tips" : ""
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "calibration",
        "nameInPascalCase" : "Calibration",
        "nameInSnakeCase" : "CALIBRATION",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/Calibration",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "Calibration",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "array",
        "baseName" : "Warranties",
        "complexType" : "Warranty",
        "getter" : "getWarranties",
        "setter" : "setWarranties",
        "dataType" : "List<Warranty>",
        "datatypeWithEnum" : "List<Warranty>",
        "name" : "Warranties",
        "defaultValueWithParam" : " = data.Warranties;",
        "baseType" : "List",
        "containerType" : "array",
        "containerTypeMapped" : "List",
        "jsonSchema" : "{\r\n  \"items\" : {\r\n    \"$ref\" : \"#/components/schemas/Warranty\"\r\n  },\r\n  \"type\" : \"array\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : false,
        "isContainer" : true,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : true,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "items" : {
          "openApiType" : "Warranty",
          "baseName" : "Warranties",
          "complexType" : "Warranty",
          "getter" : "getWarranties",
          "setter" : "setWarranties",
          "dataType" : "Warranty",
          "datatypeWithEnum" : "Warranty",
          "name" : "Warranties",
          "defaultValueWithParam" : " = data.Warranties;",
          "baseType" : "Warranty",
          "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Warranty\"\r\n}",
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false,
          "required" : false,
          "deprecated" : false,
          "hasMoreNonReadOnly" : false,
          "isPrimitiveType" : false,
          "isModel" : true,
          "isContainer" : false,
          "isString" : false,
          "isNumeric" : false,
          "isInteger" : false,
          "isShort" : false,
          "isLong" : false,
          "isUnboundedInteger" : false,
          "isNumber" : false,
          "isFloat" : false,
          "isDouble" : false,
          "isDecimal" : false,
          "isByteArray" : false,
          "isBinary" : false,
          "isFile" : false,
          "isBoolean" : false,
          "isDate" : false,
          "isDateTime" : false,
          "isUuid" : false,
          "isUri" : false,
          "isEmail" : false,
          "isPassword" : false,
          "isNull" : false,
          "isVoid" : false,
          "isFreeFormObject" : false,
          "isAnyType" : false,
          "isArray" : false,
          "isMap" : false,
          "isOptional" : false,
          "isEnum" : false,
          "isInnerEnum" : false,
          "isEnumRef" : false,
          "isReadOnly" : false,
          "isWriteOnly" : false,
          "isNullable" : false,
          "isSelfReference" : false,
          "isCircularReference" : false,
          "isDiscriminator" : false,
          "isNew" : false,
          "vars" : [ ],
          "requiredVars" : [ ],
          "vendorExtensions" : { },
          "hasValidation" : false,
          "isInherited" : false,
          "nameInCamelCase" : "warranties",
          "nameInPascalCase" : "Warranties",
          "nameInSnakeCase" : "WARRANTIES",
          "uniqueItems" : false,
          "isXmlAttribute" : false,
          "isXmlWrapped" : false,
          "additionalPropertiesIsAnyType" : false,
          "hasVars" : false,
          "hasRequired" : false,
          "hasDiscriminatorWithNonEmptyMapping" : false,
          "hasMultipleTypes" : false,
          "hasSanitizedName" : false,
          "ref" : "#/components/schemas/Warranty",
          "schemaIsFromAdditionalProperties" : false,
          "isBooleanSchemaTrue" : false,
          "isBooleanSchemaFalse" : false,
          "hasItems" : false,
          "datatype" : "Warranty",
          "isEnumOrRef" : false,
          "iexclusiveMaximum" : false
        },
        "vars" : [ ],
        "requiredVars" : [ ],
        "mostInnerItems" : {
          "openApiType" : "Warranty",
          "baseName" : "Warranties",
          "complexType" : "Warranty",
          "getter" : "getWarranties",
          "setter" : "setWarranties",
          "dataType" : "Warranty",
          "datatypeWithEnum" : "Warranty",
          "name" : "Warranties",
          "defaultValueWithParam" : " = data.Warranties;",
          "baseType" : "Warranty",
          "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Warranty\"\r\n}",
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false,
          "required" : false,
          "deprecated" : false,
          "hasMoreNonReadOnly" : false,
          "isPrimitiveType" : false,
          "isModel" : true,
          "isContainer" : false,
          "isString" : false,
          "isNumeric" : false,
          "isInteger" : false,
          "isShort" : false,
          "isLong" : false,
          "isUnboundedInteger" : false,
          "isNumber" : false,
          "isFloat" : false,
          "isDouble" : false,
          "isDecimal" : false,
          "isByteArray" : false,
          "isBinary" : false,
          "isFile" : false,
          "isBoolean" : false,
          "isDate" : false,
          "isDateTime" : false,
          "isUuid" : false,
          "isUri" : false,
          "isEmail" : false,
          "isPassword" : false,
          "isNull" : false,
          "isVoid" : false,
          "isFreeFormObject" : false,
          "isAnyType" : false,
          "isArray" : false,
          "isMap" : false,
          "isOptional" : false,
          "isEnum" : false,
          "isInnerEnum" : false,
          "isEnumRef" : false,
          "isReadOnly" : false,
          "isWriteOnly" : false,
          "isNullable" : false,
          "isSelfReference" : false,
          "isCircularReference" : false,
          "isDiscriminator" : false,
          "isNew" : false,
          "vars" : [ ],
          "requiredVars" : [ ],
          "vendorExtensions" : { },
          "hasValidation" : false,
          "isInherited" : false,
          "nameInCamelCase" : "warranties",
          "nameInPascalCase" : "Warranties",
          "nameInSnakeCase" : "WARRANTIES",
          "uniqueItems" : false,
          "isXmlAttribute" : false,
          "isXmlWrapped" : false,
          "additionalPropertiesIsAnyType" : false,
          "hasVars" : false,
          "hasRequired" : false,
          "hasDiscriminatorWithNonEmptyMapping" : false,
          "hasMultipleTypes" : false,
          "hasSanitizedName" : false,
          "ref" : "#/components/schemas/Warranty",
          "schemaIsFromAdditionalProperties" : false,
          "isBooleanSchemaTrue" : false,
          "isBooleanSchemaFalse" : false,
          "hasItems" : false,
          "datatype" : "Warranty",
          "isEnumOrRef" : false,
          "iexclusiveMaximum" : false
        },
        "vendorExtensions" : {
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "warranties",
        "nameInPascalCase" : "Warranties",
        "nameInSnakeCase" : "WARRANTIES",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : true,
        "datatype" : "List<Warranty>",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "DeviceType",
        "baseName" : "DeviceType",
        "complexType" : "DeviceType",
        "getter" : "getDeviceType",
        "setter" : "setDeviceType",
        "dataType" : "DeviceType",
        "datatypeWithEnum" : "DeviceType",
        "name" : "DeviceType",
        "defaultValueWithParam" : " = data.DeviceType;",
        "baseType" : "DeviceType",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/DeviceType\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : {
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "deviceType",
        "nameInPascalCase" : "DeviceType",
        "nameInSnakeCase" : "DEVICE_TYPE",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/DeviceType",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "DeviceType",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "array",
        "baseName" : "Components",
        "complexType" : "Component",
        "getter" : "getComponents",
        "setter" : "setComponents",
        "dataType" : "List<Component>",
        "datatypeWithEnum" : "List<Component>",
        "name" : "Components",
        "defaultValueWithParam" : " = data.Components;",
        "baseType" : "List",
        "containerType" : "array",
        "containerTypeMapped" : "List",
        "jsonSchema" : "{\r\n  \"items\" : {\r\n    \"$ref\" : \"#/components/schemas/Component\"\r\n  },\r\n  \"type\" : \"array\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : false,
        "isContainer" : true,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : true,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "items" : {
          "openApiType" : "Component",
          "baseName" : "Components",
          "complexType" : "Component",
          "getter" : "getComponents",
          "setter" : "setComponents",
          "dataType" : "Component",
          "datatypeWithEnum" : "Component",
          "name" : "Components",
          "defaultValueWithParam" : " = data.Components;",
          "baseType" : "Component",
          "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Component\"\r\n}",
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false,
          "required" : false,
          "deprecated" : false,
          "hasMoreNonReadOnly" : false,
          "isPrimitiveType" : false,
          "isModel" : true,
          "isContainer" : false,
          "isString" : false,
          "isNumeric" : false,
          "isInteger" : false,
          "isShort" : false,
          "isLong" : false,
          "isUnboundedInteger" : false,
          "isNumber" : false,
          "isFloat" : false,
          "isDouble" : false,
          "isDecimal" : false,
          "isByteArray" : false,
          "isBinary" : false,
          "isFile" : false,
          "isBoolean" : false,
          "isDate" : false,
          "isDateTime" : false,
          "isUuid" : false,
          "isUri" : false,
          "isEmail" : false,
          "isPassword" : false,
          "isNull" : false,
          "isVoid" : false,
          "isFreeFormObject" : false,
          "isAnyType" : false,
          "isArray" : false,
          "isMap" : false,
          "isOptional" : false,
          "isEnum" : false,
          "isInnerEnum" : false,
          "isEnumRef" : false,
          "isReadOnly" : false,
          "isWriteOnly" : false,
          "isNullable" : false,
          "isSelfReference" : false,
          "isCircularReference" : false,
          "isDiscriminator" : false,
          "isNew" : false,
          "vars" : [ ],
          "requiredVars" : [ ],
          "vendorExtensions" : { },
          "hasValidation" : false,
          "isInherited" : false,
          "nameInCamelCase" : "components",
          "nameInPascalCase" : "Components",
          "nameInSnakeCase" : "COMPONENTS",
          "uniqueItems" : false,
          "isXmlAttribute" : false,
          "isXmlWrapped" : false,
          "additionalPropertiesIsAnyType" : false,
          "hasVars" : false,
          "hasRequired" : false,
          "hasDiscriminatorWithNonEmptyMapping" : false,
          "hasMultipleTypes" : false,
          "hasSanitizedName" : false,
          "ref" : "#/components/schemas/Component",
          "schemaIsFromAdditionalProperties" : false,
          "isBooleanSchemaTrue" : false,
          "isBooleanSchemaFalse" : false,
          "hasItems" : false,
          "datatype" : "Component",
          "isEnumOrRef" : false,
          "iexclusiveMaximum" : false
        },
        "vars" : [ ],
        "requiredVars" : [ ],
        "mostInnerItems" : {
          "openApiType" : "Component",
          "baseName" : "Components",
          "complexType" : "Component",
          "getter" : "getComponents",
          "setter" : "setComponents",
          "dataType" : "Component",
          "datatypeWithEnum" : "Component",
          "name" : "Components",
          "defaultValueWithParam" : " = data.Components;",
          "baseType" : "Component",
          "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Component\"\r\n}",
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false,
          "required" : false,
          "deprecated" : false,
          "hasMoreNonReadOnly" : false,
          "isPrimitiveType" : false,
          "isModel" : true,
          "isContainer" : false,
          "isString" : false,
          "isNumeric" : false,
          "isInteger" : false,
          "isShort" : false,
          "isLong" : false,
          "isUnboundedInteger" : false,
          "isNumber" : false,
          "isFloat" : false,
          "isDouble" : false,
          "isDecimal" : false,
          "isByteArray" : false,
          "isBinary" : false,
          "isFile" : false,
          "isBoolean" : false,
          "isDate" : false,
          "isDateTime" : false,
          "isUuid" : false,
          "isUri" : false,
          "isEmail" : false,
          "isPassword" : false,
          "isNull" : false,
          "isVoid" : false,
          "isFreeFormObject" : false,
          "isAnyType" : false,
          "isArray" : false,
          "isMap" : false,
          "isOptional" : false,
          "isEnum" : false,
          "isInnerEnum" : false,
          "isEnumRef" : false,
          "isReadOnly" : false,
          "isWriteOnly" : false,
          "isNullable" : false,
          "isSelfReference" : false,
          "isCircularReference" : false,
          "isDiscriminator" : false,
          "isNew" : false,
          "vars" : [ ],
          "requiredVars" : [ ],
          "vendorExtensions" : { },
          "hasValidation" : false,
          "isInherited" : false,
          "nameInCamelCase" : "components",
          "nameInPascalCase" : "Components",
          "nameInSnakeCase" : "COMPONENTS",
          "uniqueItems" : false,
          "isXmlAttribute" : false,
          "isXmlWrapped" : false,
          "additionalPropertiesIsAnyType" : false,
          "hasVars" : false,
          "hasRequired" : false,
          "hasDiscriminatorWithNonEmptyMapping" : false,
          "hasMultipleTypes" : false,
          "hasSanitizedName" : false,
          "ref" : "#/components/schemas/Component",
          "schemaIsFromAdditionalProperties" : false,
          "isBooleanSchemaTrue" : false,
          "isBooleanSchemaFalse" : false,
          "hasItems" : false,
          "datatype" : "Component",
          "isEnumOrRef" : false,
          "iexclusiveMaximum" : false
        },
        "vendorExtensions" : {
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "components",
        "nameInPascalCase" : "Components",
        "nameInSnakeCase" : "COMPONENTS",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : true,
        "datatype" : "List<Component>",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "DeviceName",
        "baseName" : "DeviceName",
        "complexType" : "DeviceName",
        "getter" : "getDeviceName",
        "setter" : "setDeviceName",
        "dataType" : "DeviceName",
        "datatypeWithEnum" : "DeviceName",
        "name" : "DeviceName",
        "defaultValueWithParam" : " = data.DeviceName;",
        "baseType" : "DeviceName",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/DeviceName\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : {
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "deviceName",
        "nameInPascalCase" : "DeviceName",
        "nameInSnakeCase" : "DEVICE_NAME",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/DeviceName",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "DeviceName",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "DeviceUUID",
        "baseName" : "DeviceUUID",
        "complexType" : "DeviceUUID",
        "getter" : "getDeviceUUID",
        "setter" : "setDeviceUUID",
        "dataType" : "DeviceUUID",
        "datatypeWithEnum" : "DeviceUUID",
        "name" : "DeviceUUID",
        "defaultValueWithParam" : " = data.DeviceUUID;",
        "baseType" : "DeviceUUID",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/DeviceUUID\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : {
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "deviceUUID",
        "nameInPascalCase" : "DeviceUUID",
        "nameInSnakeCase" : "DEVICE_U_U_I_D",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/DeviceUUID",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "DeviceUUID",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "array",
        "baseName" : "CryptographicKeyIDs",
        "complexType" : "CryptographicKeyID",
        "getter" : "getCryptographicKeyIDs",
        "setter" : "setCryptographicKeyIDs",
        "dataType" : "List<CryptographicKeyID>",
        "datatypeWithEnum" : "List<CryptographicKeyID>",
        "name" : "CryptographicKeyIDs",
        "defaultValueWithParam" : " = data.CryptographicKeyIDs;",
        "baseType" : "List",
        "containerType" : "array",
        "containerTypeMapped" : "List",
        "jsonSchema" : "{\r\n  \"items\" : {\r\n    \"$ref\" : \"#/components/schemas/CryptographicKeyID\"\r\n  },\r\n  \"type\" : \"array\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : false,
        "isContainer" : true,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : true,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "items" : {
          "openApiType" : "CryptographicKeyID",
          "baseName" : "CryptographicKeyIDs",
          "complexType" : "CryptographicKeyID",
          "getter" : "getCryptographicKeyIDs",
          "setter" : "setCryptographicKeyIDs",
          "dataType" : "CryptographicKeyID",
          "datatypeWithEnum" : "CryptographicKeyID",
          "name" : "CryptographicKeyIDs",
          "defaultValueWithParam" : " = data.CryptographicKeyIDs;",
          "baseType" : "CryptographicKeyID",
          "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/CryptographicKeyID\"\r\n}",
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false,
          "required" : false,
          "deprecated" : false,
          "hasMoreNonReadOnly" : false,
          "isPrimitiveType" : false,
          "isModel" : true,
          "isContainer" : false,
          "isString" : false,
          "isNumeric" : false,
          "isInteger" : false,
          "isShort" : false,
          "isLong" : false,
          "isUnboundedInteger" : false,
          "isNumber" : false,
          "isFloat" : false,
          "isDouble" : false,
          "isDecimal" : false,
          "isByteArray" : false,
          "isBinary" : false,
          "isFile" : false,
          "isBoolean" : false,
          "isDate" : false,
          "isDateTime" : false,
          "isUuid" : false,
          "isUri" : false,
          "isEmail" : false,
          "isPassword" : false,
          "isNull" : false,
          "isVoid" : false,
          "isFreeFormObject" : false,
          "isAnyType" : false,
          "isArray" : false,
          "isMap" : false,
          "isOptional" : false,
          "isEnum" : false,
          "isInnerEnum" : false,
          "isEnumRef" : false,
          "isReadOnly" : false,
          "isWriteOnly" : false,
          "isNullable" : false,
          "isSelfReference" : false,
          "isCircularReference" : false,
          "isDiscriminator" : false,
          "isNew" : false,
          "vars" : [ ],
          "requiredVars" : [ ],
          "vendorExtensions" : { },
          "hasValidation" : false,
          "isInherited" : false,
          "nameInCamelCase" : "cryptographicKeyIDs",
          "nameInPascalCase" : "CryptographicKeyIDs",
          "nameInSnakeCase" : "CRYPTOGRAPHIC_KEY_I_DS",
          "uniqueItems" : false,
          "isXmlAttribute" : false,
          "isXmlWrapped" : false,
          "additionalPropertiesIsAnyType" : false,
          "hasVars" : false,
          "hasRequired" : false,
          "hasDiscriminatorWithNonEmptyMapping" : false,
          "hasMultipleTypes" : false,
          "hasSanitizedName" : false,
          "ref" : "#/components/schemas/CryptographicKeyID",
          "schemaIsFromAdditionalProperties" : false,
          "isBooleanSchemaTrue" : false,
          "isBooleanSchemaFalse" : false,
          "hasItems" : false,
          "datatype" : "CryptographicKeyID",
          "isEnumOrRef" : false,
          "iexclusiveMaximum" : false
        },
        "vars" : [ ],
        "requiredVars" : [ ],
        "mostInnerItems" : {
          "openApiType" : "CryptographicKeyID",
          "baseName" : "CryptographicKeyIDs",
          "complexType" : "CryptographicKeyID",
          "getter" : "getCryptographicKeyIDs",
          "setter" : "setCryptographicKeyIDs",
          "dataType" : "CryptographicKeyID",
          "datatypeWithEnum" : "CryptographicKeyID",
          "name" : "CryptographicKeyIDs",
          "defaultValueWithParam" : " = data.CryptographicKeyIDs;",
          "baseType" : "CryptographicKeyID",
          "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/CryptographicKeyID\"\r\n}",
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false,
          "required" : false,
          "deprecated" : false,
          "hasMoreNonReadOnly" : false,
          "isPrimitiveType" : false,
          "isModel" : true,
          "isContainer" : false,
          "isString" : false,
          "isNumeric" : false,
          "isInteger" : false,
          "isShort" : false,
          "isLong" : false,
          "isUnboundedInteger" : false,
          "isNumber" : false,
          "isFloat" : false,
          "isDouble" : false,
          "isDecimal" : false,
          "isByteArray" : false,
          "isBinary" : false,
          "isFile" : false,
          "isBoolean" : false,
          "isDate" : false,
          "isDateTime" : false,
          "isUuid" : false,
          "isUri" : false,
          "isEmail" : false,
          "isPassword" : false,
          "isNull" : false,
          "isVoid" : false,
          "isFreeFormObject" : false,
          "isAnyType" : false,
          "isArray" : false,
          "isMap" : false,
          "isOptional" : false,
          "isEnum" : false,
          "isInnerEnum" : false,
          "isEnumRef" : false,
          "isReadOnly" : false,
          "isWriteOnly" : false,
          "isNullable" : false,
          "isSelfReference" : false,
          "isCircularReference" : false,
          "isDiscriminator" : false,
          "isNew" : false,
          "vars" : [ ],
          "requiredVars" : [ ],
          "vendorExtensions" : { },
          "hasValidation" : false,
          "isInherited" : false,
          "nameInCamelCase" : "cryptographicKeyIDs",
          "nameInPascalCase" : "CryptographicKeyIDs",
          "nameInSnakeCase" : "CRYPTOGRAPHIC_KEY_I_DS",
          "uniqueItems" : false,
          "isXmlAttribute" : false,
          "isXmlWrapped" : false,
          "additionalPropertiesIsAnyType" : false,
          "hasVars" : false,
          "hasRequired" : false,
          "hasDiscriminatorWithNonEmptyMapping" : false,
          "hasMultipleTypes" : false,
          "hasSanitizedName" : false,
          "ref" : "#/components/schemas/CryptographicKeyID",
          "schemaIsFromAdditionalProperties" : false,
          "isBooleanSchemaTrue" : false,
          "isBooleanSchemaFalse" : false,
          "hasItems" : false,
          "datatype" : "CryptographicKeyID",
          "isEnumOrRef" : false,
          "iexclusiveMaximum" : false
        },
        "vendorExtensions" : {
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "cryptographicKeyIDs",
        "nameInPascalCase" : "CryptographicKeyIDs",
        "nameInSnakeCase" : "CRYPTOGRAPHIC_KEY_I_DS",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : true,
        "datatype" : "List<CryptographicKeyID>",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "IsMaintainable",
        "baseName" : "IsMaintainable",
        "complexType" : "IsMaintainable",
        "getter" : "getIsMaintainable",
        "setter" : "setIsMaintainable",
        "dataType" : "IsMaintainable",
        "datatypeWithEnum" : "IsMaintainable",
        "name" : "IsMaintainable",
        "defaultValueWithParam" : " = data.IsMaintainable;",
        "baseType" : "IsMaintainable",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/IsMaintainable\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : {
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "isMaintainable",
        "nameInPascalCase" : "IsMaintainable",
        "nameInSnakeCase" : "IS_MAINTAINABLE",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/IsMaintainable",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "IsMaintainable",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "array",
        "baseName" : "Nodes",
        "complexType" : "Node",
        "getter" : "getNodes",
        "setter" : "setNodes",
        "dataType" : "List<Node>",
        "datatypeWithEnum" : "List<Node>",
        "name" : "Nodes",
        "defaultValueWithParam" : " = data.Nodes;",
        "baseType" : "List",
        "containerType" : "array",
        "containerTypeMapped" : "List",
        "jsonSchema" : "{\r\n  \"items\" : {\r\n    \"$ref\" : \"#/components/schemas/Node\"\r\n  },\r\n  \"type\" : \"array\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : false,
        "isContainer" : true,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : true,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "items" : {
          "openApiType" : "Node",
          "baseName" : "Nodes",
          "complexType" : "Node",
          "getter" : "getNodes",
          "setter" : "setNodes",
          "dataType" : "Node",
          "datatypeWithEnum" : "Node",
          "name" : "Nodes",
          "defaultValueWithParam" : " = data.Nodes;",
          "baseType" : "Node",
          "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Node\"\r\n}",
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false,
          "required" : false,
          "deprecated" : false,
          "hasMoreNonReadOnly" : false,
          "isPrimitiveType" : false,
          "isModel" : true,
          "isContainer" : false,
          "isString" : false,
          "isNumeric" : false,
          "isInteger" : false,
          "isShort" : false,
          "isLong" : false,
          "isUnboundedInteger" : false,
          "isNumber" : false,
          "isFloat" : false,
          "isDouble" : false,
          "isDecimal" : false,
          "isByteArray" : false,
          "isBinary" : false,
          "isFile" : false,
          "isBoolean" : false,
          "isDate" : false,
          "isDateTime" : false,
          "isUuid" : false,
          "isUri" : false,
          "isEmail" : false,
          "isPassword" : false,
          "isNull" : false,
          "isVoid" : false,
          "isFreeFormObject" : false,
          "isAnyType" : false,
          "isArray" : false,
          "isMap" : false,
          "isOptional" : false,
          "isEnum" : false,
          "isInnerEnum" : false,
          "isEnumRef" : false,
          "isReadOnly" : false,
          "isWriteOnly" : false,
          "isNullable" : false,
          "isSelfReference" : false,
          "isCircularReference" : false,
          "isDiscriminator" : false,
          "isNew" : false,
          "vars" : [ ],
          "requiredVars" : [ ],
          "vendorExtensions" : { },
          "hasValidation" : false,
          "isInherited" : false,
          "nameInCamelCase" : "nodes",
          "nameInPascalCase" : "Nodes",
          "nameInSnakeCase" : "NODES",
          "uniqueItems" : false,
          "isXmlAttribute" : false,
          "isXmlWrapped" : false,
          "additionalPropertiesIsAnyType" : false,
          "hasVars" : false,
          "hasRequired" : false,
          "hasDiscriminatorWithNonEmptyMapping" : false,
          "hasMultipleTypes" : false,
          "hasSanitizedName" : false,
          "ref" : "#/components/schemas/Node",
          "schemaIsFromAdditionalProperties" : false,
          "isBooleanSchemaTrue" : false,
          "isBooleanSchemaFalse" : false,
          "hasItems" : false,
          "datatype" : "Node",
          "isEnumOrRef" : false,
          "iexclusiveMaximum" : false
        },
        "vars" : [ ],
        "requiredVars" : [ ],
        "mostInnerItems" : {
          "openApiType" : "Node",
          "baseName" : "Nodes",
          "complexType" : "Node",
          "getter" : "getNodes",
          "setter" : "setNodes",
          "dataType" : "Node",
          "datatypeWithEnum" : "Node",
          "name" : "Nodes",
          "defaultValueWithParam" : " = data.Nodes;",
          "baseType" : "Node",
          "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Node\"\r\n}",
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false,
          "required" : false,
          "deprecated" : false,
          "hasMoreNonReadOnly" : false,
          "isPrimitiveType" : false,
          "isModel" : true,
          "isContainer" : false,
          "isString" : false,
          "isNumeric" : false,
          "isInteger" : false,
          "isShort" : false,
          "isLong" : false,
          "isUnboundedInteger" : false,
          "isNumber" : false,
          "isFloat" : false,
          "isDouble" : false,
          "isDecimal" : false,
          "isByteArray" : false,
          "isBinary" : false,
          "isFile" : false,
          "isBoolean" : false,
          "isDate" : false,
          "isDateTime" : false,
          "isUuid" : false,
          "isUri" : false,
          "isEmail" : false,
          "isPassword" : false,
          "isNull" : false,
          "isVoid" : false,
          "isFreeFormObject" : false,
          "isAnyType" : false,
          "isArray" : false,
          "isMap" : false,
          "isOptional" : false,
          "isEnum" : false,
          "isInnerEnum" : false,
          "isEnumRef" : false,
          "isReadOnly" : false,
          "isWriteOnly" : false,
          "isNullable" : false,
          "isSelfReference" : false,
          "isCircularReference" : false,
          "isDiscriminator" : false,
          "isNew" : false,
          "vars" : [ ],
          "requiredVars" : [ ],
          "vendorExtensions" : { },
          "hasValidation" : false,
          "isInherited" : false,
          "nameInCamelCase" : "nodes",
          "nameInPascalCase" : "Nodes",
          "nameInSnakeCase" : "NODES",
          "uniqueItems" : false,
          "isXmlAttribute" : false,
          "isXmlWrapped" : false,
          "additionalPropertiesIsAnyType" : false,
          "hasVars" : false,
          "hasRequired" : false,
          "hasDiscriminatorWithNonEmptyMapping" : false,
          "hasMultipleTypes" : false,
          "hasSanitizedName" : false,
          "ref" : "#/components/schemas/Node",
          "schemaIsFromAdditionalProperties" : false,
          "isBooleanSchemaTrue" : false,
          "isBooleanSchemaFalse" : false,
          "hasItems" : false,
          "datatype" : "Node",
          "isEnumOrRef" : false,
          "iexclusiveMaximum" : false
        },
        "vendorExtensions" : {
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "nodes",
        "nameInPascalCase" : "Nodes",
        "nameInSnakeCase" : "NODES",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : true,
        "datatype" : "List<Node>",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      } ],
      "parentVars" : [ ],
      "parentRequiredVars" : [ ],
      "nonNullableVars" : [ {
        "openApiType" : "array",
        "baseName" : "Locations",
        "getter" : "getLocations",
        "setter" : "setLocations",
        "dataType" : "List<Location>",
        "datatypeWithEnum" : "List<Location>",
        "name" : "Locations",
        "defaultValueWithParam" : " = data.Locations;",
        "baseType" : "List",
        "containerType" : "array",
        "containerTypeMapped" : "List",
        "jsonSchema" : "{\r\n  \"items\" : {\r\n    \"$ref\" : \"#/components/schemas/Location\"\r\n  },\r\n  \"type\" : \"array\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : true,
        "isModel" : false,
        "isContainer" : true,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : true,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : false,
        "items" : {
          "openApiType" : "Location",
          "baseName" : "Locations",
          "getter" : "getLocations",
          "setter" : "setLocations",
          "dataType" : "Location",
          "datatypeWithEnum" : "Location",
          "name" : "Locations",
          "defaultValueWithParam" : " = data.Locations;",
          "baseType" : "Location",
          "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Location\"\r\n}",
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false,
          "required" : false,
          "deprecated" : false,
          "hasMoreNonReadOnly" : false,
          "isPrimitiveType" : true,
          "isModel" : true,
          "isContainer" : false,
          "isString" : false,
          "isNumeric" : false,
          "isInteger" : false,
          "isShort" : false,
          "isLong" : false,
          "isUnboundedInteger" : false,
          "isNumber" : false,
          "isFloat" : false,
          "isDouble" : false,
          "isDecimal" : false,
          "isByteArray" : false,
          "isBinary" : false,
          "isFile" : false,
          "isBoolean" : false,
          "isDate" : false,
          "isDateTime" : false,
          "isUuid" : false,
          "isUri" : false,
          "isEmail" : false,
          "isPassword" : false,
          "isNull" : false,
          "isVoid" : false,
          "isFreeFormObject" : false,
          "isAnyType" : false,
          "isArray" : false,
          "isMap" : false,
          "isOptional" : false,
          "isEnum" : false,
          "isInnerEnum" : false,
          "isEnumRef" : false,
          "isReadOnly" : false,
          "isWriteOnly" : false,
          "isNullable" : false,
          "isSelfReference" : false,
          "isCircularReference" : false,
          "isDiscriminator" : false,
          "isNew" : false,
          "vars" : [ ],
          "requiredVars" : [ ],
          "vendorExtensions" : {
            "x-ob-usage-tips" : ""
          },
          "hasValidation" : false,
          "isInherited" : false,
          "nameInCamelCase" : "locations",
          "nameInPascalCase" : "Locations",
          "nameInSnakeCase" : "LOCATIONS",
          "uniqueItems" : false,
          "isXmlAttribute" : false,
          "isXmlWrapped" : false,
          "additionalPropertiesIsAnyType" : false,
          "hasVars" : false,
          "hasRequired" : false,
          "hasDiscriminatorWithNonEmptyMapping" : false,
          "hasMultipleTypes" : false,
          "hasSanitizedName" : false,
          "ref" : "#/components/schemas/Location",
          "schemaIsFromAdditionalProperties" : false,
          "isBooleanSchemaTrue" : false,
          "isBooleanSchemaFalse" : false,
          "hasItems" : false,
          "datatype" : "Location",
          "isEnumOrRef" : false,
          "iexclusiveMaximum" : false
        },
        "vars" : [ ],
        "requiredVars" : [ ],
        "mostInnerItems" : {
          "openApiType" : "Location",
          "baseName" : "Locations",
          "getter" : "getLocations",
          "setter" : "setLocations",
          "dataType" : "Location",
          "datatypeWithEnum" : "Location",
          "name" : "Locations",
          "defaultValueWithParam" : " = data.Locations;",
          "baseType" : "Location",
          "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Location\"\r\n}",
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false,
          "required" : false,
          "deprecated" : false,
          "hasMoreNonReadOnly" : false,
          "isPrimitiveType" : true,
          "isModel" : true,
          "isContainer" : false,
          "isString" : false,
          "isNumeric" : false,
          "isInteger" : false,
          "isShort" : false,
          "isLong" : false,
          "isUnboundedInteger" : false,
          "isNumber" : false,
          "isFloat" : false,
          "isDouble" : false,
          "isDecimal" : false,
          "isByteArray" : false,
          "isBinary" : false,
          "isFile" : false,
          "isBoolean" : false,
          "isDate" : false,
          "isDateTime" : false,
          "isUuid" : false,
          "isUri" : false,
          "isEmail" : false,
          "isPassword" : false,
          "isNull" : false,
          "isVoid" : false,
          "isFreeFormObject" : false,
          "isAnyType" : false,
          "isArray" : false,
          "isMap" : false,
          "isOptional" : false,
          "isEnum" : false,
          "isInnerEnum" : false,
          "isEnumRef" : false,
          "isReadOnly" : false,
          "isWriteOnly" : false,
          "isNullable" : false,
          "isSelfReference" : false,
          "isCircularReference" : false,
          "isDiscriminator" : false,
          "isNew" : false,
          "vars" : [ ],
          "requiredVars" : [ ],
          "vendorExtensions" : {
            "x-ob-usage-tips" : ""
          },
          "hasValidation" : false,
          "isInherited" : false,
          "nameInCamelCase" : "locations",
          "nameInPascalCase" : "Locations",
          "nameInSnakeCase" : "LOCATIONS",
          "uniqueItems" : false,
          "isXmlAttribute" : false,
          "isXmlWrapped" : false,
          "additionalPropertiesIsAnyType" : false,
          "hasVars" : false,
          "hasRequired" : false,
          "hasDiscriminatorWithNonEmptyMapping" : false,
          "hasMultipleTypes" : false,
          "hasSanitizedName" : false,
          "ref" : "#/components/schemas/Location",
          "schemaIsFromAdditionalProperties" : false,
          "isBooleanSchemaTrue" : false,
          "isBooleanSchemaFalse" : false,
          "hasItems" : false,
          "datatype" : "Location",
          "isEnumOrRef" : false,
          "iexclusiveMaximum" : false
        },
        "vendorExtensions" : {
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "locations",
        "nameInPascalCase" : "Locations",
        "nameInSnakeCase" : "LOCATIONS",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : true,
        "datatype" : "List<Location>",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "SerialNum",
        "baseName" : "SerialNum",
        "complexType" : "SerialNum",
        "getter" : "getSerialNum",
        "setter" : "setSerialNum",
        "dataType" : "SerialNum",
        "datatypeWithEnum" : "SerialNum",
        "name" : "SerialNum",
        "defaultValueWithParam" : " = data.SerialNum;",
        "baseType" : "SerialNum",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/SerialNum\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : {
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "serialNum",
        "nameInPascalCase" : "SerialNum",
        "nameInSnakeCase" : "SERIAL_NUM",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/SerialNum",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "SerialNum",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "Description",
        "baseName" : "Description",
        "complexType" : "Description",
        "getter" : "getDescription",
        "setter" : "setDescription",
        "dataType" : "Description",
        "datatypeWithEnum" : "Description",
        "name" : "Description",
        "defaultValueWithParam" : " = data.Description;",
        "baseType" : "Description",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Description\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : {
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "description",
        "nameInPascalCase" : "Description",
        "nameInSnakeCase" : "DESCRIPTION",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/Description",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "Description",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "URL",
        "baseName" : "URL",
        "complexType" : "URL",
        "getter" : "getURL",
        "setter" : "setURL",
        "dataType" : "URL",
        "datatypeWithEnum" : "URL",
        "name" : "URL",
        "defaultValueWithParam" : " = data.URL;",
        "baseType" : "URL",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/URL\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : {
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "uRL",
        "nameInPascalCase" : "URL",
        "nameInSnakeCase" : "U_R_L",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/URL",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "URL",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "ProdCode",
        "baseName" : "ProdCode",
        "complexType" : "ProdCode",
        "getter" : "getProdCode",
        "setter" : "setProdCode",
        "dataType" : "ProdCode",
        "datatypeWithEnum" : "ProdCode",
        "name" : "ProdCode",
        "defaultValueWithParam" : " = data.ProdCode;",
        "baseType" : "ProdCode",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/ProdCode\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : {
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "prodCode",
        "nameInPascalCase" : "ProdCode",
        "nameInSnakeCase" : "PROD_CODE",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/ProdCode",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "ProdCode",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "ProdID",
        "baseName" : "ProdID",
        "complexType" : "ProdID",
        "getter" : "getProdID",
        "setter" : "setProdID",
        "dataType" : "ProdID",
        "datatypeWithEnum" : "ProdID",
        "name" : "ProdID",
        "defaultValueWithParam" : " = data.ProdID;",
        "baseType" : "ProdID",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/ProdID\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : {
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "prodID",
        "nameInPascalCase" : "ProdID",
        "nameInSnakeCase" : "PROD_I_D",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/ProdID",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "ProdID",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "Firmware",
        "baseName" : "Firmware",
        "complexType" : "Firmware",
        "getter" : "getFirmware",
        "setter" : "setFirmware",
        "dataType" : "Firmware",
        "datatypeWithEnum" : "Firmware",
        "name" : "Firmware",
        "defaultValueWithParam" : " = data.Firmware;",
        "baseType" : "Firmware",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Firmware\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : {
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "firmware",
        "nameInPascalCase" : "Firmware",
        "nameInSnakeCase" : "FIRMWARE",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/Firmware",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "Firmware",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "MaintDateLast",
        "baseName" : "MaintDateLast",
        "complexType" : "MaintDateLast",
        "getter" : "getMaintDateLast",
        "setter" : "setMaintDateLast",
        "dataType" : "MaintDateLast",
        "datatypeWithEnum" : "MaintDateLast",
        "name" : "MaintDateLast",
        "defaultValueWithParam" : " = data.MaintDateLast;",
        "baseType" : "MaintDateLast",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/MaintDateLast\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : {
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "maintDateLast",
        "nameInPascalCase" : "MaintDateLast",
        "nameInSnakeCase" : "MAINT_DATE_LAST",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/MaintDateLast",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "MaintDateLast",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "InServiceDate",
        "baseName" : "InServiceDate",
        "complexType" : "InServiceDate",
        "getter" : "getInServiceDate",
        "setter" : "setInServiceDate",
        "dataType" : "InServiceDate",
        "datatypeWithEnum" : "InServiceDate",
        "name" : "InServiceDate",
        "defaultValueWithParam" : " = data.InServiceDate;",
        "baseType" : "InServiceDate",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/InServiceDate\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : {
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "inServiceDate",
        "nameInPascalCase" : "InServiceDate",
        "nameInSnakeCase" : "IN_SERVICE_DATE",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/InServiceDate",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "InServiceDate",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "Calibration",
        "baseName" : "Calibration",
        "complexType" : "Calibration",
        "getter" : "getCalibration",
        "setter" : "setCalibration",
        "dataType" : "Calibration",
        "datatypeWithEnum" : "Calibration",
        "name" : "Calibration",
        "defaultValueWithParam" : " = data.Calibration;",
        "baseType" : "Calibration",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Calibration\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : {
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true,
          "x-ob-usage-tips" : ""
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "calibration",
        "nameInPascalCase" : "Calibration",
        "nameInSnakeCase" : "CALIBRATION",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/Calibration",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "Calibration",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "array",
        "baseName" : "Warranties",
        "complexType" : "Warranty",
        "getter" : "getWarranties",
        "setter" : "setWarranties",
        "dataType" : "List<Warranty>",
        "datatypeWithEnum" : "List<Warranty>",
        "name" : "Warranties",
        "defaultValueWithParam" : " = data.Warranties;",
        "baseType" : "List",
        "containerType" : "array",
        "containerTypeMapped" : "List",
        "jsonSchema" : "{\r\n  \"items\" : {\r\n    \"$ref\" : \"#/components/schemas/Warranty\"\r\n  },\r\n  \"type\" : \"array\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : false,
        "isContainer" : true,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : true,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "items" : {
          "openApiType" : "Warranty",
          "baseName" : "Warranties",
          "complexType" : "Warranty",
          "getter" : "getWarranties",
          "setter" : "setWarranties",
          "dataType" : "Warranty",
          "datatypeWithEnum" : "Warranty",
          "name" : "Warranties",
          "defaultValueWithParam" : " = data.Warranties;",
          "baseType" : "Warranty",
          "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Warranty\"\r\n}",
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false,
          "required" : false,
          "deprecated" : false,
          "hasMoreNonReadOnly" : false,
          "isPrimitiveType" : false,
          "isModel" : true,
          "isContainer" : false,
          "isString" : false,
          "isNumeric" : false,
          "isInteger" : false,
          "isShort" : false,
          "isLong" : false,
          "isUnboundedInteger" : false,
          "isNumber" : false,
          "isFloat" : false,
          "isDouble" : false,
          "isDecimal" : false,
          "isByteArray" : false,
          "isBinary" : false,
          "isFile" : false,
          "isBoolean" : false,
          "isDate" : false,
          "isDateTime" : false,
          "isUuid" : false,
          "isUri" : false,
          "isEmail" : false,
          "isPassword" : false,
          "isNull" : false,
          "isVoid" : false,
          "isFreeFormObject" : false,
          "isAnyType" : false,
          "isArray" : false,
          "isMap" : false,
          "isOptional" : false,
          "isEnum" : false,
          "isInnerEnum" : false,
          "isEnumRef" : false,
          "isReadOnly" : false,
          "isWriteOnly" : false,
          "isNullable" : false,
          "isSelfReference" : false,
          "isCircularReference" : false,
          "isDiscriminator" : false,
          "isNew" : false,
          "vars" : [ ],
          "requiredVars" : [ ],
          "vendorExtensions" : { },
          "hasValidation" : false,
          "isInherited" : false,
          "nameInCamelCase" : "warranties",
          "nameInPascalCase" : "Warranties",
          "nameInSnakeCase" : "WARRANTIES",
          "uniqueItems" : false,
          "isXmlAttribute" : false,
          "isXmlWrapped" : false,
          "additionalPropertiesIsAnyType" : false,
          "hasVars" : false,
          "hasRequired" : false,
          "hasDiscriminatorWithNonEmptyMapping" : false,
          "hasMultipleTypes" : false,
          "hasSanitizedName" : false,
          "ref" : "#/components/schemas/Warranty",
          "schemaIsFromAdditionalProperties" : false,
          "isBooleanSchemaTrue" : false,
          "isBooleanSchemaFalse" : false,
          "hasItems" : false,
          "datatype" : "Warranty",
          "isEnumOrRef" : false,
          "iexclusiveMaximum" : false
        },
        "vars" : [ ],
        "requiredVars" : [ ],
        "mostInnerItems" : {
          "openApiType" : "Warranty",
          "baseName" : "Warranties",
          "complexType" : "Warranty",
          "getter" : "getWarranties",
          "setter" : "setWarranties",
          "dataType" : "Warranty",
          "datatypeWithEnum" : "Warranty",
          "name" : "Warranties",
          "defaultValueWithParam" : " = data.Warranties;",
          "baseType" : "Warranty",
          "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Warranty\"\r\n}",
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false,
          "required" : false,
          "deprecated" : false,
          "hasMoreNonReadOnly" : false,
          "isPrimitiveType" : false,
          "isModel" : true,
          "isContainer" : false,
          "isString" : false,
          "isNumeric" : false,
          "isInteger" : false,
          "isShort" : false,
          "isLong" : false,
          "isUnboundedInteger" : false,
          "isNumber" : false,
          "isFloat" : false,
          "isDouble" : false,
          "isDecimal" : false,
          "isByteArray" : false,
          "isBinary" : false,
          "isFile" : false,
          "isBoolean" : false,
          "isDate" : false,
          "isDateTime" : false,
          "isUuid" : false,
          "isUri" : false,
          "isEmail" : false,
          "isPassword" : false,
          "isNull" : false,
          "isVoid" : false,
          "isFreeFormObject" : false,
          "isAnyType" : false,
          "isArray" : false,
          "isMap" : false,
          "isOptional" : false,
          "isEnum" : false,
          "isInnerEnum" : false,
          "isEnumRef" : false,
          "isReadOnly" : false,
          "isWriteOnly" : false,
          "isNullable" : false,
          "isSelfReference" : false,
          "isCircularReference" : false,
          "isDiscriminator" : false,
          "isNew" : false,
          "vars" : [ ],
          "requiredVars" : [ ],
          "vendorExtensions" : { },
          "hasValidation" : false,
          "isInherited" : false,
          "nameInCamelCase" : "warranties",
          "nameInPascalCase" : "Warranties",
          "nameInSnakeCase" : "WARRANTIES",
          "uniqueItems" : false,
          "isXmlAttribute" : false,
          "isXmlWrapped" : false,
          "additionalPropertiesIsAnyType" : false,
          "hasVars" : false,
          "hasRequired" : false,
          "hasDiscriminatorWithNonEmptyMapping" : false,
          "hasMultipleTypes" : false,
          "hasSanitizedName" : false,
          "ref" : "#/components/schemas/Warranty",
          "schemaIsFromAdditionalProperties" : false,
          "isBooleanSchemaTrue" : false,
          "isBooleanSchemaFalse" : false,
          "hasItems" : false,
          "datatype" : "Warranty",
          "isEnumOrRef" : false,
          "iexclusiveMaximum" : false
        },
        "vendorExtensions" : {
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "warranties",
        "nameInPascalCase" : "Warranties",
        "nameInSnakeCase" : "WARRANTIES",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : true,
        "datatype" : "List<Warranty>",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "DeviceType",
        "baseName" : "DeviceType",
        "complexType" : "DeviceType",
        "getter" : "getDeviceType",
        "setter" : "setDeviceType",
        "dataType" : "DeviceType",
        "datatypeWithEnum" : "DeviceType",
        "name" : "DeviceType",
        "defaultValueWithParam" : " = data.DeviceType;",
        "baseType" : "DeviceType",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/DeviceType\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : {
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "deviceType",
        "nameInPascalCase" : "DeviceType",
        "nameInSnakeCase" : "DEVICE_TYPE",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/DeviceType",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "DeviceType",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "array",
        "baseName" : "Components",
        "complexType" : "Component",
        "getter" : "getComponents",
        "setter" : "setComponents",
        "dataType" : "List<Component>",
        "datatypeWithEnum" : "List<Component>",
        "name" : "Components",
        "defaultValueWithParam" : " = data.Components;",
        "baseType" : "List",
        "containerType" : "array",
        "containerTypeMapped" : "List",
        "jsonSchema" : "{\r\n  \"items\" : {\r\n    \"$ref\" : \"#/components/schemas/Component\"\r\n  },\r\n  \"type\" : \"array\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : false,
        "isContainer" : true,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : true,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "items" : {
          "openApiType" : "Component",
          "baseName" : "Components",
          "complexType" : "Component",
          "getter" : "getComponents",
          "setter" : "setComponents",
          "dataType" : "Component",
          "datatypeWithEnum" : "Component",
          "name" : "Components",
          "defaultValueWithParam" : " = data.Components;",
          "baseType" : "Component",
          "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Component\"\r\n}",
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false,
          "required" : false,
          "deprecated" : false,
          "hasMoreNonReadOnly" : false,
          "isPrimitiveType" : false,
          "isModel" : true,
          "isContainer" : false,
          "isString" : false,
          "isNumeric" : false,
          "isInteger" : false,
          "isShort" : false,
          "isLong" : false,
          "isUnboundedInteger" : false,
          "isNumber" : false,
          "isFloat" : false,
          "isDouble" : false,
          "isDecimal" : false,
          "isByteArray" : false,
          "isBinary" : false,
          "isFile" : false,
          "isBoolean" : false,
          "isDate" : false,
          "isDateTime" : false,
          "isUuid" : false,
          "isUri" : false,
          "isEmail" : false,
          "isPassword" : false,
          "isNull" : false,
          "isVoid" : false,
          "isFreeFormObject" : false,
          "isAnyType" : false,
          "isArray" : false,
          "isMap" : false,
          "isOptional" : false,
          "isEnum" : false,
          "isInnerEnum" : false,
          "isEnumRef" : false,
          "isReadOnly" : false,
          "isWriteOnly" : false,
          "isNullable" : false,
          "isSelfReference" : false,
          "isCircularReference" : false,
          "isDiscriminator" : false,
          "isNew" : false,
          "vars" : [ ],
          "requiredVars" : [ ],
          "vendorExtensions" : { },
          "hasValidation" : false,
          "isInherited" : false,
          "nameInCamelCase" : "components",
          "nameInPascalCase" : "Components",
          "nameInSnakeCase" : "COMPONENTS",
          "uniqueItems" : false,
          "isXmlAttribute" : false,
          "isXmlWrapped" : false,
          "additionalPropertiesIsAnyType" : false,
          "hasVars" : false,
          "hasRequired" : false,
          "hasDiscriminatorWithNonEmptyMapping" : false,
          "hasMultipleTypes" : false,
          "hasSanitizedName" : false,
          "ref" : "#/components/schemas/Component",
          "schemaIsFromAdditionalProperties" : false,
          "isBooleanSchemaTrue" : false,
          "isBooleanSchemaFalse" : false,
          "hasItems" : false,
          "datatype" : "Component",
          "isEnumOrRef" : false,
          "iexclusiveMaximum" : false
        },
        "vars" : [ ],
        "requiredVars" : [ ],
        "mostInnerItems" : {
          "openApiType" : "Component",
          "baseName" : "Components",
          "complexType" : "Component",
          "getter" : "getComponents",
          "setter" : "setComponents",
          "dataType" : "Component",
          "datatypeWithEnum" : "Component",
          "name" : "Components",
          "defaultValueWithParam" : " = data.Components;",
          "baseType" : "Component",
          "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Component\"\r\n}",
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false,
          "required" : false,
          "deprecated" : false,
          "hasMoreNonReadOnly" : false,
          "isPrimitiveType" : false,
          "isModel" : true,
          "isContainer" : false,
          "isString" : false,
          "isNumeric" : false,
          "isInteger" : false,
          "isShort" : false,
          "isLong" : false,
          "isUnboundedInteger" : false,
          "isNumber" : false,
          "isFloat" : false,
          "isDouble" : false,
          "isDecimal" : false,
          "isByteArray" : false,
          "isBinary" : false,
          "isFile" : false,
          "isBoolean" : false,
          "isDate" : false,
          "isDateTime" : false,
          "isUuid" : false,
          "isUri" : false,
          "isEmail" : false,
          "isPassword" : false,
          "isNull" : false,
          "isVoid" : false,
          "isFreeFormObject" : false,
          "isAnyType" : false,
          "isArray" : false,
          "isMap" : false,
          "isOptional" : false,
          "isEnum" : false,
          "isInnerEnum" : false,
          "isEnumRef" : false,
          "isReadOnly" : false,
          "isWriteOnly" : false,
          "isNullable" : false,
          "isSelfReference" : false,
          "isCircularReference" : false,
          "isDiscriminator" : false,
          "isNew" : false,
          "vars" : [ ],
          "requiredVars" : [ ],
          "vendorExtensions" : { },
          "hasValidation" : false,
          "isInherited" : false,
          "nameInCamelCase" : "components",
          "nameInPascalCase" : "Components",
          "nameInSnakeCase" : "COMPONENTS",
          "uniqueItems" : false,
          "isXmlAttribute" : false,
          "isXmlWrapped" : false,
          "additionalPropertiesIsAnyType" : false,
          "hasVars" : false,
          "hasRequired" : false,
          "hasDiscriminatorWithNonEmptyMapping" : false,
          "hasMultipleTypes" : false,
          "hasSanitizedName" : false,
          "ref" : "#/components/schemas/Component",
          "schemaIsFromAdditionalProperties" : false,
          "isBooleanSchemaTrue" : false,
          "isBooleanSchemaFalse" : false,
          "hasItems" : false,
          "datatype" : "Component",
          "isEnumOrRef" : false,
          "iexclusiveMaximum" : false
        },
        "vendorExtensions" : {
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "components",
        "nameInPascalCase" : "Components",
        "nameInSnakeCase" : "COMPONENTS",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : true,
        "datatype" : "List<Component>",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "DeviceName",
        "baseName" : "DeviceName",
        "complexType" : "DeviceName",
        "getter" : "getDeviceName",
        "setter" : "setDeviceName",
        "dataType" : "DeviceName",
        "datatypeWithEnum" : "DeviceName",
        "name" : "DeviceName",
        "defaultValueWithParam" : " = data.DeviceName;",
        "baseType" : "DeviceName",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/DeviceName\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : {
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "deviceName",
        "nameInPascalCase" : "DeviceName",
        "nameInSnakeCase" : "DEVICE_NAME",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/DeviceName",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "DeviceName",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "DeviceUUID",
        "baseName" : "DeviceUUID",
        "complexType" : "DeviceUUID",
        "getter" : "getDeviceUUID",
        "setter" : "setDeviceUUID",
        "dataType" : "DeviceUUID",
        "datatypeWithEnum" : "DeviceUUID",
        "name" : "DeviceUUID",
        "defaultValueWithParam" : " = data.DeviceUUID;",
        "baseType" : "DeviceUUID",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/DeviceUUID\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : {
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "deviceUUID",
        "nameInPascalCase" : "DeviceUUID",
        "nameInSnakeCase" : "DEVICE_U_U_I_D",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/DeviceUUID",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "DeviceUUID",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "array",
        "baseName" : "CryptographicKeyIDs",
        "complexType" : "CryptographicKeyID",
        "getter" : "getCryptographicKeyIDs",
        "setter" : "setCryptographicKeyIDs",
        "dataType" : "List<CryptographicKeyID>",
        "datatypeWithEnum" : "List<CryptographicKeyID>",
        "name" : "CryptographicKeyIDs",
        "defaultValueWithParam" : " = data.CryptographicKeyIDs;",
        "baseType" : "List",
        "containerType" : "array",
        "containerTypeMapped" : "List",
        "jsonSchema" : "{\r\n  \"items\" : {\r\n    \"$ref\" : \"#/components/schemas/CryptographicKeyID\"\r\n  },\r\n  \"type\" : \"array\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : false,
        "isContainer" : true,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : true,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "items" : {
          "openApiType" : "CryptographicKeyID",
          "baseName" : "CryptographicKeyIDs",
          "complexType" : "CryptographicKeyID",
          "getter" : "getCryptographicKeyIDs",
          "setter" : "setCryptographicKeyIDs",
          "dataType" : "CryptographicKeyID",
          "datatypeWithEnum" : "CryptographicKeyID",
          "name" : "CryptographicKeyIDs",
          "defaultValueWithParam" : " = data.CryptographicKeyIDs;",
          "baseType" : "CryptographicKeyID",
          "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/CryptographicKeyID\"\r\n}",
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false,
          "required" : false,
          "deprecated" : false,
          "hasMoreNonReadOnly" : false,
          "isPrimitiveType" : false,
          "isModel" : true,
          "isContainer" : false,
          "isString" : false,
          "isNumeric" : false,
          "isInteger" : false,
          "isShort" : false,
          "isLong" : false,
          "isUnboundedInteger" : false,
          "isNumber" : false,
          "isFloat" : false,
          "isDouble" : false,
          "isDecimal" : false,
          "isByteArray" : false,
          "isBinary" : false,
          "isFile" : false,
          "isBoolean" : false,
          "isDate" : false,
          "isDateTime" : false,
          "isUuid" : false,
          "isUri" : false,
          "isEmail" : false,
          "isPassword" : false,
          "isNull" : false,
          "isVoid" : false,
          "isFreeFormObject" : false,
          "isAnyType" : false,
          "isArray" : false,
          "isMap" : false,
          "isOptional" : false,
          "isEnum" : false,
          "isInnerEnum" : false,
          "isEnumRef" : false,
          "isReadOnly" : false,
          "isWriteOnly" : false,
          "isNullable" : false,
          "isSelfReference" : false,
          "isCircularReference" : false,
          "isDiscriminator" : false,
          "isNew" : false,
          "vars" : [ ],
          "requiredVars" : [ ],
          "vendorExtensions" : { },
          "hasValidation" : false,
          "isInherited" : false,
          "nameInCamelCase" : "cryptographicKeyIDs",
          "nameInPascalCase" : "CryptographicKeyIDs",
          "nameInSnakeCase" : "CRYPTOGRAPHIC_KEY_I_DS",
          "uniqueItems" : false,
          "isXmlAttribute" : false,
          "isXmlWrapped" : false,
          "additionalPropertiesIsAnyType" : false,
          "hasVars" : false,
          "hasRequired" : false,
          "hasDiscriminatorWithNonEmptyMapping" : false,
          "hasMultipleTypes" : false,
          "hasSanitizedName" : false,
          "ref" : "#/components/schemas/CryptographicKeyID",
          "schemaIsFromAdditionalProperties" : false,
          "isBooleanSchemaTrue" : false,
          "isBooleanSchemaFalse" : false,
          "hasItems" : false,
          "datatype" : "CryptographicKeyID",
          "isEnumOrRef" : false,
          "iexclusiveMaximum" : false
        },
        "vars" : [ ],
        "requiredVars" : [ ],
        "mostInnerItems" : {
          "openApiType" : "CryptographicKeyID",
          "baseName" : "CryptographicKeyIDs",
          "complexType" : "CryptographicKeyID",
          "getter" : "getCryptographicKeyIDs",
          "setter" : "setCryptographicKeyIDs",
          "dataType" : "CryptographicKeyID",
          "datatypeWithEnum" : "CryptographicKeyID",
          "name" : "CryptographicKeyIDs",
          "defaultValueWithParam" : " = data.CryptographicKeyIDs;",
          "baseType" : "CryptographicKeyID",
          "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/CryptographicKeyID\"\r\n}",
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false,
          "required" : false,
          "deprecated" : false,
          "hasMoreNonReadOnly" : false,
          "isPrimitiveType" : false,
          "isModel" : true,
          "isContainer" : false,
          "isString" : false,
          "isNumeric" : false,
          "isInteger" : false,
          "isShort" : false,
          "isLong" : false,
          "isUnboundedInteger" : false,
          "isNumber" : false,
          "isFloat" : false,
          "isDouble" : false,
          "isDecimal" : false,
          "isByteArray" : false,
          "isBinary" : false,
          "isFile" : false,
          "isBoolean" : false,
          "isDate" : false,
          "isDateTime" : false,
          "isUuid" : false,
          "isUri" : false,
          "isEmail" : false,
          "isPassword" : false,
          "isNull" : false,
          "isVoid" : false,
          "isFreeFormObject" : false,
          "isAnyType" : false,
          "isArray" : false,
          "isMap" : false,
          "isOptional" : false,
          "isEnum" : false,
          "isInnerEnum" : false,
          "isEnumRef" : false,
          "isReadOnly" : false,
          "isWriteOnly" : false,
          "isNullable" : false,
          "isSelfReference" : false,
          "isCircularReference" : false,
          "isDiscriminator" : false,
          "isNew" : false,
          "vars" : [ ],
          "requiredVars" : [ ],
          "vendorExtensions" : { },
          "hasValidation" : false,
          "isInherited" : false,
          "nameInCamelCase" : "cryptographicKeyIDs",
          "nameInPascalCase" : "CryptographicKeyIDs",
          "nameInSnakeCase" : "CRYPTOGRAPHIC_KEY_I_DS",
          "uniqueItems" : false,
          "isXmlAttribute" : false,
          "isXmlWrapped" : false,
          "additionalPropertiesIsAnyType" : false,
          "hasVars" : false,
          "hasRequired" : false,
          "hasDiscriminatorWithNonEmptyMapping" : false,
          "hasMultipleTypes" : false,
          "hasSanitizedName" : false,
          "ref" : "#/components/schemas/CryptographicKeyID",
          "schemaIsFromAdditionalProperties" : false,
          "isBooleanSchemaTrue" : false,
          "isBooleanSchemaFalse" : false,
          "hasItems" : false,
          "datatype" : "CryptographicKeyID",
          "isEnumOrRef" : false,
          "iexclusiveMaximum" : false
        },
        "vendorExtensions" : {
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "cryptographicKeyIDs",
        "nameInPascalCase" : "CryptographicKeyIDs",
        "nameInSnakeCase" : "CRYPTOGRAPHIC_KEY_I_DS",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : true,
        "datatype" : "List<CryptographicKeyID>",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "IsMaintainable",
        "baseName" : "IsMaintainable",
        "complexType" : "IsMaintainable",
        "getter" : "getIsMaintainable",
        "setter" : "setIsMaintainable",
        "dataType" : "IsMaintainable",
        "datatypeWithEnum" : "IsMaintainable",
        "name" : "IsMaintainable",
        "defaultValueWithParam" : " = data.IsMaintainable;",
        "baseType" : "IsMaintainable",
        "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/IsMaintainable\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : {
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "isMaintainable",
        "nameInPascalCase" : "IsMaintainable",
        "nameInSnakeCase" : "IS_MAINTAINABLE",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "ref" : "#/components/schemas/IsMaintainable",
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : false,
        "datatype" : "IsMaintainable",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      }, {
        "openApiType" : "array",
        "baseName" : "Nodes",
        "complexType" : "Node",
        "getter" : "getNodes",
        "setter" : "setNodes",
        "dataType" : "List<Node>",
        "datatypeWithEnum" : "List<Node>",
        "name" : "Nodes",
        "defaultValueWithParam" : " = data.Nodes;",
        "baseType" : "List",
        "containerType" : "array",
        "containerTypeMapped" : "List",
        "jsonSchema" : "{\r\n  \"items\" : {\r\n    \"$ref\" : \"#/components/schemas/Node\"\r\n  },\r\n  \"type\" : \"array\"\r\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : false,
        "isContainer" : true,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isShort" : false,
        "isLong" : false,
        "isUnboundedInteger" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isPassword" : false,
        "isNull" : false,
        "isVoid" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : true,
        "isMap" : false,
        "isOptional" : false,
        "isEnum" : false,
        "isInnerEnum" : false,
        "isEnumRef" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "isNew" : false,
        "isOverridden" : true,
        "items" : {
          "openApiType" : "Node",
          "baseName" : "Nodes",
          "complexType" : "Node",
          "getter" : "getNodes",
          "setter" : "setNodes",
          "dataType" : "Node",
          "datatypeWithEnum" : "Node",
          "name" : "Nodes",
          "defaultValueWithParam" : " = data.Nodes;",
          "baseType" : "Node",
          "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Node\"\r\n}",
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false,
          "required" : false,
          "deprecated" : false,
          "hasMoreNonReadOnly" : false,
          "isPrimitiveType" : false,
          "isModel" : true,
          "isContainer" : false,
          "isString" : false,
          "isNumeric" : false,
          "isInteger" : false,
          "isShort" : false,
          "isLong" : false,
          "isUnboundedInteger" : false,
          "isNumber" : false,
          "isFloat" : false,
          "isDouble" : false,
          "isDecimal" : false,
          "isByteArray" : false,
          "isBinary" : false,
          "isFile" : false,
          "isBoolean" : false,
          "isDate" : false,
          "isDateTime" : false,
          "isUuid" : false,
          "isUri" : false,
          "isEmail" : false,
          "isPassword" : false,
          "isNull" : false,
          "isVoid" : false,
          "isFreeFormObject" : false,
          "isAnyType" : false,
          "isArray" : false,
          "isMap" : false,
          "isOptional" : false,
          "isEnum" : false,
          "isInnerEnum" : false,
          "isEnumRef" : false,
          "isReadOnly" : false,
          "isWriteOnly" : false,
          "isNullable" : false,
          "isSelfReference" : false,
          "isCircularReference" : false,
          "isDiscriminator" : false,
          "isNew" : false,
          "vars" : [ ],
          "requiredVars" : [ ],
          "vendorExtensions" : { },
          "hasValidation" : false,
          "isInherited" : false,
          "nameInCamelCase" : "nodes",
          "nameInPascalCase" : "Nodes",
          "nameInSnakeCase" : "NODES",
          "uniqueItems" : false,
          "isXmlAttribute" : false,
          "isXmlWrapped" : false,
          "additionalPropertiesIsAnyType" : false,
          "hasVars" : false,
          "hasRequired" : false,
          "hasDiscriminatorWithNonEmptyMapping" : false,
          "hasMultipleTypes" : false,
          "hasSanitizedName" : false,
          "ref" : "#/components/schemas/Node",
          "schemaIsFromAdditionalProperties" : false,
          "isBooleanSchemaTrue" : false,
          "isBooleanSchemaFalse" : false,
          "hasItems" : false,
          "datatype" : "Node",
          "isEnumOrRef" : false,
          "iexclusiveMaximum" : false
        },
        "vars" : [ ],
        "requiredVars" : [ ],
        "mostInnerItems" : {
          "openApiType" : "Node",
          "baseName" : "Nodes",
          "complexType" : "Node",
          "getter" : "getNodes",
          "setter" : "setNodes",
          "dataType" : "Node",
          "datatypeWithEnum" : "Node",
          "name" : "Nodes",
          "defaultValueWithParam" : " = data.Nodes;",
          "baseType" : "Node",
          "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Node\"\r\n}",
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false,
          "required" : false,
          "deprecated" : false,
          "hasMoreNonReadOnly" : false,
          "isPrimitiveType" : false,
          "isModel" : true,
          "isContainer" : false,
          "isString" : false,
          "isNumeric" : false,
          "isInteger" : false,
          "isShort" : false,
          "isLong" : false,
          "isUnboundedInteger" : false,
          "isNumber" : false,
          "isFloat" : false,
          "isDouble" : false,
          "isDecimal" : false,
          "isByteArray" : false,
          "isBinary" : false,
          "isFile" : false,
          "isBoolean" : false,
          "isDate" : false,
          "isDateTime" : false,
          "isUuid" : false,
          "isUri" : false,
          "isEmail" : false,
          "isPassword" : false,
          "isNull" : false,
          "isVoid" : false,
          "isFreeFormObject" : false,
          "isAnyType" : false,
          "isArray" : false,
          "isMap" : false,
          "isOptional" : false,
          "isEnum" : false,
          "isInnerEnum" : false,
          "isEnumRef" : false,
          "isReadOnly" : false,
          "isWriteOnly" : false,
          "isNullable" : false,
          "isSelfReference" : false,
          "isCircularReference" : false,
          "isDiscriminator" : false,
          "isNew" : false,
          "vars" : [ ],
          "requiredVars" : [ ],
          "vendorExtensions" : { },
          "hasValidation" : false,
          "isInherited" : false,
          "nameInCamelCase" : "nodes",
          "nameInPascalCase" : "Nodes",
          "nameInSnakeCase" : "NODES",
          "uniqueItems" : false,
          "isXmlAttribute" : false,
          "isXmlWrapped" : false,
          "additionalPropertiesIsAnyType" : false,
          "hasVars" : false,
          "hasRequired" : false,
          "hasDiscriminatorWithNonEmptyMapping" : false,
          "hasMultipleTypes" : false,
          "hasSanitizedName" : false,
          "ref" : "#/components/schemas/Node",
          "schemaIsFromAdditionalProperties" : false,
          "isBooleanSchemaTrue" : false,
          "isBooleanSchemaFalse" : false,
          "hasItems" : false,
          "datatype" : "Node",
          "isEnumOrRef" : false,
          "iexclusiveMaximum" : false
        },
        "vendorExtensions" : {
          "x-is-nullable-type" : true,
          "x-is-value-type" : false,
          "x-is-reference-type" : true
        },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "nodes",
        "nameInPascalCase" : "Nodes",
        "nameInSnakeCase" : "NODES",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "hasDiscriminatorWithNonEmptyMapping" : false,
        "hasMultipleTypes" : false,
        "hasSanitizedName" : false,
        "schemaIsFromAdditionalProperties" : false,
        "isBooleanSchemaTrue" : false,
        "isBooleanSchemaFalse" : false,
        "hasItems" : true,
        "datatype" : "List<Node>",
        "isEnumOrRef" : false,
        "iexclusiveMaximum" : false
      } ],
      "mandatory" : [ ],
      "allMandatory" : [ ],
      "imports" : [ "Calibration", "Component", "CryptographicKeyID", "Description", "Device1", "DeviceName", "DeviceType", "DeviceUUID", "Firmware", "InServiceDate", "IsMaintainable", "MaintDateLast", "Node", "ProdCode", "ProdID", "SerialNum", "URL", "Warranty" ],
      "emptyVars" : false,
      "hasVars" : true,
      "hasMoreModels" : false,
      "hasEnums" : false,
      "isEnum" : false,
      "hasValidation" : false,
      "isNullable" : false,
      "hasRequired" : false,
      "hasOptional" : true,
      "isArray" : false,
      "hasChildren" : false,
      "isMap" : false,
      "isOptional" : false,
      "isNull" : false,
      "isVoid" : false,
      "isDeprecated" : false,
      "hasReadOnly" : false,
      "hasOnlyReadOnly" : false,
      "vendorExtensions" : {
        "x-model-is-mutable" : true
      },
      "composedSchemas" : {
        "allOf" : [ {
          "openApiType" : "Device1",
          "baseName" : "all_of_0",
          "complexType" : "Device1",
          "getter" : "getAllOf0",
          "setter" : "setAllOf0",
          "dataType" : "Device1",
          "datatypeWithEnum" : "Device1",
          "name" : "Device1",
          "defaultValueWithParam" : " = data.all_of_0;",
          "baseType" : "Device1",
          "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Device_1\"\r\n}",
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false,
          "required" : false,
          "deprecated" : false,
          "hasMoreNonReadOnly" : false,
          "isPrimitiveType" : false,
          "isModel" : true,
          "isContainer" : false,
          "isString" : false,
          "isNumeric" : false,
          "isInteger" : false,
          "isShort" : false,
          "isLong" : false,
          "isUnboundedInteger" : false,
          "isNumber" : false,
          "isFloat" : false,
          "isDouble" : false,
          "isDecimal" : false,
          "isByteArray" : false,
          "isBinary" : false,
          "isFile" : false,
          "isBoolean" : false,
          "isDate" : false,
          "isDateTime" : false,
          "isUuid" : false,
          "isUri" : false,
          "isEmail" : false,
          "isPassword" : false,
          "isNull" : false,
          "isVoid" : false,
          "isFreeFormObject" : false,
          "isAnyType" : false,
          "isArray" : false,
          "isMap" : false,
          "isOptional" : false,
          "isEnum" : false,
          "isInnerEnum" : false,
          "isEnumRef" : false,
          "isReadOnly" : false,
          "isWriteOnly" : false,
          "isNullable" : false,
          "isSelfReference" : false,
          "isCircularReference" : false,
          "isDiscriminator" : false,
          "isNew" : false,
          "vars" : [ ],
          "requiredVars" : [ ],
          "vendorExtensions" : {
            "x-is-nullable-type" : true,
            "x-is-value-type" : false,
            "x-is-reference-type" : true,
            "x-parent" : true
          },
          "hasValidation" : false,
          "isInherited" : false,
          "nameInCamelCase" : "allOf0",
          "nameInPascalCase" : "AllOf0",
          "nameInSnakeCase" : "ALL_OF0",
          "uniqueItems" : false,
          "isXmlAttribute" : false,
          "isXmlWrapped" : false,
          "additionalPropertiesIsAnyType" : false,
          "hasVars" : false,
          "hasRequired" : false,
          "hasDiscriminatorWithNonEmptyMapping" : false,
          "hasMultipleTypes" : false,
          "hasSanitizedName" : true,
          "ref" : "#/components/schemas/Device_1",
          "schemaIsFromAdditionalProperties" : false,
          "isBooleanSchemaTrue" : false,
          "isBooleanSchemaFalse" : false,
          "hasItems" : false,
          "datatype" : "Device1",
          "isEnumOrRef" : false,
          "iexclusiveMaximum" : false
        }, {
          "openApiType" : "object",
          "baseName" : "all_of_1",
          "getter" : "getAllOf1",
          "setter" : "setAllOf1",
          "description" : "State of a Province of the mailing or physical address.",
          "dataType" : "Object",
          "datatypeWithEnum" : "Object",
          "name" : "Object",
          "defaultValueWithParam" : " = data.all_of_1;",
          "baseType" : "Object",
          "unescapedDescription" : "State of a Province of the mailing or physical address.",
          "jsonSchema" : "{\r\n  \"description\" : \"State of a Province of the mailing or physical address.\",\r\n  \"properties\" : {\r\n    \"Locations\" : {\r\n      \"type\" : \"array\",\r\n      \"items\" : {\r\n        \"$ref\" : \"#/components/schemas/Location\"\r\n      }\r\n    }\r\n  },\r\n  \"type\" : \"object\"\r\n}",
          "exclusiveMinimum" : false,
          "exclusiveMaximum" : false,
          "required" : false,
          "deprecated" : false,
          "hasMoreNonReadOnly" : false,
          "isPrimitiveType" : true,
          "isModel" : true,
          "isContainer" : false,
          "isString" : false,
          "isNumeric" : false,
          "isInteger" : false,
          "isShort" : false,
          "isLong" : false,
          "isUnboundedInteger" : false,
          "isNumber" : false,
          "isFloat" : false,
          "isDouble" : false,
          "isDecimal" : false,
          "isByteArray" : false,
          "isBinary" : false,
          "isFile" : false,
          "isBoolean" : false,
          "isDate" : false,
          "isDateTime" : false,
          "isUuid" : false,
          "isUri" : false,
          "isEmail" : false,
          "isPassword" : false,
          "isNull" : false,
          "isVoid" : false,
          "isFreeFormObject" : false,
          "isAnyType" : false,
          "isArray" : false,
          "isMap" : false,
          "isOptional" : false,
          "isEnum" : false,
          "isInnerEnum" : false,
          "isEnumRef" : false,
          "isReadOnly" : false,
          "isWriteOnly" : false,
          "isNullable" : false,
          "isSelfReference" : false,
          "isCircularReference" : false,
          "isDiscriminator" : false,
          "isNew" : false,
          "additionalProperties" : {
            "openApiType" : "Object",
            "baseName" : "additional_properties",
            "getter" : "getAdditionalProperties",
            "setter" : "setAdditionalProperties",
            "dataType" : "Object",
            "datatypeWithEnum" : "Object",
            "name" : "AdditionalProperties",
            "defaultValueWithParam" : " = data.additional_properties;",
            "baseType" : "Object",
            "jsonSchema" : "{ }",
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "required" : false,
            "deprecated" : false,
            "hasMoreNonReadOnly" : false,
            "isPrimitiveType" : true,
            "isModel" : false,
            "isContainer" : false,
            "isString" : false,
            "isNumeric" : false,
            "isInteger" : false,
            "isShort" : false,
            "isLong" : false,
            "isUnboundedInteger" : false,
            "isNumber" : false,
            "isFloat" : false,
            "isDouble" : false,
            "isDecimal" : false,
            "isByteArray" : false,
            "isBinary" : false,
            "isFile" : false,
            "isBoolean" : false,
            "isDate" : false,
            "isDateTime" : false,
            "isUuid" : false,
            "isUri" : false,
            "isEmail" : false,
            "isPassword" : false,
            "isNull" : false,
            "isVoid" : false,
            "isFreeFormObject" : false,
            "isAnyType" : true,
            "isArray" : false,
            "isMap" : false,
            "isOptional" : false,
            "isEnum" : false,
            "isInnerEnum" : false,
            "isEnumRef" : false,
            "isReadOnly" : false,
            "isWriteOnly" : false,
            "isNullable" : true,
            "isSelfReference" : false,
            "isCircularReference" : false,
            "isDiscriminator" : false,
            "isNew" : false,
            "vars" : [ ],
            "requiredVars" : [ ],
            "vendorExtensions" : { },
            "hasValidation" : false,
            "isInherited" : false,
            "nameInCamelCase" : "additionalProperties",
            "nameInPascalCase" : "AdditionalProperties",
            "nameInSnakeCase" : "ADDITIONAL_PROPERTIES",
            "uniqueItems" : false,
            "isXmlAttribute" : false,
            "isXmlWrapped" : false,
            "additionalPropertiesIsAnyType" : false,
            "hasVars" : false,
            "hasRequired" : false,
            "hasDiscriminatorWithNonEmptyMapping" : false,
            "hasMultipleTypes" : false,
            "hasSanitizedName" : true,
            "schemaIsFromAdditionalProperties" : false,
            "isBooleanSchemaTrue" : true,
            "isBooleanSchemaFalse" : false,
            "hasItems" : false,
            "datatype" : "Object",
            "isEnumOrRef" : false,
            "iexclusiveMaximum" : false
          },
          "vars" : [ {
            "openApiType" : "array",
            "baseName" : "Locations",
            "getter" : "getLocations",
            "setter" : "setLocations",
            "dataType" : "List<Location>",
            "datatypeWithEnum" : "List<Location>",
            "name" : "Locations",
            "defaultValueWithParam" : " = data.Locations;",
            "baseType" : "List",
            "containerType" : "array",
            "containerTypeMapped" : "List",
            "jsonSchema" : "{\r\n  \"items\" : {\r\n    \"$ref\" : \"#/components/schemas/Location\"\r\n  },\r\n  \"type\" : \"array\"\r\n}",
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "required" : false,
            "deprecated" : false,
            "hasMoreNonReadOnly" : false,
            "isPrimitiveType" : true,
            "isModel" : false,
            "isContainer" : true,
            "isString" : false,
            "isNumeric" : false,
            "isInteger" : false,
            "isShort" : false,
            "isLong" : false,
            "isUnboundedInteger" : false,
            "isNumber" : false,
            "isFloat" : false,
            "isDouble" : false,
            "isDecimal" : false,
            "isByteArray" : false,
            "isBinary" : false,
            "isFile" : false,
            "isBoolean" : false,
            "isDate" : false,
            "isDateTime" : false,
            "isUuid" : false,
            "isUri" : false,
            "isEmail" : false,
            "isPassword" : false,
            "isNull" : false,
            "isVoid" : false,
            "isFreeFormObject" : false,
            "isAnyType" : false,
            "isArray" : true,
            "isMap" : false,
            "isOptional" : false,
            "isEnum" : false,
            "isInnerEnum" : false,
            "isEnumRef" : false,
            "isReadOnly" : false,
            "isWriteOnly" : false,
            "isNullable" : false,
            "isSelfReference" : false,
            "isCircularReference" : false,
            "isDiscriminator" : false,
            "isNew" : false,
            "isOverridden" : false,
            "items" : {
              "openApiType" : "Location",
              "baseName" : "Locations",
              "getter" : "getLocations",
              "setter" : "setLocations",
              "dataType" : "Location",
              "datatypeWithEnum" : "Location",
              "name" : "Locations",
              "defaultValueWithParam" : " = data.Locations;",
              "baseType" : "Location",
              "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Location\"\r\n}",
              "exclusiveMinimum" : false,
              "exclusiveMaximum" : false,
              "required" : false,
              "deprecated" : false,
              "hasMoreNonReadOnly" : false,
              "isPrimitiveType" : true,
              "isModel" : true,
              "isContainer" : false,
              "isString" : false,
              "isNumeric" : false,
              "isInteger" : false,
              "isShort" : false,
              "isLong" : false,
              "isUnboundedInteger" : false,
              "isNumber" : false,
              "isFloat" : false,
              "isDouble" : false,
              "isDecimal" : false,
              "isByteArray" : false,
              "isBinary" : false,
              "isFile" : false,
              "isBoolean" : false,
              "isDate" : false,
              "isDateTime" : false,
              "isUuid" : false,
              "isUri" : false,
              "isEmail" : false,
              "isPassword" : false,
              "isNull" : false,
              "isVoid" : false,
              "isFreeFormObject" : false,
              "isAnyType" : false,
              "isArray" : false,
              "isMap" : false,
              "isOptional" : false,
              "isEnum" : false,
              "isInnerEnum" : false,
              "isEnumRef" : false,
              "isReadOnly" : false,
              "isWriteOnly" : false,
              "isNullable" : false,
              "isSelfReference" : false,
              "isCircularReference" : false,
              "isDiscriminator" : false,
              "isNew" : false,
              "vars" : [ ],
              "requiredVars" : [ ],
              "vendorExtensions" : {
                "x-ob-usage-tips" : ""
              },
              "hasValidation" : false,
              "isInherited" : false,
              "nameInCamelCase" : "locations",
              "nameInPascalCase" : "Locations",
              "nameInSnakeCase" : "LOCATIONS",
              "uniqueItems" : false,
              "isXmlAttribute" : false,
              "isXmlWrapped" : false,
              "additionalPropertiesIsAnyType" : false,
              "hasVars" : false,
              "hasRequired" : false,
              "hasDiscriminatorWithNonEmptyMapping" : false,
              "hasMultipleTypes" : false,
              "hasSanitizedName" : false,
              "ref" : "#/components/schemas/Location",
              "schemaIsFromAdditionalProperties" : false,
              "isBooleanSchemaTrue" : false,
              "isBooleanSchemaFalse" : false,
              "hasItems" : false,
              "datatype" : "Location",
              "isEnumOrRef" : false,
              "iexclusiveMaximum" : false
            },
            "vars" : [ ],
            "requiredVars" : [ ],
            "mostInnerItems" : {
              "openApiType" : "Location",
              "baseName" : "Locations",
              "getter" : "getLocations",
              "setter" : "setLocations",
              "dataType" : "Location",
              "datatypeWithEnum" : "Location",
              "name" : "Locations",
              "defaultValueWithParam" : " = data.Locations;",
              "baseType" : "Location",
              "jsonSchema" : "{\r\n  \"$ref\" : \"#/components/schemas/Location\"\r\n}",
              "exclusiveMinimum" : false,
              "exclusiveMaximum" : false,
              "required" : false,
              "deprecated" : false,
              "hasMoreNonReadOnly" : false,
              "isPrimitiveType" : true,
              "isModel" : true,
              "isContainer" : false,
              "isString" : false,
              "isNumeric" : false,
              "isInteger" : false,
              "isShort" : false,
              "isLong" : false,
              "isUnboundedInteger" : false,
              "isNumber" : false,
              "isFloat" : false,
              "isDouble" : false,
              "isDecimal" : false,
              "isByteArray" : false,
              "isBinary" : false,
              "isFile" : false,
              "isBoolean" : false,
              "isDate" : false,
              "isDateTime" : false,
              "isUuid" : false,
              "isUri" : false,
              "isEmail" : false,
              "isPassword" : false,
              "isNull" : false,
              "isVoid" : false,
              "isFreeFormObject" : false,
              "isAnyType" : false,
              "isArray" : false,
              "isMap" : false,
              "isOptional" : false,
              "isEnum" : false,
              "isInnerEnum" : false,
              "isEnumRef" : false,
              "isReadOnly" : false,
              "isWriteOnly" : false,
              "isNullable" : false,
              "isSelfReference" : false,
              "isCircularReference" : false,
              "isDiscriminator" : false,
              "isNew" : false,
              "vars" : [ ],
              "requiredVars" : [ ],
              "vendorExtensions" : {
                "x-ob-usage-tips" : ""
              },
              "hasValidation" : false,
              "isInherited" : false,
              "nameInCamelCase" : "locations",
              "nameInPascalCase" : "Locations",
              "nameInSnakeCase" : "LOCATIONS",
              "uniqueItems" : false,
              "isXmlAttribute" : false,
              "isXmlWrapped" : false,
              "additionalPropertiesIsAnyType" : false,
              "hasVars" : false,
              "hasRequired" : false,
              "hasDiscriminatorWithNonEmptyMapping" : false,
              "hasMultipleTypes" : false,
              "hasSanitizedName" : false,
              "ref" : "#/components/schemas/Location",
              "schemaIsFromAdditionalProperties" : false,
              "isBooleanSchemaTrue" : false,
              "isBooleanSchemaFalse" : false,
              "hasItems" : false,
              "datatype" : "Location",
              "isEnumOrRef" : false,
              "iexclusiveMaximum" : false
            },
            "vendorExtensions" : { },
            "hasValidation" : false,
            "isInherited" : false,
            "nameInCamelCase" : "locations",
            "nameInPascalCase" : "Locations",
            "nameInSnakeCase" : "LOCATIONS",
            "uniqueItems" : false,
            "isXmlAttribute" : false,
            "isXmlWrapped" : false,
            "additionalPropertiesIsAnyType" : false,
            "hasVars" : false,
            "hasRequired" : false,
            "hasDiscriminatorWithNonEmptyMapping" : false,
            "hasMultipleTypes" : false,
            "hasSanitizedName" : false,
            "schemaIsFromAdditionalProperties" : false,
            "isBooleanSchemaTrue" : false,
            "isBooleanSchemaFalse" : false,
            "hasItems" : true,
            "datatype" : "List<Location>",
            "isEnumOrRef" : false,
            "iexclusiveMaximum" : false
          } ],
          "requiredVars" : [ ],
          "vendorExtensions" : {
            "x-is-nullable-type" : true,
            "x-is-value-type" : false,
            "x-is-reference-type" : true
          },
          "hasValidation" : false,
          "isInherited" : false,
          "nameInCamelCase" : "allOf1",
          "nameInPascalCase" : "AllOf1",
          "nameInSnakeCase" : "ALL_OF1",
          "uniqueItems" : false,
          "isXmlAttribute" : false,
          "isXmlWrapped" : false,
          "additionalPropertiesIsAnyType" : true,
          "hasVars" : true,
          "hasRequired" : false,
          "hasDiscriminatorWithNonEmptyMapping" : false,
          "hasMultipleTypes" : false,
          "hasSanitizedName" : true,
          "schemaIsFromAdditionalProperties" : false,
          "isBooleanSchemaTrue" : false,
          "isBooleanSchemaFalse" : false,
          "hasItems" : false,
          "datatype" : "Object",
          "isEnumOrRef" : false,
          "iexclusiveMaximum" : false
        } ]
      },
      "hasMultipleTypes" : false,
      "schemaIsFromAdditionalProperties" : false,
      "isBooleanSchemaTrue" : false,
      "isBooleanSchemaFalse" : false,
      "isAdditionalPropertiesTrue" : true,
      "uniqueItems" : false,
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "isModel" : false,
      "hasDiscriminatorWithNonEmptyMapping" : false,
      "isAnyType" : false,
      "isUuid" : false,
      "isUri" : false,
      "hasItems" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isClassnameSanitized" : false
    }
  } ],
  "netStandard" : false,
  "net60OrLater" : true,
  "testPackageName" : "Supernova.Test",
  "equatable" : false,
  "targetFrameworkNuget" : "net8.0",
  "releaseNote" : "Minor update",
  "version" : "1.0",
  "netstandard14OrLater" : true,
  "netstandard16OrLater" : true,
  "nrt" : true,
  "netstandard21OrLater" : true,
  "optionalEmitDefaultValues" : false,
  "nrt?" : "?",
  "licenseUrl" : "http://localhost",
  "hasOperationServers" : false,
  "useDateTimeForDate" : false,
  "generatedYear" : "2025",
  "net8.0" : true,
  "modelPackage" : "Model",
  "scheme" : "http",
  "apiDocPath" : "docs/",
  "library" : "restsharp",
  "packageProductName" : "OpenAPILibrary",
  "hideGenerationTimestamp" : true,
  "packageCompany" : "OpenAPI",
  "useRestSharp" : true,
  "net47OrLater" : true,
  "generateApiDocs" : true,
  "targetFrameworkIdentifier" : ".NETCoreApp",
  "binRelativePath" : "..\\..\\vendor",
  "conditionalSerialization" : false,
  "returnICollection" : false,
  "netstandard20OrLater" : true,
  "validatable" : false,
  "useCollection" : false,
  "webhooks" : [ ],
  "gitRepoId" : "GIT_REPO_ID",
  "generateRecursiveDependentModels" : false,
  "gitUserId" : "GIT_USER_ID",
  "apiName" : "Api",
  "interfacePrefix" : "I",
  "netCoreProjectFile" : false,
  "apiFolder" : "Api",
  "targetFrameworkVersion" : "vnet8.0",
  "generateModelDocs" : true,
  "generateApiTests" : true,
  "optionalMethodArgument" : true,
  "generateModels" : true,
  "host" : "localhost",
  "useOneOfDiscriminatorLookup" : false,
  "targetFramework" : "net8.0",
  "openapi-yaml" : "openapi: 3.0.1\ninfo:\n  description: Derived by extending the OB OpenAPI Taxonomy 1.1.7\n  title: SUPERNOVA Interoperation API 1.0 Data Model\n  version: \"1.0\"\nservers:\n- url: /\npaths: {}\ncomponents:\n  schemas:\n    Info:\n      description: '...TODO...'\n      properties:\n        Name:\n          description: Name of current service exposed\n          type: string\n        Source:\n          $ref: '#/components/schemas/PlatformIdentifier'\n        Description:\n          description: '...TODO...'\n          type: string\n        Version:\n          description: '...TODO...'\n          type: string\n        SupportedDocuments:\n          description: '...TODO...'\n          items:\n            $ref: '#/components/schemas/SupportedDocument'\n          type: array\n      type: object\n    SupportedDocument:\n      description: Document supported\n      properties:\n        Description:\n          type: string\n        DocumentType:\n          description: document type\n          type: string\n          x-ob-usate-tips: text/csv\n      type: object\n    Device:\n      allOf:\n      - $ref: '#/components/schemas/Device_1'\n      - description: State of a Province of the mailing or physical address.\n        properties:\n          Locations:\n            items:\n              $ref: '#/components/schemas/Location'\n            type: array\n        type: object\n      description: '...TODO...'\n      type: object\n    PVArray:\n      allOf:\n      - $ref: '#/components/schemas/PVArray_1'\n      - description: State of a Province of the mailing or physical address.\n        properties:\n          Locations:\n            items:\n              $ref: '#/components/schemas/Location'\n            type: array\n        type: object\n      description: '...TODO...'\n      type: object\n    PVString:\n      allOf:\n      - $ref: '#/components/schemas/PVString_1'\n      - description: State of a Province of the mailing or physical address.\n        properties:\n          Locations:\n            items:\n              $ref: '#/components/schemas/Location'\n            type: array\n        type: object\n      description: '...TODO...'\n      type: object\n    PVSystem:\n      allOf:\n      - $ref: '#/components/schemas/PVString_1'\n      - description: State of a Province of the mailing or physical address.\n        properties:\n          Locations:\n            items:\n              $ref: '#/components/schemas/Location'\n            type: array\n        type: object\n      description: '...TODO...'\n      type: object\n    Connection:\n      description: '...TODO...'\n      properties:\n        ConnectionId:\n          $ref: '#/components/schemas/ConnectionId'\n        ConnectionType:\n          $ref: '#/components/schemas/ConnectionType'\n        FromDeviceId:\n          $ref: '#/components/schemas/FromDeviceId'\n        ToDeviceId:\n          $ref: '#/components/schemas/ToDeviceId'\n      type: object\n    Document:\n      description: '...TODO...'\n      properties:\n        DocumentId:\n          $ref: '#/components/schemas/DocumentId'\n        DocumentName:\n          $ref: '#/components/schemas/DocumentName'\n        DocumentType:\n          $ref: '#/components/schemas/DocumentType'\n        DocumentUrl:\n          $ref: '#/components/schemas/DocumentUrl'\n        DocumentDate:\n          $ref: '#/components/schemas/DocumentDate'\n      type: object\n    ConnectionId:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: '...TODO...'\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-usage-tips: \"\"\n        x-ob-item-type-group: \"\"\n    ConnectionType:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: '...TODO...'\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-usage-tips: \"\"\n        x-ob-item-type-group: \"\"\n    FromDeviceId:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: '...TODO...'\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-usage-tips: \"\"\n        x-ob-item-type-group: \"\"\n    ToDeviceId:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: '...TODO...'\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-usage-tips: \"\"\n        x-ob-item-type-group: \"\"\n    DocumentId:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: '...TODO...'\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-usage-tips: \"\"\n        x-ob-item-type-group: \"\"\n    DocumentName:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: '...TODO...'\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-usage-tips: \"\"\n        x-ob-item-type-group: \"\"\n    DocumentType:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: '...TODO...'\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-usage-tips: \"\"\n        x-ob-item-type-group: \"\"\n    DocumentUrl:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: '...TODO...'\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-usage-tips: \"\"\n        x-ob-item-type-group: \"\"\n    DocumentDate:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: '...TODO...'\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-usage-tips: \"\"\n        x-ob-item-type-group: \"\"\n    GatewayHook:\n      properties:\n        Name:\n          nullable: true\n          type: string\n        Parameters:\n          additionalProperties:\n            type: string\n          nullable: true\n          type: object\n      type: object\n    GatewayHookExecution:\n      properties:\n        Id:\n          format: uuid\n          type: string\n        HookName:\n          type: string\n        Paramenters:\n          additionalProperties: {}\n          nullable: true\n          type: object\n        DateTime:\n          format: date-time\n          type: string\n        Status:\n          $ref: '#/components/schemas/HookStatus'\n        Result:\n          $ref: '#/components/schemas/GatewayHookResult'\n      type: object\n    GatewayHookResult:\n      properties:\n        ExecutionId:\n          format: uuid\n          type: string\n        IsSuccessful:\n          type: boolean\n        ResponseUrl:\n          nullable: true\n          type: string\n        DateTime:\n          format: date-time\n          type: string\n        ExpirationTime:\n          format: date-time\n          nullable: true\n          type: string\n      type: object\n    HookStatus:\n      enum:\n      - Created\n      - Execution\n      - End\n      type: string\n    PlatformIdentifier:\n      description: Preliminary platform list. To be extended with new products.\n      enum:\n      - ANTARES\n      - SOLARGAIN\n      - SYNAPTIQ\n      - other\n      type: string\n    Device_1:\n      description: \"A singular instance of a Product, usually with a serial number\\\n        \\ or other unique identifier.\"\n      properties:\n        SerialNum:\n          $ref: '#/components/schemas/SerialNum'\n        Description:\n          $ref: '#/components/schemas/Description'\n        URL:\n          $ref: '#/components/schemas/URL'\n        ProdCode:\n          $ref: '#/components/schemas/ProdCode'\n        ProdID:\n          $ref: '#/components/schemas/ProdID'\n        Firmware:\n          $ref: '#/components/schemas/Firmware'\n        MaintDateLast:\n          $ref: '#/components/schemas/MaintDateLast'\n        InServiceDate:\n          $ref: '#/components/schemas/InServiceDate'\n        Calibration:\n          $ref: '#/components/schemas/Calibration'\n        Warranties:\n          $ref: '#/components/schemas/Warranties'\n        DeviceType:\n          $ref: '#/components/schemas/DeviceType'\n        Components:\n          $ref: '#/components/schemas/Components'\n        DeviceName:\n          $ref: '#/components/schemas/DeviceName'\n        DeviceUUID:\n          $ref: '#/components/schemas/DeviceUUID'\n        CryptographicKeyIDs:\n          $ref: '#/components/schemas/CryptographicKeyIDs'\n        IsMaintainable:\n          $ref: '#/components/schemas/IsMaintainable'\n        Nodes:\n          $ref: '#/components/schemas/Nodes'\n      type: object\n      x-parent: true\n    SerialNum:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: Manufacturer's serial number of a device.\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value: {}\n        x-ob-item-type-group: \"\"\n    TaxonomyElementString:\n      properties:\n        Value:\n          $ref: '#/components/schemas/ValueString'\n        Unit:\n          $ref: '#/components/schemas/Unit'\n        Decimals:\n          $ref: '#/components/schemas/Decimals'\n        Precision:\n          $ref: '#/components/schemas/Precision'\n        StartTime:\n          $ref: '#/components/schemas/StartTime'\n        EndTime:\n          $ref: '#/components/schemas/EndTime'\n      type: object\n      x-ob-usage-tips: \"\"\n      x-parent: true\n    ValueString:\n      description: Value for the instance element\n      type: string\n      x-ob-usage-tips: \"\"\n    Unit:\n      description: Unit of the instance element\n      type: string\n      x-ob-usage-tips: \"\"\n    Decimals:\n      description: Decimals of the instance element\n      type: integer\n      x-ob-usage-tips: \"\"\n    Precision:\n      description: Precision of the instance element\n      type: integer\n      x-ob-usage-tips: \"\"\n    StartTime:\n      description: Start time of a measurement period for the instance element\n      type: string\n      x-ob-usage-tips: \"StartTime can be used to note the start of a window of time\\\n        \\ that a value represents, where EndTime closes time period. In instances\\\n        \\ where a value represents a snapshot, or single moment in time, StartTime\\\n        \\ can be used to represent that exact moment in time. \"\n    EndTime:\n      description: End time of a measurement period for the instance element\n      type: string\n      x-ob-usage-tips: \"\"\n    Description:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: Generic Text field used in fields to provide more detail\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: A description for generic commentary on a object. Not intended for\n            machine analysis\n        x-ob-item-type-group: \"\"\n    URL:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: A URL string\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: https://ahjregistry.sunspec.org/#/ahj-search\n        x-ob-item-type-group: \"\"\n    ProdCode:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: \"A product code is a standardized, unique human-readable identifier\\\n          \\ that is compact, and can be easily parsed. It consists of an entity code\\\n          \\ concatenated to a product specific identification string, separated by\\\n          \\ a hyphen. The format of a product code is: [EntityCode]-[ProductString],\\\n          \\ e.g., ôHANWH-Q_PEAK_DUO_BLK_G10__AC_365ö. A product string is comprised\\\n          \\ of upper-case letters, numbers, and underscores. Any character that is\\\n          \\ not a letter or number is a special character and will be replaced by\\\n          \\ an underscore. All letter characters will be upper case. To avoid clashes\\\n          \\ between identical product codes, an additional hyphen and an integer 1,\\\n          \\ 2, 3, ..., is appended, e.g. {ProdCode}-{incremental number}\"\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: HANWH-Q_PEAK_DUO_BLK_G10__AC_365\n        x-ob-item-type-group: \"\"\n    ProdID:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: Unique identifier for the Product.\n        type: object\n        x-ob-item-type: UUIDItemType\n        x-ob-item-type-group: \"\"\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: d522ff95-43c2-41e5-83e1-911c1f3ad81f\n    Firmware:\n      description: Permanent software programmed into a read-only memory.\n      properties:\n        FirmwareVersion:\n          $ref: '#/components/schemas/FirmwareVersion'\n        Checksum:\n          $ref: '#/components/schemas/Checksum'\n      type: object\n    FirmwareVersion:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: 'Firmware version '\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-item-type-group: \"\"\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: A.4.0.B\n    Checksum:\n      description: \"An object that describes the key, type and supporting information\\\n        \\ related to employing Checksums to manage data accuracy. \"\n      properties:\n        ChecksumKey:\n          $ref: '#/components/schemas/ChecksumKey'\n        ChecksumType:\n          $ref: '#/components/schemas/ChecksumType'\n        ChecksumDetail:\n          $ref: '#/components/schemas/ChecksumDetail'\n      type: object\n    ChecksumKey:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: The value used to validate the accuracy of data through the use\n          of a Checksum Algorithm.\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-item-type-group: \"\"\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: 120EA8A25E5D487BF68B5F7096440019\n    ChecksumType:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: Type of Checksum that is employed by Firmware to detect errors\n          and verify data integrity.\n        type: object\n        x-ob-item-type: ChecksumTypeItemType\n        x-ob-item-type-group: \"\"\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: CRC\n    ChecksumDetail:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: Supporting information used to provide additional context to\n          the type of Checksum algorithm used to validate data.\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-item-type-group: \"\"\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value: {}\n    MaintDateLast:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: Date of latest maintenance activity\n        type: object\n        x-ob-item-type: DateItemType\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value: {}\n        x-ob-item-type-group: \"\"\n    InServiceDate:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: Date that a device is first placed in service.\n        type: object\n        x-ob-item-type: DateTimeItemType\n        x-ob-item-type-group: \"\"\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value: {}\n    Calibration:\n      properties:\n        CalibrationDateLast:\n          $ref: '#/components/schemas/CalibrationDateLast'\n        CalibrationMeth:\n          $ref: '#/components/schemas/CalibrationMeth'\n      type: object\n      x-ob-usage-tips: \"\"\n    CalibrationDateLast:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: Date of last calibration\n        type: object\n        x-ob-item-type: DateItemType\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: 22-02-22\n        x-ob-item-type-group: \"\"\n    CalibrationMeth:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: Description of calibration method for an instrument.\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value: {}\n        x-ob-item-type-group: \"\"\n    Warranties:\n      items:\n        $ref: '#/components/schemas/Warranty'\n      type: array\n    Warranty:\n      description: Guarantee of minimum quality level\n      properties:\n        WarrantyType:\n          $ref: '#/components/schemas/WarrantyType'\n        FileFolderURL:\n          $ref: '#/components/schemas/FileFolderURL'\n        Description:\n          $ref: '#/components/schemas/Description'\n        WarrantyID:\n          $ref: '#/components/schemas/WarrantyID'\n        WarrantyName:\n          $ref: '#/components/schemas/WarrantyName'\n        WarrantyDuration:\n          $ref: '#/components/schemas/WarrantyDuration'\n        WarrantyEffectiveDate:\n          $ref: '#/components/schemas/WarrantyEffectiveDate'\n        WarrantyExpirationDate:\n          $ref: '#/components/schemas/WarrantyExpirationDate'\n      type: object\n    WarrantyType:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: Classification of the Warranty. What type of Warranty is it?\n        type: object\n        x-ob-item-type: WarrantyItemType\n        x-ob-item-type-group: \"\"\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: Power\n    FileFolderURL:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: A generic URL to a file folder or a single file for transmitting\n          documents\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-usage-tips: \"Consider the permissions settings on any documents noted\\\n          \\ within the FileFolderURL object. User may adjust permissions to enable\\\n          \\ expanded access to documentation. For example, when using Google Docs,\\\n          \\ have permissions allow access to any user with the URL.\"\n        x-ob-sample-value:\n          Value: \"https://www.lg.com/us/business/download/resources/BT00002151/[Print]%20Neon_2_60_BF_80308_ck_FRD_v4.pdf\"\n        x-ob-item-type-group: \"\"\n    WarrantyID:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: Universally Unique Identifier for the Warranty\n        type: object\n        x-ob-item-type: UUIDItemType\n        x-ob-item-type-group: \"\"\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: 63e32227-7a31-4a0c-a715-20d46315cc9e\n    WarrantyName:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: Human Readable Name for the Warranty\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-item-type-group: \"\"\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: Standard REC 25 yr Warranty\n    WarrantyDuration:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementInteger'\n      - description: 'How long is the Warranty Valid For? '\n        type: object\n        x-ob-item-type: DurationItemType\n        x-ob-item-type-group: \"\"\n        x-ob-usage-tips: Enter as integer; Specify Units.\n        x-ob-sample-value:\n          Value: 25\n          Unit: \"Y\"\n    TaxonomyElementInteger:\n      properties:\n        Value:\n          $ref: '#/components/schemas/ValueInteger'\n        Unit:\n          $ref: '#/components/schemas/Unit'\n        Decimals:\n          $ref: '#/components/schemas/Decimals'\n        Precision:\n          $ref: '#/components/schemas/Precision'\n        StartTime:\n          $ref: '#/components/schemas/StartTime'\n        EndTime:\n          $ref: '#/components/schemas/EndTime'\n      type: object\n      x-ob-usage-tips: \"\"\n      x-parent: true\n    ValueInteger:\n      description: Value for the instance element\n      type: integer\n      x-ob-usage-tips: \"\"\n    WarrantyEffectiveDate:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: Date the Warranty Comes Into Force\n        type: object\n        x-ob-item-type: DateItemType\n        x-ob-item-type-group: \"\"\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: 2012-07-16\n    WarrantyExpirationDate:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: Date the Warranty Is No Longer in Force\n        type: object\n        x-ob-item-type: DateItemType\n        x-ob-item-type-group: \"\"\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: 2037-07-16\n    DeviceType:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: The type of a device\n        type: object\n        x-ob-item-type: DeviceTypeItemType\n        x-ob-item-type-group: \"\"\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value: {}\n    Components:\n      items:\n        $ref: '#/components/schemas/Component'\n      type: array\n    Component:\n      description: A part or component of a Device\n      properties:\n        ComponentType:\n          $ref: '#/components/schemas/ComponentType'\n        ComponentName:\n          $ref: '#/components/schemas/ComponentName'\n        ComponentUUID:\n          $ref: '#/components/schemas/ComponentUUID'\n        IsMaintainable:\n          $ref: '#/components/schemas/IsMaintainable'\n        Nodes:\n          $ref: '#/components/schemas/Nodes'\n        Description:\n          $ref: '#/components/schemas/Description'\n      type: object\n    ComponentType:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: The type of a Component\n        type: object\n        x-ob-item-type: ComponentTypeItemType\n        x-ob-item-type-group: \"\"\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value: {}\n    ComponentName:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: A user-defined name for a Component\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-item-type-group: \"\"\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value: {}\n    ComponentUUID:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: An identifier for a component\n        type: object\n        x-ob-item-type: UUIDItemType\n        x-ob-item-type-group: \"\"\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value: {}\n    IsMaintainable:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementBoolean'\n      - description: \"True if an Assembly, Device or Component has parts that can\\\n          \\ be serviced or replaced without violating a warranty.\"\n        type: object\n        x-ob-item-type: BooleanItemType\n        x-ob-item-type-group: \"\"\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value: {}\n    TaxonomyElementBoolean:\n      properties:\n        Value:\n          $ref: '#/components/schemas/ValueBoolean'\n        Unit:\n          $ref: '#/components/schemas/Unit'\n        Decimals:\n          $ref: '#/components/schemas/Decimals'\n        Precision:\n          $ref: '#/components/schemas/Precision'\n        StartTime:\n          $ref: '#/components/schemas/StartTime'\n        EndTime:\n          $ref: '#/components/schemas/EndTime'\n      type: object\n      x-ob-usage-tips: \"\"\n      x-parent: true\n    ValueBoolean:\n      description: Value for the instance element\n      type: boolean\n      x-ob-usage-tips: \"\"\n    Nodes:\n      items:\n        $ref: '#/components/schemas/Node'\n      type: array\n    Node:\n      description: A node is an element of a PVCollada file that describes geospatial\n        positions and mechanical relationships.\n      properties:\n        NodeUUID:\n          $ref: '#/components/schemas/NodeUUID'\n        Description:\n          $ref: '#/components/schemas/Description'\n        PVColladaID:\n          $ref: '#/components/schemas/PVColladaID'\n        PVColladaFileID:\n          $ref: '#/components/schemas/PVColladaFileID'\n      type: object\n    NodeUUID:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: \"A UUID for a Node, which is an element of a topology.\"\n        type: object\n        x-ob-item-type: UUIDItemType\n        x-ob-item-type-group: \"\"\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value: {}\n    PVColladaID:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: An identifier for an object in a PVCollada file.\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-item-type-group: \"\"\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value: {}\n    PVColladaFileID:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: An identifier for a PVCollada file.\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-item-type-group: \"\"\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value: {}\n    DeviceName:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: A user-defined name for a device\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-item-type-group: \"\"\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value: {}\n    DeviceUUID:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: UUID for an individual piece of equipment.\n        type: object\n        x-ob-item-type: UUIDItemType\n        x-ob-usage-tips: Use SerialNum for the manufacturer's serial number.\n        x-ob-sample-value: {}\n        x-ob-item-type-group: \"\"\n    CryptographicKeyIDs:\n      items:\n        $ref: '#/components/schemas/CryptographicKeyID'\n      type: array\n    CryptographicKeyID:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: \"This concept provides a cryptographically secure identity for\\\n          \\ a device and originates from the distributed ledger or blockchain technologies.\\\n          \\ The Cryptographic Key ID is derived from an asymmetric private/public\\\n          \\ key pair, typically generated on the device itself and stored securely,\\\n          \\ preferably in a hardware-secured environment like a Secure Element (SE).\\\n          \\ Private keys remain within this secure environment to prevent exposure.\\\n          \\ The CryptographicKeyID consists of a type identifier, the hash output\\\n          \\ of public-key-material, and optionally, a CRC check for error detection,\\\n          \\ ensuring uniqueness and integrity.\"\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-item-type-group: \"\"\n        x-ob-usage-tips: \"For more info see: https://github.com/Lumian-Foundation/ckid-documentation/tree/main\\\n          \\ Lumian Foundation is a not-pro-profit Standards organization spun off\\\n          \\ from SunSpec.\"\n        x-ob-sample-value:\n          Value: 1E99423A4ED27608A15A2616A2B0E9E52CED330AC530EDCC32C8FFC6A526AEDD\n    Location:\n      description: \"A location is defined by Latitude, Longitude and Altitude.\"\n      properties:\n        Latitude:\n          $ref: '#/components/schemas/Latitude'\n        Longitude:\n          $ref: '#/components/schemas/Longitude'\n        Altitude:\n          $ref: '#/components/schemas/Altitude'\n        Elevation:\n          $ref: '#/components/schemas/Elevation'\n        LocationType:\n          $ref: '#/components/schemas/LocationType'\n        LocationID:\n          $ref: '#/components/schemas/LocationID'\n        Description:\n          $ref: '#/components/schemas/Description'\n        LocationDeterminationMethod:\n          $ref: '#/components/schemas/LocationDeterminationMethod'\n      type: object\n      x-ob-usage-tips: \"\"\n    Latitude:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementNumber'\n      - description: Decimal value of latitude of the physical site in degrees.  Positive\n          North of the Equator.  Negative South of the Equator\n        type: object\n        x-ob-item-type: PlaneAngleItemType\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Unit: Degree\n          Value: 45.7783517\n        x-ob-item-type-group: \"\"\n    TaxonomyElementNumber:\n      properties:\n        Value:\n          $ref: '#/components/schemas/ValueNumber'\n        Unit:\n          $ref: '#/components/schemas/Unit'\n        Decimals:\n          $ref: '#/components/schemas/Decimals'\n        Precision:\n          $ref: '#/components/schemas/Precision'\n        StartTime:\n          $ref: '#/components/schemas/StartTime'\n        EndTime:\n          $ref: '#/components/schemas/EndTime'\n      type: object\n      x-ob-usage-tips: \"\"\n      x-parent: true\n    ValueNumber:\n      description: Value for the instance element\n      type: number\n      x-ob-usage-tips: \"\"\n    Longitude:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementNumber'\n      - description: Decimal value of longitude of the physical site in degrees.  Positive\n          east of the Prime Meridian.  Negative west of the Prime Meridian.  North\n          America is negative..\n        type: object\n        x-ob-item-type: PlaneAngleItemType\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Unit: Degree\n          Value: -108.5203597\n        x-ob-item-type-group: \"\"\n    Altitude:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementNumber'\n      - description: The height of ground level at a location relative to sea level.\n        type: object\n        x-ob-item-type: LengthItemType\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Unit: ft\n          Value: 3123\n        x-ob-item-type-group: \"\"\n    Elevation:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementNumber'\n      - description: Height from ground level.\n        type: object\n        x-ob-item-type: LengthItemType\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Unit: ft\n          Value: 20\n        x-ob-item-type-group: \"\"\n    LocationType:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: The type of location being specified\n        type: object\n        x-ob-item-type: LocationTypeItemType\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: GeneralProximity\n        x-ob-item-type-group: \"\"\n    LocationID:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: The identifier of the location.\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: 63e32227-7a31-4a0c-a715-20d46315cc9e\n        x-ob-item-type-group: \"\"\n    LocationDeterminationMethod:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: Method of the determining the location\n        type: object\n        x-ob-item-type: LocationDeterminationMethodItemType\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: AddressGeocoding\n        x-ob-item-type-group: \"\"\n    PVArray_1:\n      description: An array of modules within a PVSystem that have a common orientation.\n      properties:\n        PVStrings:\n          $ref: '#/components/schemas/PVStrings'\n        Orientation:\n          $ref: '#/components/schemas/Orientation'\n        Area:\n          $ref: '#/components/schemas/Area'\n        RoofPlaneID:\n          $ref: '#/components/schemas/RoofPlaneID'\n        FileFolderURL:\n          $ref: '#/components/schemas/FileFolderURL'\n        Description:\n          $ref: '#/components/schemas/Description'\n        CapacityDC:\n          $ref: '#/components/schemas/CapacityDC'\n        ProductLineItems:\n          $ref: '#/components/schemas/ProductLineItems'\n        Devices:\n          $ref: '#/components/schemas/Devices'\n        PVArrayID:\n          $ref: '#/components/schemas/PVArrayID'\n        ModuleOrientation:\n          $ref: '#/components/schemas/ModuleOrientation'\n      type: object\n      x-parent: true\n    PVStrings:\n      items:\n        $ref: '#/components/schemas/PVString_1'\n      type: array\n    PVString_1:\n      description: A string of Modules within a PVSystem\n      properties:\n        Devices:\n          $ref: '#/components/schemas/Devices'\n        Orientation:\n          $ref: '#/components/schemas/Orientation'\n        ProductLineItems:\n          $ref: '#/components/schemas/ProductLineItems'\n        CapacityDC:\n          $ref: '#/components/schemas/CapacityDC'\n        FileFolderURL:\n          $ref: '#/components/schemas/FileFolderURL'\n        Description:\n          $ref: '#/components/schemas/Description'\n        PVStringID:\n          $ref: '#/components/schemas/PVStringID'\n        ModuleOrientation:\n          $ref: '#/components/schemas/ModuleOrientation'\n      type: object\n      x-parent: true\n    Devices:\n      items:\n        $ref: '#/components/schemas/Device_1'\n      type: array\n      x-ob-usage-tips: \"\"\n    Orientation:\n      description: \"Orientation is defined by Azimuth, Tilt and Roll. Azimuth and\\\n        \\ Tilt are defined in the context of a right-hand coordinate system where\\\n        \\ the the x-axis is East, y-axis is North, and the z-axis is vertical.\"\n      properties:\n        Azimuth:\n          $ref: '#/components/schemas/Azimuth'\n        Tilt:\n          $ref: '#/components/schemas/Tilt'\n        Roll:\n          $ref: '#/components/schemas/Roll'\n      type: object\n    Azimuth:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementNumber'\n      - description: Azimuth relative to North where North is 0 degrees and East is\n          90 degrees\n        type: object\n        x-ob-item-type: PlaneAngleItemType\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Unit: Degree\n          Value: 180\n        x-ob-item-type-group: \"\"\n    Tilt:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementNumber'\n      - description: \"Tilt is the angle relative to horizontal. Horizontal is defined\\\n          \\ as the x,y plane of a right-hand coordinate system where the the x-axis\\\n          \\ is East, y-axis is North, and the z-axis is vertical.\"\n        type: object\n        x-ob-item-type: PlaneAngleItemType\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Unit: Degree\n          Value: 30\n        x-ob-item-type-group: \"\"\n    Roll:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementNumber'\n      - description: \"Roll is a right-hand rotation about an oriented axis, with a\\\n          \\ positive value being a counter-clockwise rotation. In the context of a\\\n          \\ solar module, Roll is the rotation of the module about the vector normal\\\n          \\ to the module's plane that is oriented towards the sky.\"\n        type: object\n        x-ob-item-type: PlaneAngleItemType\n        x-ob-usage-tips: The Roll element of Orientation is used when solar modules\n          are installed on a slant.\n        x-ob-sample-value:\n          Unit: Degree\n          Value: 20\n        x-ob-item-type-group: \"\"\n    ProductLineItems:\n      items:\n        $ref: '#/components/schemas/ProductLineItem'\n      type: array\n      x-ob-usage-tips: \"\"\n    ProductLineItem:\n      description: A product used within a PVSystem and the quantity of that product\n      properties:\n        Product:\n          $ref: '#/components/schemas/Product'\n        Description:\n          $ref: '#/components/schemas/Description'\n        FileFolderURL:\n          $ref: '#/components/schemas/FileFolderURL'\n        Quantity:\n          $ref: '#/components/schemas/Quantity'\n        AmountExtended:\n          $ref: '#/components/schemas/AmountExtended'\n      type: object\n      x-ob-usage-tips: \"\"\n    Product:\n      description: An item or equipment that is packaged and sold as a unit.\n      properties:\n        ProdName:\n          $ref: '#/components/schemas/ProdName'\n        ProdMfr:\n          $ref: '#/components/schemas/ProdMfr'\n        ProdCode:\n          $ref: '#/components/schemas/ProdCode'\n        ProdType:\n          $ref: '#/components/schemas/ProdType'\n        ProdDatasheet:\n          $ref: '#/components/schemas/ProdDatasheet'\n        ProdInstructions:\n          $ref: '#/components/schemas/ProdInstructions'\n        ProdSpecifications:\n          $ref: '#/components/schemas/ProdSpecifications'\n        ProdCertifications:\n          $ref: '#/components/schemas/ProdCertifications'\n        Description:\n          $ref: '#/components/schemas/Description'\n        FileFolderURL:\n          $ref: '#/components/schemas/FileFolderURL'\n        Dimension:\n          $ref: '#/components/schemas/Dimension'\n        Packages:\n          $ref: '#/components/schemas/Packages'\n        Warranties:\n          $ref: '#/components/schemas/Warranties'\n        AlternativeIdentifiers:\n          $ref: '#/components/schemas/AlternativeIdentifiers'\n        ProdID:\n          $ref: '#/components/schemas/ProdID'\n        SubstituteProducts:\n          $ref: '#/components/schemas/SubstituteProducts'\n        ManufacturerUPC:\n          $ref: '#/components/schemas/ManufacturerUPC'\n      type: object\n    ProdName:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: \"Name of the product, for example ABC Brand Inverter.\"\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: Q.PEAK DUO BLK-G10+/AC 360-365\n        x-ob-item-type-group: \"\"\n    ProdMfr:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: Name of the product or equipment manufacturer.\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: Hanwha\n        x-ob-item-type-group: \"\"\n    ProdType:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: The type of product\n        type: object\n        x-ob-item-type: ProdTypeItemType\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: ProdModule\n        x-ob-item-type-group: \"\"\n    ProdDatasheet:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: The datasheet for the product\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-usage-tips: This is for a URL leading to the Datasheet for a product.\n        x-ob-sample-value:\n          Value: http://www.lg-solar.com/downloads/spec-sheet/DS_NeON2_60cells.pdf\n        x-ob-item-type-group: \"\"\n    ProdInstructions:\n      items:\n        $ref: '#/components/schemas/ProdInstruction'\n      type: array\n    ProdInstruction:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: A single document in a collection of the instructions for a product.\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-usage-tips: This should be used for sending all of the instructions for\n          installing and servicing the product. Each file can be placed in one member\n          of the array of ProdInstructions\n        x-ob-sample-value:\n          Value: https://unirac.com/wp-content/uploads/pdf/FLASHKIT-PRO_Brochure_20180831.pdf\n        x-ob-item-type-group: \"\"\n    ProdSpecifications:\n      items:\n        $ref: '#/components/schemas/ProdSpecification'\n      type: array\n    ProdSpecification:\n      description: A single specification for a product\n      properties:\n        SpecificationName:\n          $ref: '#/components/schemas/SpecificationName'\n        SpecificationType:\n          $ref: '#/components/schemas/SpecificationType'\n        SpecificationUnit:\n          $ref: '#/components/schemas/SpecificationUnit'\n        SpecificationValue:\n          $ref: '#/components/schemas/SpecificationValue'\n        Description:\n          $ref: '#/components/schemas/Description'\n      type: object\n    SpecificationName:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: Use this for describing an individual specification\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-usage-tips: Use this for custom units and details of the product\n        x-ob-sample-value:\n          Value: Power factor (adjustable)\n        x-ob-item-type-group: \"\"\n    SpecificationType:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: The enumerated list of the types of major specifications.\n        type: object\n        x-ob-item-type: SpecificationTypeItemType\n        x-ob-usage-tips: \"If the specification does not have a type listed here, select\\\n          \\ \\\"None\\\" and then use the SpecificationName as an alternative.\"\n        x-ob-sample-value: {}\n        x-ob-item-type-group: \"\"\n    SpecificationUnit:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: The specific unit of the specification\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-usage-tips: This needs to be the specific unit the SpecificationValue\n          is given in\n        x-ob-sample-value:\n          Value: mm\n        x-ob-item-type-group: \"\"\n    SpecificationValue:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: The value of the specific Specification.\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-usage-tips: Note the unit always needs to be equal to the SpecificationUnit\n          value\n        x-ob-sample-value:\n          Value: \"9\"\n        x-ob-item-type-group: \"\"\n    ProdCertifications:\n      items:\n        $ref: '#/components/schemas/ProdCertification'\n      type: array\n    ProdCertification:\n      description: A certification for a product\n      properties:\n        CertificationAgency:\n          $ref: '#/components/schemas/CertificationAgency'\n        FileFolderURL:\n          $ref: '#/components/schemas/FileFolderURL'\n        Description:\n          $ref: '#/components/schemas/Description'\n        CertificationDate:\n          $ref: '#/components/schemas/CertificationDate'\n        CertificationExpirationDate:\n          $ref: '#/components/schemas/CertificationExpirationDate'\n        CertificationName:\n          $ref: '#/components/schemas/CertificationName'\n        CertificateValue:\n          $ref: '#/components/schemas/CertificateValue'\n        CertificationStandard:\n          $ref: '#/components/schemas/CertificationStandard'\n        Firmware:\n          $ref: '#/components/schemas/Firmware'\n        TestLab:\n          $ref: '#/components/schemas/TestLab'\n      type: object\n    CertificationAgency:\n      allOf:\n      - $ref: '#/components/schemas/Entity'\n      - description: The agency or testing center that grants the certification\n        properties:\n          Description:\n            $ref: '#/components/schemas/Description'\n          CertificationAgencyName:\n            $ref: '#/components/schemas/CertificationAgencyName'\n        type: object\n    Entity:\n      description: Any commercial or legal organization.\n      properties:\n        Addresses:\n          $ref: '#/components/schemas/Addresses'\n        Contacts:\n          $ref: '#/components/schemas/Contacts'\n        Email:\n          $ref: '#/components/schemas/Email'\n        WorkPhone:\n          $ref: '#/components/schemas/WorkPhone'\n        LegalEntityIdentifier:\n          $ref: '#/components/schemas/LegalEntityIdentifier'\n        URL:\n          $ref: '#/components/schemas/URL'\n        TaxID:\n          $ref: '#/components/schemas/TaxID'\n        CreditRatings:\n          $ref: '#/components/schemas/CreditRatings'\n        AlternativeIdentifiers:\n          $ref: '#/components/schemas/AlternativeIdentifiers'\n        PaymentMethods:\n          $ref: '#/components/schemas/PaymentMethods'\n        EntityRole:\n          $ref: '#/components/schemas/EntityRole'\n      type: object\n      x-parent: true\n    Addresses:\n      items:\n        $ref: '#/components/schemas/Address'\n      type: array\n      x-ob-usage-tips: \"\"\n    Address:\n      description: Physical or Mailing address\n      properties:\n        City:\n          $ref: '#/components/schemas/City'\n        StateProvince:\n          $ref: '#/components/schemas/StateProvince'\n        ZipPostalCode:\n          $ref: '#/components/schemas/ZipPostalCode'\n        Country:\n          $ref: '#/components/schemas/Country'\n        County:\n          $ref: '#/components/schemas/County'\n        AddressType:\n          $ref: '#/components/schemas/AddressType'\n        AddressID:\n          $ref: '#/components/schemas/AddressID'\n        Location:\n          $ref: '#/components/schemas/Location'\n        AddrLine1:\n          $ref: '#/components/schemas/AddrLine1'\n        AddrLine2:\n          $ref: '#/components/schemas/AddrLine2'\n        AddrLine3:\n          $ref: '#/components/schemas/AddrLine3'\n        Description:\n          $ref: '#/components/schemas/Description'\n      type: object\n      x-ob-usage-tips: \"\"\n    City:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: Name of the city in the physical or mailing address.\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: Billings\n        x-ob-item-type-group: \"\"\n    StateProvince:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: State of a Province of the mailing or physical address.\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: MT\n        x-ob-item-type-group: \"\"\n    ZipPostalCode:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: Zip Code / Postal Code of a mailing or physical address.\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: \"59101\"\n        x-ob-item-type-group: \"\"\n    Country:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: ISO country code where system is located.\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: USA\n        x-ob-item-type-group: \"\"\n    County:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: County of the physical or mailing address\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: Yellowstone County\n        x-ob-item-type-group: \"\"\n    AddressType:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: The type of address being specified\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: Installation\n        x-ob-item-type-group: \"\"\n    AddressID:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: The identifier of the address.\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: 63e32227-7a31-4a0c-a715-20d46315cc9e\n        x-ob-item-type-group: \"\"\n    AddrLine1:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: First line of a mailing or physical address.\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: 135 Wyoming Avenue\n        x-ob-item-type-group: \"\"\n    AddrLine2:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: Second line of a mailing or physical address.\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: Apt 31\n        x-ob-item-type-group: \"\"\n    AddrLine3:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: Third line of a mailing or physical address.\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: Building H\n        x-ob-item-type-group: \"\"\n    Contacts:\n      items:\n        $ref: '#/components/schemas/Contact'\n      type: array\n      x-ob-usage-tips: \"\"\n    Contact:\n      description: A person or contact information\n      properties:\n        Address:\n          $ref: '#/components/schemas/Address'\n        ContactID:\n          $ref: '#/components/schemas/ContactID'\n        Email:\n          $ref: '#/components/schemas/Email'\n        MobilePhone:\n          $ref: '#/components/schemas/MobilePhone'\n        WorkPhone:\n          $ref: '#/components/schemas/WorkPhone'\n        HomePhone:\n          $ref: '#/components/schemas/HomePhone'\n        FirstName:\n          $ref: '#/components/schemas/FirstName'\n        MiddleName:\n          $ref: '#/components/schemas/MiddleName'\n        LastName:\n          $ref: '#/components/schemas/LastName'\n        ContactType:\n          $ref: '#/components/schemas/ContactType'\n        Description:\n          $ref: '#/components/schemas/Description'\n        PreferredContactMethod:\n          $ref: '#/components/schemas/PreferredContactMethod'\n        ContactTimezone:\n          $ref: '#/components/schemas/ContactTimezone'\n        Title:\n          $ref: '#/components/schemas/Title'\n        URL:\n          $ref: '#/components/schemas/URL'\n      type: object\n      x-ob-usage-tips: \"\"\n    ContactID:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: The identifier of the contact.\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: 63e32227-7a31-4a0c-a715-20d46315cc9e\n        x-ob-item-type-group: \"\"\n    Email:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: Email address\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: Test@sunspec.com\n        x-ob-item-type-group: \"\"\n    MobilePhone:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: \"Phone Number of a cell phone or mobile device.  This phone is\\\n          \\ expected to be able to receive text messages.  Characters like hyphen,\\\n          \\ period, x for extension are allowed.\"\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: (987) 654-3210\n        x-ob-item-type-group: \"\"\n    WorkPhone:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: \"Phone number to be used during working hours.  Characters like\\\n          \\ hyphen, period, x for extension are allowed.\"\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: (987) 654-3210\n        x-ob-item-type-group: \"\"\n    HomePhone:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: \"Phone number to be used for high priority calls only.  Characters\\\n          \\ like hyphen, period, x for extension are allowed.\"\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: (987) 654-3210\n        x-ob-item-type-group: \"\"\n    FirstName:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: First name of a person.\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: Bob\n        x-ob-item-type-group: \"\"\n    MiddleName:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: Middle name of a person.\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: Alex\n        x-ob-item-type-group: \"\"\n    LastName:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: The last name of person.\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: Smith\n        x-ob-item-type-group: \"\"\n    ContactType:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: The type of contact being specified\n        type: object\n        x-ob-item-type: ContactTypeItemType\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: Homeowner\n        x-ob-item-type-group: \"\"\n    PreferredContactMethod:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: The method of contact the contact prefers\n        type: object\n        x-ob-item-type: PreferredContactMethodItemType\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: Email\n        x-ob-item-type-group: \"\"\n    ContactTimezone:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: The timezone where the contact is located.\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: PST\n        x-ob-item-type-group: \"\"\n    Title:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: The title of the contact\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: Department Manager\n        x-ob-item-type-group: \"\"\n    LegalEntityIdentifier:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: Legal Entity Identifier (LEI) of the entity.\n        type: object\n        x-ob-item-type: LegalEntityIdentifierItemType\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: 254900HROIFWPRGM1V77\n        x-ob-item-type-group: \"\"\n    TaxID:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: Tax identification number of the entity.\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: 13-7654321\n        x-ob-item-type-group: \"\"\n    CreditRatings:\n      items:\n        $ref: '#/components/schemas/CreditRating'\n      type: array\n    CreditRating:\n      description: Credit rating.\n      properties:\n        CreditScore:\n          $ref: '#/components/schemas/CreditScore'\n        CreditScoreSource:\n          $ref: '#/components/schemas/CreditScoreSource'\n      type: object\n    CreditScore:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: 'Credit symbol that indicates the degree of credit worthiness. '\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-item-type-group: \"\"\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: AAA\n    CreditScoreSource:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: \"Issuing source of a credit score, such as a Rating Agency. \"\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-item-type-group: \"\"\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: Standard & Poor's\n    AlternativeIdentifiers:\n      items:\n        $ref: '#/components/schemas/AlternativeIdentifier'\n      type: array\n    AlternativeIdentifier:\n      description: Additional identifier for a record or data set\n      properties:\n        SourceName:\n          $ref: '#/components/schemas/SourceName'\n        Identifier:\n          $ref: '#/components/schemas/Identifier'\n        Description:\n          $ref: '#/components/schemas/Description'\n        IdentifierType:\n          $ref: '#/components/schemas/IdentifierType'\n      type: object\n    SourceName:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: Name of the data source.\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-item-type-group: \"\"\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: Data Source\n    Identifier:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: A unique identifier for a record or dataset.\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-item-type-group: \"\"\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: be3827bd-0b57-4990-a757-7ee13348356f\n    IdentifierType:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: 'The type of unique identifier used to represent a unique datapoint\n          as the AlternativeIdentifier. '\n        type: object\n        x-ob-item-type: IdentifierTypeItemType\n        x-ob-item-type-group: \"\"\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: UUID\n    PaymentMethods:\n      items:\n        $ref: '#/components/schemas/PaymentMethod'\n      type: array\n    PaymentMethod:\n      description: \"The named method of payment(s) at the payment processor that can\\\n        \\ be used to fund the transaction(s). Used for expenses related to a task,\\\n        \\ non-payroll related payments and other payments that may not be included\\\n        \\ in existing contractual payments.\"\n      properties:\n        PaymentToken:\n          $ref: '#/components/schemas/PaymentToken'\n        AlternativeIdentifiers:\n          $ref: '#/components/schemas/AlternativeIdentifiers'\n        Tags:\n          $ref: '#/components/schemas/Tags'\n        Comments:\n          $ref: '#/components/schemas/Comments'\n        PaymentMethodName:\n          $ref: '#/components/schemas/PaymentMethodName'\n      type: object\n    PaymentToken:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: The token assigned by the payment processor to represent a previously\n          stored payment method. This value should not contain any information that\n          is subject to Payment Card Industry (PCI) compliance.\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-item-type-group: \"\"\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: tok_1Ne36S2eZvKYlo2CsVv8aURt\n    Tags:\n      items:\n        $ref: '#/components/schemas/Tag'\n      type: array\n    Tag:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: \"A tag, keyword or label.\"\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-item-type-group: \"\"\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value: {}\n    Comments:\n      items:\n        $ref: '#/components/schemas/Comment'\n      type: array\n    Comment:\n      description: \"Date, source and content of a comment\"\n      properties:\n        CommentID:\n          $ref: '#/components/schemas/CommentID'\n        CommentDate:\n          $ref: '#/components/schemas/CommentDate'\n        CommentText:\n          $ref: '#/components/schemas/CommentText'\n        Contacts:\n          $ref: '#/components/schemas/Contacts'\n        Tags:\n          $ref: '#/components/schemas/Tags'\n        Scope:\n          $ref: '#/components/schemas/Scope'\n      type: object\n    CommentID:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: The UUID of a comment\n        type: object\n        x-ob-item-type: UUIDItemType\n        x-ob-item-type-group: \"\"\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: 82b2f9ea-0a88-464f-80ef-6712662eef68\n    CommentDate:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: Date of a comment\n        type: object\n        x-ob-item-type: DateTimeItemType\n        x-ob-item-type-group: \"\"\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: 2022-12-28T19:49:26Z\n    CommentText:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: Content text of a comment\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-item-type-group: \"\"\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: 10 gauge wire is required for this project.\n    Scope:\n      description: 'A generic object containing information describing where the aforementioned\n        data applies to. '\n      properties:\n        ScopeID:\n          $ref: '#/components/schemas/ScopeID'\n        ScopeType:\n          $ref: '#/components/schemas/ScopeType'\n        FileFolderURL:\n          $ref: '#/components/schemas/FileFolderURL'\n        Location:\n          $ref: '#/components/schemas/Location'\n        Description:\n          $ref: '#/components/schemas/Description'\n      type: object\n      x-ob-usage-tips: \"Scope is an element designed to allow Orange Button users\\\n        \\ to add context to the object it is included in. For example, if a user is\\\n        \\ trying to share BillOfMaterials information for a given Job, they would\\\n        \\ be able to share only the BillOfMaterials object and provide context by\\\n        \\ setting the JobID in the ScopeID field and setting the ScopeType to Job.\\\n        \\ By following this approach, users can narrow payloads to the specific target\\\n        \\ data while contributing the necessary context that allows the Orange Button\\\n        \\ Taxonomy to be so powerful. \"\n    ScopeID:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: \"An identifier for the device, system, portfolio, region, etc.\"\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-item-type-group: \"\"\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: 82b2f9ea-0a88-464f-80ef-6712662eef68\n    ScopeType:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: The scope where data applies.\n        type: object\n        x-ob-item-type: ScopeTypeItemType\n        x-ob-item-type-group: \"\"\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: Site\n    PaymentMethodName:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: The name of the account that is meaningful to the person making\n          the payment. This does not need to be unique or meaningful to anyone else.\n          This value is not subject to Payment Card Industry (PCI) compliance.\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-item-type-group: \"\"\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: MyBusinessCard\n    EntityRole:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: Services or function provided by this entity.\n        type: object\n        x-ob-item-type: EntityRoleItemType\n        x-ob-item-type-group: \"\"\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: AuthorityHavingJurisdiction\n    CertificationAgencyName:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: The name of the certification name\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: ISO\n        x-ob-item-type-group: \"\"\n    CertificationDate:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: The date that certification was awarded to product.\n        type: object\n        x-ob-item-type: DateItemType\n        x-ob-item-type-group: \"\"\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: 2022-3-18\n    CertificationExpirationDate:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: The expiration date of a certification.\n        type: object\n        x-ob-item-type: DateItemType\n        x-ob-item-type-group: \"\"\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: 2022-4-21\n    CertificationName:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: The name of the certification.\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-item-type-group: \"\"\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: SunSpec Modbus for IEEE 1547\n    CertificateValue:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: The document identifier of a certification.\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-item-type-group: \"\"\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: ABC-123\n    CertificationStandard:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: A value from the enumerated list of the possible standards that\n          a product can have.\n        type: object\n        x-ob-item-type: StandardTypeItemType\n        x-ob-item-type-group: \"\"\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: IEC61215_2016\n    TestLab:\n      allOf:\n      - $ref: '#/components/schemas/Entity'\n      - description: 'A laboratory that performs testing to standards. Implementation\n          partner rather than the certifier of the standard. '\n        properties:\n          TestLabName:\n            $ref: '#/components/schemas/TestLabName'\n        type: object\n    TestLabName:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: Name of the TestLab\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-item-type-group: \"\"\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: UL\n    Dimension:\n      description: Dimensions of an object\n      properties:\n        Length:\n          $ref: '#/components/schemas/Length'\n        Width:\n          $ref: '#/components/schemas/Width'\n        Height:\n          $ref: '#/components/schemas/Height'\n        Mass:\n          $ref: '#/components/schemas/Mass'\n        Weight:\n          $ref: '#/components/schemas/Weight'\n      type: object\n    Length:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementNumber'\n      - description: The length of the parent object\n        type: object\n        x-ob-item-type: LengthItemType\n        x-ob-usage-tips: For irregularly shaped objects use this as a bounding box\n          dimension.\n        x-ob-sample-value:\n          Unit: mm\n          Value: 1048\n        x-ob-item-type-group: \"\"\n    Width:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementNumber'\n      - description: The width of the parent object\n        type: object\n        x-ob-item-type: LengthItemType\n        x-ob-usage-tips: For irregularly shaped objects use this as a bounding box\n          dimension.\n        x-ob-sample-value:\n          Unit: mm\n          Value: 1765\n        x-ob-item-type-group: \"\"\n    Height:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementNumber'\n      - description: The height of the parent object\n        type: object\n        x-ob-item-type: LengthItemType\n        x-ob-usage-tips: For irregularly shaped objects use this as a bounding box\n          dimension\n        x-ob-sample-value:\n          Unit: mm\n          Value: 35\n        x-ob-item-type-group: \"\"\n    Mass:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementNumber'\n      - description: 'The mass of the parent object. '\n        type: object\n        x-ob-item-type: MassItemType\n        x-ob-usage-tips: Apply appropriate engineering consistency with related object\n          Weight.\n        x-ob-sample-value:\n          Unit: kg\n          Value: 20\n        x-ob-item-type-group: MassUnitItemType\n    Weight:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementNumber'\n      - description: The weight of the parent object\n        type: object\n        x-ob-item-type: MassItemType\n        x-ob-usage-tips: Use appropriate engineering consistency with related object\n          Mass\n        x-ob-sample-value:\n          Unit: lb\n          Value: 9.81\n        x-ob-item-type-group: \"\"\n    Packages:\n      items:\n        $ref: '#/components/schemas/Package'\n      type: array\n    Package:\n      description: Elements describing a package\n      properties:\n        Dimension:\n          $ref: '#/components/schemas/Dimension'\n        Description:\n          $ref: '#/components/schemas/Description'\n        Quantity:\n          $ref: '#/components/schemas/Quantity'\n      type: object\n    Quantity:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementInteger'\n      - description: A quantity\n        type: object\n        x-ob-item-type: IntegerItemType\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: 10\n        x-ob-item-type-group: \"\"\n    SubstituteProducts:\n      items:\n        $ref: '#/components/schemas/SubstituteProduct'\n      type: array\n    SubstituteProduct:\n      description: A product that can serve as a replacement for a given Product.\n      properties:\n        ProdCode:\n          $ref: '#/components/schemas/ProdCode'\n        ProdID:\n          $ref: '#/components/schemas/ProdID'\n        ProdMfr:\n          $ref: '#/components/schemas/ProdMfr'\n        ProdName:\n          $ref: '#/components/schemas/ProdName'\n        ProdType:\n          $ref: '#/components/schemas/ProdType'\n      type: object\n    ManufacturerUPC:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: 'Universal Product Code (UPC) (technically refers to UPC-A) consists\n          of 12 digits that are uniquely assigned to each trade item. This value is\n          assigned by the manufacturer of the trade item/product. '\n        type: object\n        x-ob-item-type: StringItemType\n        x-ob-item-type-group: \"\"\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: \"036000291452\"\n    AmountExtended:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementNumber'\n      - description: The total amount of the individual line item calculated by multiplying\n          Quantity by UnitPrice\n        type: object\n        x-ob-item-type: MonetaryItemType\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Unit: USD\n          Value: 1000\n        x-ob-item-type-group: \"\"\n    CapacityDC:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementNumber'\n      - description: Capacity in DC at Standard Test Conditions\n        type: object\n        x-ob-item-type: PowerItemType\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Unit: kW\n          Value: 11.5\n        x-ob-item-type-group: OBElectricalPower\n    PVStringID:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: A UUID for identifying a specific string\n        type: object\n        x-ob-item-type: UUIDItemType\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: 7a00622c-6bb0-4a3f-c6da-73090958db3a\n        x-ob-item-type-group: \"\"\n    ModuleOrientation:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: \"The orientation of a module, can be Landscape or Portrait\"\n        type: object\n        x-ob-item-type: ModuleOrientationItemType\n        x-ob-item-type-group: \"\"\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value: {}\n    Area:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementNumber'\n      - description: Area\n        type: object\n        x-ob-item-type: AreaItemType\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Unit: sqft\n          Value: 10\n        x-ob-item-type-group: \"\"\n    RoofPlaneID:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: The UUID of the roofplane\n        type: object\n        x-ob-item-type: UUIDItemType\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: 7a00622c-6bb0-4a3f-c6da-73090958db3a\n        x-ob-item-type-group: \"\"\n    PVArrayID:\n      allOf:\n      - $ref: '#/components/schemas/TaxonomyElementString'\n      - description: A UUID for identifying a specific array\n        type: object\n        x-ob-item-type: UUIDItemType\n        x-ob-item-type-group: \"\"\n        x-ob-usage-tips: \"\"\n        x-ob-sample-value:\n          Value: 7a00622c-6bb0-4a3f-c6da-73090958db3a\nx-ob-item-types: {}\nx-ob-item-type-group: {}\n",
  "appDescription" : "Derived by extending the OB OpenAPI Taxonomy 1.1.7",
  "contextPath" : "",
  "licenseName" : "NoLicense",
  "net80OrLater" : true,
  "apiInfo" : {
    "apis" : [ ]
  },
  "supportsFileParameters" : true,
  "modelDocPath" : "docs/",
  "net48OrLater" : true,
  "useSourceGeneration" : false,
  "generateWebhooks" : false,
  "lambdaCref" : { },
  "x-mcs-sdk" : "4.6-api",
  "netstandard2.1" : false,
  "net6.0" : false,
  "nrt!" : "!",
  "netstandard2.0" : false,
  "openAPI" : {
    "openapi" : "3.0.1",
    "info" : {
      "title" : "SUPERNOVA Interoperation API 1.0 Data Model",
      "description" : "Derived by extending the OB OpenAPI Taxonomy 1.1.7",
      "version" : "1.0"
    },
    "servers" : [ {
      "url" : "/"
    } ],
    "paths" : { },
    "components" : {
      "schemas" : {
        "Info" : {
          "type" : "object",
          "properties" : {
            "Name" : {
              "type" : "string",
              "description" : "Name of current service exposed"
            },
            "Source" : {
              "$ref" : "#/components/schemas/PlatformIdentifier"
            },
            "Description" : {
              "type" : "string",
              "description" : "...TODO..."
            },
            "Version" : {
              "type" : "string",
              "description" : "...TODO..."
            },
            "SupportedDocuments" : {
              "type" : "array",
              "description" : "...TODO...",
              "items" : {
                "$ref" : "#/components/schemas/SupportedDocument"
              }
            }
          },
          "description" : "...TODO..."
        },
        "SupportedDocument" : {
          "type" : "object",
          "properties" : {
            "Description" : {
              "type" : "string"
            },
            "DocumentType" : {
              "type" : "string",
              "description" : "document type",
              "x-ob-usate-tips" : "text/csv"
            }
          },
          "description" : "Document supported"
        },
        "Device" : {
          "type" : "object",
          "description" : "...TODO...",
          "allOf" : [ {
            "$ref" : "#/components/schemas/Device_1"
          }, {
            "type" : "object",
            "properties" : {
              "Locations" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/Location"
                }
              }
            },
            "description" : "State of a Province of the mailing or physical address."
          } ]
        },
        "PVArray" : {
          "type" : "object",
          "description" : "...TODO...",
          "allOf" : [ {
            "$ref" : "#/components/schemas/PVArray_1"
          }, {
            "type" : "object",
            "properties" : {
              "Locations" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/Location"
                }
              }
            },
            "description" : "State of a Province of the mailing or physical address."
          } ]
        },
        "PVString" : {
          "type" : "object",
          "description" : "...TODO...",
          "allOf" : [ {
            "$ref" : "#/components/schemas/PVString_1"
          }, {
            "type" : "object",
            "properties" : {
              "Locations" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/Location"
                }
              }
            },
            "description" : "State of a Province of the mailing or physical address."
          } ]
        },
        "PVSystem" : {
          "type" : "object",
          "description" : "...TODO...",
          "allOf" : [ {
            "$ref" : "#/components/schemas/PVString_1"
          }, {
            "type" : "object",
            "properties" : {
              "Locations" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/Location"
                }
              }
            },
            "description" : "State of a Province of the mailing or physical address."
          } ]
        },
        "Connection" : {
          "type" : "object",
          "properties" : {
            "ConnectionId" : {
              "$ref" : "#/components/schemas/ConnectionId"
            },
            "ConnectionType" : {
              "$ref" : "#/components/schemas/ConnectionType"
            },
            "FromDeviceId" : {
              "$ref" : "#/components/schemas/FromDeviceId"
            },
            "ToDeviceId" : {
              "$ref" : "#/components/schemas/ToDeviceId"
            }
          },
          "description" : "...TODO..."
        },
        "Document" : {
          "type" : "object",
          "properties" : {
            "DocumentId" : {
              "$ref" : "#/components/schemas/DocumentId"
            },
            "DocumentName" : {
              "$ref" : "#/components/schemas/DocumentName"
            },
            "DocumentType" : {
              "$ref" : "#/components/schemas/DocumentType"
            },
            "DocumentUrl" : {
              "$ref" : "#/components/schemas/DocumentUrl"
            },
            "DocumentDate" : {
              "$ref" : "#/components/schemas/DocumentDate"
            }
          },
          "description" : "...TODO..."
        },
        "ConnectionId" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "...TODO...",
            "x-ob-item-type" : "StringItemType",
            "x-ob-usage-tips" : "",
            "x-ob-item-type-group" : ""
          } ]
        },
        "ConnectionType" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "...TODO...",
            "x-ob-item-type" : "StringItemType",
            "x-ob-usage-tips" : "",
            "x-ob-item-type-group" : ""
          } ]
        },
        "FromDeviceId" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "...TODO...",
            "x-ob-item-type" : "StringItemType",
            "x-ob-usage-tips" : "",
            "x-ob-item-type-group" : ""
          } ]
        },
        "ToDeviceId" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "...TODO...",
            "x-ob-item-type" : "StringItemType",
            "x-ob-usage-tips" : "",
            "x-ob-item-type-group" : ""
          } ]
        },
        "DocumentId" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "...TODO...",
            "x-ob-item-type" : "StringItemType",
            "x-ob-usage-tips" : "",
            "x-ob-item-type-group" : ""
          } ]
        },
        "DocumentName" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "...TODO...",
            "x-ob-item-type" : "StringItemType",
            "x-ob-usage-tips" : "",
            "x-ob-item-type-group" : ""
          } ]
        },
        "DocumentType" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "...TODO...",
            "x-ob-item-type" : "StringItemType",
            "x-ob-usage-tips" : "",
            "x-ob-item-type-group" : ""
          } ]
        },
        "DocumentUrl" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "...TODO...",
            "x-ob-item-type" : "StringItemType",
            "x-ob-usage-tips" : "",
            "x-ob-item-type-group" : ""
          } ]
        },
        "DocumentDate" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "...TODO...",
            "x-ob-item-type" : "StringItemType",
            "x-ob-usage-tips" : "",
            "x-ob-item-type-group" : ""
          } ]
        },
        "GatewayHook" : {
          "type" : "object",
          "properties" : {
            "Name" : {
              "type" : "string",
              "nullable" : true
            },
            "Parameters" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string"
              },
              "nullable" : true
            }
          }
        },
        "GatewayHookExecution" : {
          "type" : "object",
          "properties" : {
            "Id" : {
              "type" : "string",
              "format" : "uuid"
            },
            "HookName" : {
              "type" : "string"
            },
            "Paramenters" : {
              "type" : "object",
              "additionalProperties" : { },
              "nullable" : true
            },
            "DateTime" : {
              "type" : "string",
              "format" : "date-time"
            },
            "Status" : {
              "$ref" : "#/components/schemas/HookStatus"
            },
            "Result" : {
              "$ref" : "#/components/schemas/GatewayHookResult"
            }
          }
        },
        "GatewayHookResult" : {
          "type" : "object",
          "properties" : {
            "ExecutionId" : {
              "type" : "string",
              "format" : "uuid"
            },
            "IsSuccessful" : {
              "type" : "boolean"
            },
            "ResponseUrl" : {
              "type" : "string",
              "nullable" : true
            },
            "DateTime" : {
              "type" : "string",
              "format" : "date-time"
            },
            "ExpirationTime" : {
              "type" : "string",
              "format" : "date-time",
              "nullable" : true
            }
          }
        },
        "HookStatus" : {
          "type" : "string",
          "enum" : [ "Created", "Execution", "End" ]
        },
        "PlatformIdentifier" : {
          "type" : "string",
          "description" : "Preliminary platform list. To be extended with new products.",
          "enum" : [ "ANTARES", "SOLARGAIN", "SYNAPTIQ", "other" ]
        },
        "Device_1" : {
          "type" : "object",
          "properties" : {
            "SerialNum" : {
              "$ref" : "#/components/schemas/SerialNum"
            },
            "Description" : {
              "$ref" : "#/components/schemas/Description"
            },
            "URL" : {
              "$ref" : "#/components/schemas/URL"
            },
            "ProdCode" : {
              "$ref" : "#/components/schemas/ProdCode"
            },
            "ProdID" : {
              "$ref" : "#/components/schemas/ProdID"
            },
            "Firmware" : {
              "$ref" : "#/components/schemas/Firmware"
            },
            "MaintDateLast" : {
              "$ref" : "#/components/schemas/MaintDateLast"
            },
            "InServiceDate" : {
              "$ref" : "#/components/schemas/InServiceDate"
            },
            "Calibration" : {
              "$ref" : "#/components/schemas/Calibration"
            },
            "Warranties" : {
              "$ref" : "#/components/schemas/Warranties"
            },
            "DeviceType" : {
              "$ref" : "#/components/schemas/DeviceType"
            },
            "Components" : {
              "$ref" : "#/components/schemas/Components"
            },
            "DeviceName" : {
              "$ref" : "#/components/schemas/DeviceName"
            },
            "DeviceUUID" : {
              "$ref" : "#/components/schemas/DeviceUUID"
            },
            "CryptographicKeyIDs" : {
              "$ref" : "#/components/schemas/CryptographicKeyIDs"
            },
            "IsMaintainable" : {
              "$ref" : "#/components/schemas/IsMaintainable"
            },
            "Nodes" : {
              "$ref" : "#/components/schemas/Nodes"
            }
          },
          "description" : "A singular instance of a Product, usually with a serial number or other unique identifier.",
          "x-parent" : true
        },
        "SerialNum" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "Manufacturer's serial number of a device.",
            "x-ob-item-type" : "StringItemType",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : { },
            "x-ob-item-type-group" : ""
          } ]
        },
        "TaxonomyElementString" : {
          "type" : "object",
          "properties" : {
            "Value" : {
              "$ref" : "#/components/schemas/ValueString"
            },
            "Unit" : {
              "$ref" : "#/components/schemas/Unit"
            },
            "Decimals" : {
              "$ref" : "#/components/schemas/Decimals"
            },
            "Precision" : {
              "$ref" : "#/components/schemas/Precision"
            },
            "StartTime" : {
              "$ref" : "#/components/schemas/StartTime"
            },
            "EndTime" : {
              "$ref" : "#/components/schemas/EndTime"
            }
          },
          "x-ob-usage-tips" : "",
          "x-parent" : true
        },
        "ValueString" : {
          "type" : "string",
          "description" : "Value for the instance element",
          "x-ob-usage-tips" : ""
        },
        "Unit" : {
          "type" : "string",
          "description" : "Unit of the instance element",
          "x-ob-usage-tips" : ""
        },
        "Decimals" : {
          "type" : "integer",
          "description" : "Decimals of the instance element",
          "x-ob-usage-tips" : ""
        },
        "Precision" : {
          "type" : "integer",
          "description" : "Precision of the instance element",
          "x-ob-usage-tips" : ""
        },
        "StartTime" : {
          "type" : "string",
          "description" : "Start time of a measurement period for the instance element",
          "x-ob-usage-tips" : "StartTime can be used to note the start of a window of time that a value represents, where EndTime closes time period. In instances where a value represents a snapshot, or single moment in time, StartTime can be used to represent that exact moment in time. "
        },
        "EndTime" : {
          "type" : "string",
          "description" : "End time of a measurement period for the instance element",
          "x-ob-usage-tips" : ""
        },
        "Description" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "Generic Text field used in fields to provide more detail",
            "x-ob-item-type" : "StringItemType",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "A description for generic commentary on a object. Not intended for machine analysis"
            },
            "x-ob-item-type-group" : ""
          } ]
        },
        "URL" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "A URL string",
            "x-ob-item-type" : "StringItemType",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "https://ahjregistry.sunspec.org/#/ahj-search"
            },
            "x-ob-item-type-group" : ""
          } ]
        },
        "ProdCode" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "A product code is a standardized, unique human-readable identifier that is compact, and can be easily parsed. It consists of an entity code concatenated to a product specific identification string, separated by a hyphen. The format of a product code is: [EntityCode]-[ProductString], e.g., ôHANWH-Q_PEAK_DUO_BLK_G10__AC_365ö. A product string is comprised of upper-case letters, numbers, and underscores. Any character that is not a letter or number is a special character and will be replaced by an underscore. All letter characters will be upper case. To avoid clashes between identical product codes, an additional hyphen and an integer 1, 2, 3, ..., is appended, e.g. {ProdCode}-{incremental number}",
            "x-ob-item-type" : "StringItemType",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "HANWH-Q_PEAK_DUO_BLK_G10__AC_365"
            },
            "x-ob-item-type-group" : ""
          } ]
        },
        "ProdID" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "Unique identifier for the Product.",
            "x-ob-item-type" : "UUIDItemType",
            "x-ob-item-type-group" : "",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "d522ff95-43c2-41e5-83e1-911c1f3ad81f"
            }
          } ]
        },
        "Firmware" : {
          "type" : "object",
          "properties" : {
            "FirmwareVersion" : {
              "$ref" : "#/components/schemas/FirmwareVersion"
            },
            "Checksum" : {
              "$ref" : "#/components/schemas/Checksum"
            }
          },
          "description" : "Permanent software programmed into a read-only memory."
        },
        "FirmwareVersion" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "Firmware version ",
            "x-ob-item-type" : "StringItemType",
            "x-ob-item-type-group" : "",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "A.4.0.B"
            }
          } ]
        },
        "Checksum" : {
          "type" : "object",
          "properties" : {
            "ChecksumKey" : {
              "$ref" : "#/components/schemas/ChecksumKey"
            },
            "ChecksumType" : {
              "$ref" : "#/components/schemas/ChecksumType"
            },
            "ChecksumDetail" : {
              "$ref" : "#/components/schemas/ChecksumDetail"
            }
          },
          "description" : "An object that describes the key, type and supporting information related to employing Checksums to manage data accuracy. "
        },
        "ChecksumKey" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "The value used to validate the accuracy of data through the use of a Checksum Algorithm.",
            "x-ob-item-type" : "StringItemType",
            "x-ob-item-type-group" : "",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "120EA8A25E5D487BF68B5F7096440019"
            }
          } ]
        },
        "ChecksumType" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "Type of Checksum that is employed by Firmware to detect errors and verify data integrity.",
            "x-ob-item-type" : "ChecksumTypeItemType",
            "x-ob-item-type-group" : "",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "CRC"
            }
          } ]
        },
        "ChecksumDetail" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "Supporting information used to provide additional context to the type of Checksum algorithm used to validate data.",
            "x-ob-item-type" : "StringItemType",
            "x-ob-item-type-group" : "",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : { }
          } ]
        },
        "MaintDateLast" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "Date of latest maintenance activity",
            "x-ob-item-type" : "DateItemType",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : { },
            "x-ob-item-type-group" : ""
          } ]
        },
        "InServiceDate" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "Date that a device is first placed in service.",
            "x-ob-item-type" : "DateTimeItemType",
            "x-ob-item-type-group" : "",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : { }
          } ]
        },
        "Calibration" : {
          "type" : "object",
          "properties" : {
            "CalibrationDateLast" : {
              "$ref" : "#/components/schemas/CalibrationDateLast"
            },
            "CalibrationMeth" : {
              "$ref" : "#/components/schemas/CalibrationMeth"
            }
          },
          "x-ob-usage-tips" : ""
        },
        "CalibrationDateLast" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "Date of last calibration",
            "x-ob-item-type" : "DateItemType",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "22-02-22"
            },
            "x-ob-item-type-group" : ""
          } ]
        },
        "CalibrationMeth" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "Description of calibration method for an instrument.",
            "x-ob-item-type" : "StringItemType",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : { },
            "x-ob-item-type-group" : ""
          } ]
        },
        "Warranties" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/components/schemas/Warranty"
          }
        },
        "Warranty" : {
          "type" : "object",
          "properties" : {
            "WarrantyType" : {
              "$ref" : "#/components/schemas/WarrantyType"
            },
            "FileFolderURL" : {
              "$ref" : "#/components/schemas/FileFolderURL"
            },
            "Description" : {
              "$ref" : "#/components/schemas/Description"
            },
            "WarrantyID" : {
              "$ref" : "#/components/schemas/WarrantyID"
            },
            "WarrantyName" : {
              "$ref" : "#/components/schemas/WarrantyName"
            },
            "WarrantyDuration" : {
              "$ref" : "#/components/schemas/WarrantyDuration"
            },
            "WarrantyEffectiveDate" : {
              "$ref" : "#/components/schemas/WarrantyEffectiveDate"
            },
            "WarrantyExpirationDate" : {
              "$ref" : "#/components/schemas/WarrantyExpirationDate"
            }
          },
          "description" : "Guarantee of minimum quality level"
        },
        "WarrantyType" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "Classification of the Warranty. What type of Warranty is it?",
            "x-ob-item-type" : "WarrantyItemType",
            "x-ob-item-type-group" : "",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "Power"
            }
          } ]
        },
        "FileFolderURL" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "A generic URL to a file folder or a single file for transmitting documents",
            "x-ob-item-type" : "StringItemType",
            "x-ob-usage-tips" : "Consider the permissions settings on any documents noted within the FileFolderURL object. User may adjust permissions to enable expanded access to documentation. For example, when using Google Docs, have permissions allow access to any user with the URL.",
            "x-ob-sample-value" : {
              "Value" : "https://www.lg.com/us/business/download/resources/BT00002151/[Print]%20Neon_2_60_BF_80308_ck_FRD_v4.pdf"
            },
            "x-ob-item-type-group" : ""
          } ]
        },
        "WarrantyID" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "Universally Unique Identifier for the Warranty",
            "x-ob-item-type" : "UUIDItemType",
            "x-ob-item-type-group" : "",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "63e32227-7a31-4a0c-a715-20d46315cc9e"
            }
          } ]
        },
        "WarrantyName" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "Human Readable Name for the Warranty",
            "x-ob-item-type" : "StringItemType",
            "x-ob-item-type-group" : "",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "Standard REC 25 yr Warranty"
            }
          } ]
        },
        "WarrantyDuration" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementInteger"
          }, {
            "type" : "object",
            "description" : "How long is the Warranty Valid For? ",
            "x-ob-item-type" : "DurationItemType",
            "x-ob-item-type-group" : "",
            "x-ob-usage-tips" : "Enter as integer; Specify Units.",
            "x-ob-sample-value" : {
              "Value" : 25,
              "Unit" : "Y"
            }
          } ]
        },
        "TaxonomyElementInteger" : {
          "type" : "object",
          "properties" : {
            "Value" : {
              "$ref" : "#/components/schemas/ValueInteger"
            },
            "Unit" : {
              "$ref" : "#/components/schemas/Unit"
            },
            "Decimals" : {
              "$ref" : "#/components/schemas/Decimals"
            },
            "Precision" : {
              "$ref" : "#/components/schemas/Precision"
            },
            "StartTime" : {
              "$ref" : "#/components/schemas/StartTime"
            },
            "EndTime" : {
              "$ref" : "#/components/schemas/EndTime"
            }
          },
          "x-ob-usage-tips" : "",
          "x-parent" : true
        },
        "ValueInteger" : {
          "type" : "integer",
          "description" : "Value for the instance element",
          "x-ob-usage-tips" : ""
        },
        "WarrantyEffectiveDate" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "Date the Warranty Comes Into Force",
            "x-ob-item-type" : "DateItemType",
            "x-ob-item-type-group" : "",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "2012-07-16"
            }
          } ]
        },
        "WarrantyExpirationDate" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "Date the Warranty Is No Longer in Force",
            "x-ob-item-type" : "DateItemType",
            "x-ob-item-type-group" : "",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "2037-07-16"
            }
          } ]
        },
        "DeviceType" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "The type of a device",
            "x-ob-item-type" : "DeviceTypeItemType",
            "x-ob-item-type-group" : "",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : { }
          } ]
        },
        "Components" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/components/schemas/Component"
          }
        },
        "Component" : {
          "type" : "object",
          "properties" : {
            "ComponentType" : {
              "$ref" : "#/components/schemas/ComponentType"
            },
            "ComponentName" : {
              "$ref" : "#/components/schemas/ComponentName"
            },
            "ComponentUUID" : {
              "$ref" : "#/components/schemas/ComponentUUID"
            },
            "IsMaintainable" : {
              "$ref" : "#/components/schemas/IsMaintainable"
            },
            "Nodes" : {
              "$ref" : "#/components/schemas/Nodes"
            },
            "Description" : {
              "$ref" : "#/components/schemas/Description"
            }
          },
          "description" : "A part or component of a Device"
        },
        "ComponentType" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "The type of a Component",
            "x-ob-item-type" : "ComponentTypeItemType",
            "x-ob-item-type-group" : "",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : { }
          } ]
        },
        "ComponentName" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "A user-defined name for a Component",
            "x-ob-item-type" : "StringItemType",
            "x-ob-item-type-group" : "",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : { }
          } ]
        },
        "ComponentUUID" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "An identifier for a component",
            "x-ob-item-type" : "UUIDItemType",
            "x-ob-item-type-group" : "",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : { }
          } ]
        },
        "IsMaintainable" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementBoolean"
          }, {
            "type" : "object",
            "description" : "True if an Assembly, Device or Component has parts that can be serviced or replaced without violating a warranty.",
            "x-ob-item-type" : "BooleanItemType",
            "x-ob-item-type-group" : "",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : { }
          } ]
        },
        "TaxonomyElementBoolean" : {
          "type" : "object",
          "properties" : {
            "Value" : {
              "$ref" : "#/components/schemas/ValueBoolean"
            },
            "Unit" : {
              "$ref" : "#/components/schemas/Unit"
            },
            "Decimals" : {
              "$ref" : "#/components/schemas/Decimals"
            },
            "Precision" : {
              "$ref" : "#/components/schemas/Precision"
            },
            "StartTime" : {
              "$ref" : "#/components/schemas/StartTime"
            },
            "EndTime" : {
              "$ref" : "#/components/schemas/EndTime"
            }
          },
          "x-ob-usage-tips" : "",
          "x-parent" : true
        },
        "ValueBoolean" : {
          "type" : "boolean",
          "description" : "Value for the instance element",
          "x-ob-usage-tips" : ""
        },
        "Nodes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/components/schemas/Node"
          }
        },
        "Node" : {
          "type" : "object",
          "properties" : {
            "NodeUUID" : {
              "$ref" : "#/components/schemas/NodeUUID"
            },
            "Description" : {
              "$ref" : "#/components/schemas/Description"
            },
            "PVColladaID" : {
              "$ref" : "#/components/schemas/PVColladaID"
            },
            "PVColladaFileID" : {
              "$ref" : "#/components/schemas/PVColladaFileID"
            }
          },
          "description" : "A node is an element of a PVCollada file that describes geospatial positions and mechanical relationships."
        },
        "NodeUUID" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "A UUID for a Node, which is an element of a topology.",
            "x-ob-item-type" : "UUIDItemType",
            "x-ob-item-type-group" : "",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : { }
          } ]
        },
        "PVColladaID" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "An identifier for an object in a PVCollada file.",
            "x-ob-item-type" : "StringItemType",
            "x-ob-item-type-group" : "",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : { }
          } ]
        },
        "PVColladaFileID" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "An identifier for a PVCollada file.",
            "x-ob-item-type" : "StringItemType",
            "x-ob-item-type-group" : "",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : { }
          } ]
        },
        "DeviceName" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "A user-defined name for a device",
            "x-ob-item-type" : "StringItemType",
            "x-ob-item-type-group" : "",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : { }
          } ]
        },
        "DeviceUUID" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "UUID for an individual piece of equipment.",
            "x-ob-item-type" : "UUIDItemType",
            "x-ob-usage-tips" : "Use SerialNum for the manufacturer's serial number.",
            "x-ob-sample-value" : { },
            "x-ob-item-type-group" : ""
          } ]
        },
        "CryptographicKeyIDs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/components/schemas/CryptographicKeyID"
          }
        },
        "CryptographicKeyID" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "This concept provides a cryptographically secure identity for a device and originates from the distributed ledger or blockchain technologies. The Cryptographic Key ID is derived from an asymmetric private/public key pair, typically generated on the device itself and stored securely, preferably in a hardware-secured environment like a Secure Element (SE). Private keys remain within this secure environment to prevent exposure. The CryptographicKeyID consists of a type identifier, the hash output of public-key-material, and optionally, a CRC check for error detection, ensuring uniqueness and integrity.",
            "x-ob-item-type" : "StringItemType",
            "x-ob-item-type-group" : "",
            "x-ob-usage-tips" : "For more info see: https://github.com/Lumian-Foundation/ckid-documentation/tree/main Lumian Foundation is a not-pro-profit Standards organization spun off from SunSpec.",
            "x-ob-sample-value" : {
              "Value" : "1E99423A4ED27608A15A2616A2B0E9E52CED330AC530EDCC32C8FFC6A526AEDD"
            }
          } ]
        },
        "Location" : {
          "type" : "object",
          "properties" : {
            "Latitude" : {
              "$ref" : "#/components/schemas/Latitude"
            },
            "Longitude" : {
              "$ref" : "#/components/schemas/Longitude"
            },
            "Altitude" : {
              "$ref" : "#/components/schemas/Altitude"
            },
            "Elevation" : {
              "$ref" : "#/components/schemas/Elevation"
            },
            "LocationType" : {
              "$ref" : "#/components/schemas/LocationType"
            },
            "LocationID" : {
              "$ref" : "#/components/schemas/LocationID"
            },
            "Description" : {
              "$ref" : "#/components/schemas/Description"
            },
            "LocationDeterminationMethod" : {
              "$ref" : "#/components/schemas/LocationDeterminationMethod"
            }
          },
          "description" : "A location is defined by Latitude, Longitude and Altitude.",
          "x-ob-usage-tips" : ""
        },
        "Latitude" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementNumber"
          }, {
            "type" : "object",
            "description" : "Decimal value of latitude of the physical site in degrees.  Positive North of the Equator.  Negative South of the Equator",
            "x-ob-item-type" : "PlaneAngleItemType",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Unit" : "Degree",
              "Value" : 45.7783517
            },
            "x-ob-item-type-group" : ""
          } ]
        },
        "TaxonomyElementNumber" : {
          "type" : "object",
          "properties" : {
            "Value" : {
              "$ref" : "#/components/schemas/ValueNumber"
            },
            "Unit" : {
              "$ref" : "#/components/schemas/Unit"
            },
            "Decimals" : {
              "$ref" : "#/components/schemas/Decimals"
            },
            "Precision" : {
              "$ref" : "#/components/schemas/Precision"
            },
            "StartTime" : {
              "$ref" : "#/components/schemas/StartTime"
            },
            "EndTime" : {
              "$ref" : "#/components/schemas/EndTime"
            }
          },
          "x-ob-usage-tips" : "",
          "x-parent" : true
        },
        "ValueNumber" : {
          "type" : "number",
          "description" : "Value for the instance element",
          "x-ob-usage-tips" : ""
        },
        "Longitude" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementNumber"
          }, {
            "type" : "object",
            "description" : "Decimal value of longitude of the physical site in degrees.  Positive east of the Prime Meridian.  Negative west of the Prime Meridian.  North America is negative..",
            "x-ob-item-type" : "PlaneAngleItemType",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Unit" : "Degree",
              "Value" : -108.5203597
            },
            "x-ob-item-type-group" : ""
          } ]
        },
        "Altitude" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementNumber"
          }, {
            "type" : "object",
            "description" : "The height of ground level at a location relative to sea level.",
            "x-ob-item-type" : "LengthItemType",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Unit" : "ft",
              "Value" : 3123
            },
            "x-ob-item-type-group" : ""
          } ]
        },
        "Elevation" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementNumber"
          }, {
            "type" : "object",
            "description" : "Height from ground level.",
            "x-ob-item-type" : "LengthItemType",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Unit" : "ft",
              "Value" : 20
            },
            "x-ob-item-type-group" : ""
          } ]
        },
        "LocationType" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "The type of location being specified",
            "x-ob-item-type" : "LocationTypeItemType",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "GeneralProximity"
            },
            "x-ob-item-type-group" : ""
          } ]
        },
        "LocationID" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "The identifier of the location.",
            "x-ob-item-type" : "StringItemType",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "63e32227-7a31-4a0c-a715-20d46315cc9e"
            },
            "x-ob-item-type-group" : ""
          } ]
        },
        "LocationDeterminationMethod" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "Method of the determining the location",
            "x-ob-item-type" : "LocationDeterminationMethodItemType",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "AddressGeocoding"
            },
            "x-ob-item-type-group" : ""
          } ]
        },
        "PVArray_1" : {
          "type" : "object",
          "properties" : {
            "PVStrings" : {
              "$ref" : "#/components/schemas/PVStrings"
            },
            "Orientation" : {
              "$ref" : "#/components/schemas/Orientation"
            },
            "Area" : {
              "$ref" : "#/components/schemas/Area"
            },
            "RoofPlaneID" : {
              "$ref" : "#/components/schemas/RoofPlaneID"
            },
            "FileFolderURL" : {
              "$ref" : "#/components/schemas/FileFolderURL"
            },
            "Description" : {
              "$ref" : "#/components/schemas/Description"
            },
            "CapacityDC" : {
              "$ref" : "#/components/schemas/CapacityDC"
            },
            "ProductLineItems" : {
              "$ref" : "#/components/schemas/ProductLineItems"
            },
            "Devices" : {
              "$ref" : "#/components/schemas/Devices"
            },
            "PVArrayID" : {
              "$ref" : "#/components/schemas/PVArrayID"
            },
            "ModuleOrientation" : {
              "$ref" : "#/components/schemas/ModuleOrientation"
            }
          },
          "description" : "An array of modules within a PVSystem that have a common orientation.",
          "x-parent" : true
        },
        "PVStrings" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/components/schemas/PVString_1"
          }
        },
        "PVString_1" : {
          "type" : "object",
          "properties" : {
            "Devices" : {
              "$ref" : "#/components/schemas/Devices"
            },
            "Orientation" : {
              "$ref" : "#/components/schemas/Orientation"
            },
            "ProductLineItems" : {
              "$ref" : "#/components/schemas/ProductLineItems"
            },
            "CapacityDC" : {
              "$ref" : "#/components/schemas/CapacityDC"
            },
            "FileFolderURL" : {
              "$ref" : "#/components/schemas/FileFolderURL"
            },
            "Description" : {
              "$ref" : "#/components/schemas/Description"
            },
            "PVStringID" : {
              "$ref" : "#/components/schemas/PVStringID"
            },
            "ModuleOrientation" : {
              "$ref" : "#/components/schemas/ModuleOrientation"
            }
          },
          "description" : "A string of Modules within a PVSystem",
          "x-parent" : true
        },
        "Devices" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/components/schemas/Device_1"
          },
          "x-ob-usage-tips" : ""
        },
        "Orientation" : {
          "type" : "object",
          "properties" : {
            "Azimuth" : {
              "$ref" : "#/components/schemas/Azimuth"
            },
            "Tilt" : {
              "$ref" : "#/components/schemas/Tilt"
            },
            "Roll" : {
              "$ref" : "#/components/schemas/Roll"
            }
          },
          "description" : "Orientation is defined by Azimuth, Tilt and Roll. Azimuth and Tilt are defined in the context of a right-hand coordinate system where the the x-axis is East, y-axis is North, and the z-axis is vertical."
        },
        "Azimuth" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementNumber"
          }, {
            "type" : "object",
            "description" : "Azimuth relative to North where North is 0 degrees and East is 90 degrees",
            "x-ob-item-type" : "PlaneAngleItemType",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Unit" : "Degree",
              "Value" : 180
            },
            "x-ob-item-type-group" : ""
          } ]
        },
        "Tilt" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementNumber"
          }, {
            "type" : "object",
            "description" : "Tilt is the angle relative to horizontal. Horizontal is defined as the x,y plane of a right-hand coordinate system where the the x-axis is East, y-axis is North, and the z-axis is vertical.",
            "x-ob-item-type" : "PlaneAngleItemType",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Unit" : "Degree",
              "Value" : 30
            },
            "x-ob-item-type-group" : ""
          } ]
        },
        "Roll" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementNumber"
          }, {
            "type" : "object",
            "description" : "Roll is a right-hand rotation about an oriented axis, with a positive value being a counter-clockwise rotation. In the context of a solar module, Roll is the rotation of the module about the vector normal to the module's plane that is oriented towards the sky.",
            "x-ob-item-type" : "PlaneAngleItemType",
            "x-ob-usage-tips" : "The Roll element of Orientation is used when solar modules are installed on a slant.",
            "x-ob-sample-value" : {
              "Unit" : "Degree",
              "Value" : 20
            },
            "x-ob-item-type-group" : ""
          } ]
        },
        "ProductLineItems" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/components/schemas/ProductLineItem"
          },
          "x-ob-usage-tips" : ""
        },
        "ProductLineItem" : {
          "type" : "object",
          "properties" : {
            "Product" : {
              "$ref" : "#/components/schemas/Product"
            },
            "Description" : {
              "$ref" : "#/components/schemas/Description"
            },
            "FileFolderURL" : {
              "$ref" : "#/components/schemas/FileFolderURL"
            },
            "Quantity" : {
              "$ref" : "#/components/schemas/Quantity"
            },
            "AmountExtended" : {
              "$ref" : "#/components/schemas/AmountExtended"
            }
          },
          "description" : "A product used within a PVSystem and the quantity of that product",
          "x-ob-usage-tips" : ""
        },
        "Product" : {
          "type" : "object",
          "properties" : {
            "ProdName" : {
              "$ref" : "#/components/schemas/ProdName"
            },
            "ProdMfr" : {
              "$ref" : "#/components/schemas/ProdMfr"
            },
            "ProdCode" : {
              "$ref" : "#/components/schemas/ProdCode"
            },
            "ProdType" : {
              "$ref" : "#/components/schemas/ProdType"
            },
            "ProdDatasheet" : {
              "$ref" : "#/components/schemas/ProdDatasheet"
            },
            "ProdInstructions" : {
              "$ref" : "#/components/schemas/ProdInstructions"
            },
            "ProdSpecifications" : {
              "$ref" : "#/components/schemas/ProdSpecifications"
            },
            "ProdCertifications" : {
              "$ref" : "#/components/schemas/ProdCertifications"
            },
            "Description" : {
              "$ref" : "#/components/schemas/Description"
            },
            "FileFolderURL" : {
              "$ref" : "#/components/schemas/FileFolderURL"
            },
            "Dimension" : {
              "$ref" : "#/components/schemas/Dimension"
            },
            "Packages" : {
              "$ref" : "#/components/schemas/Packages"
            },
            "Warranties" : {
              "$ref" : "#/components/schemas/Warranties"
            },
            "AlternativeIdentifiers" : {
              "$ref" : "#/components/schemas/AlternativeIdentifiers"
            },
            "ProdID" : {
              "$ref" : "#/components/schemas/ProdID"
            },
            "SubstituteProducts" : {
              "$ref" : "#/components/schemas/SubstituteProducts"
            },
            "ManufacturerUPC" : {
              "$ref" : "#/components/schemas/ManufacturerUPC"
            }
          },
          "description" : "An item or equipment that is packaged and sold as a unit."
        },
        "ProdName" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "Name of the product, for example ABC Brand Inverter.",
            "x-ob-item-type" : "StringItemType",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "Q.PEAK DUO BLK-G10+/AC 360-365"
            },
            "x-ob-item-type-group" : ""
          } ]
        },
        "ProdMfr" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "Name of the product or equipment manufacturer.",
            "x-ob-item-type" : "StringItemType",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "Hanwha"
            },
            "x-ob-item-type-group" : ""
          } ]
        },
        "ProdType" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "The type of product",
            "x-ob-item-type" : "ProdTypeItemType",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "ProdModule"
            },
            "x-ob-item-type-group" : ""
          } ]
        },
        "ProdDatasheet" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "The datasheet for the product",
            "x-ob-item-type" : "StringItemType",
            "x-ob-usage-tips" : "This is for a URL leading to the Datasheet for a product.",
            "x-ob-sample-value" : {
              "Value" : "http://www.lg-solar.com/downloads/spec-sheet/DS_NeON2_60cells.pdf"
            },
            "x-ob-item-type-group" : ""
          } ]
        },
        "ProdInstructions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/components/schemas/ProdInstruction"
          }
        },
        "ProdInstruction" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "A single document in a collection of the instructions for a product.",
            "x-ob-item-type" : "StringItemType",
            "x-ob-usage-tips" : "This should be used for sending all of the instructions for installing and servicing the product. Each file can be placed in one member of the array of ProdInstructions",
            "x-ob-sample-value" : {
              "Value" : "https://unirac.com/wp-content/uploads/pdf/FLASHKIT-PRO_Brochure_20180831.pdf"
            },
            "x-ob-item-type-group" : ""
          } ]
        },
        "ProdSpecifications" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/components/schemas/ProdSpecification"
          }
        },
        "ProdSpecification" : {
          "type" : "object",
          "properties" : {
            "SpecificationName" : {
              "$ref" : "#/components/schemas/SpecificationName"
            },
            "SpecificationType" : {
              "$ref" : "#/components/schemas/SpecificationType"
            },
            "SpecificationUnit" : {
              "$ref" : "#/components/schemas/SpecificationUnit"
            },
            "SpecificationValue" : {
              "$ref" : "#/components/schemas/SpecificationValue"
            },
            "Description" : {
              "$ref" : "#/components/schemas/Description"
            }
          },
          "description" : "A single specification for a product"
        },
        "SpecificationName" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "Use this for describing an individual specification",
            "x-ob-item-type" : "StringItemType",
            "x-ob-usage-tips" : "Use this for custom units and details of the product",
            "x-ob-sample-value" : {
              "Value" : "Power factor (adjustable)"
            },
            "x-ob-item-type-group" : ""
          } ]
        },
        "SpecificationType" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "The enumerated list of the types of major specifications.",
            "x-ob-item-type" : "SpecificationTypeItemType",
            "x-ob-usage-tips" : "If the specification does not have a type listed here, select \"None\" and then use the SpecificationName as an alternative.",
            "x-ob-sample-value" : { },
            "x-ob-item-type-group" : ""
          } ]
        },
        "SpecificationUnit" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "The specific unit of the specification",
            "x-ob-item-type" : "StringItemType",
            "x-ob-usage-tips" : "This needs to be the specific unit the SpecificationValue is given in",
            "x-ob-sample-value" : {
              "Value" : "mm"
            },
            "x-ob-item-type-group" : ""
          } ]
        },
        "SpecificationValue" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "The value of the specific Specification.",
            "x-ob-item-type" : "StringItemType",
            "x-ob-usage-tips" : "Note the unit always needs to be equal to the SpecificationUnit value",
            "x-ob-sample-value" : {
              "Value" : "9"
            },
            "x-ob-item-type-group" : ""
          } ]
        },
        "ProdCertifications" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/components/schemas/ProdCertification"
          }
        },
        "ProdCertification" : {
          "type" : "object",
          "properties" : {
            "CertificationAgency" : {
              "$ref" : "#/components/schemas/CertificationAgency"
            },
            "FileFolderURL" : {
              "$ref" : "#/components/schemas/FileFolderURL"
            },
            "Description" : {
              "$ref" : "#/components/schemas/Description"
            },
            "CertificationDate" : {
              "$ref" : "#/components/schemas/CertificationDate"
            },
            "CertificationExpirationDate" : {
              "$ref" : "#/components/schemas/CertificationExpirationDate"
            },
            "CertificationName" : {
              "$ref" : "#/components/schemas/CertificationName"
            },
            "CertificateValue" : {
              "$ref" : "#/components/schemas/CertificateValue"
            },
            "CertificationStandard" : {
              "$ref" : "#/components/schemas/CertificationStandard"
            },
            "Firmware" : {
              "$ref" : "#/components/schemas/Firmware"
            },
            "TestLab" : {
              "$ref" : "#/components/schemas/TestLab"
            }
          },
          "description" : "A certification for a product"
        },
        "CertificationAgency" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/Entity"
          }, {
            "type" : "object",
            "properties" : {
              "Description" : {
                "$ref" : "#/components/schemas/Description"
              },
              "CertificationAgencyName" : {
                "$ref" : "#/components/schemas/CertificationAgencyName"
              }
            },
            "description" : "The agency or testing center that grants the certification"
          } ]
        },
        "Entity" : {
          "type" : "object",
          "properties" : {
            "Addresses" : {
              "$ref" : "#/components/schemas/Addresses"
            },
            "Contacts" : {
              "$ref" : "#/components/schemas/Contacts"
            },
            "Email" : {
              "$ref" : "#/components/schemas/Email"
            },
            "WorkPhone" : {
              "$ref" : "#/components/schemas/WorkPhone"
            },
            "LegalEntityIdentifier" : {
              "$ref" : "#/components/schemas/LegalEntityIdentifier"
            },
            "URL" : {
              "$ref" : "#/components/schemas/URL"
            },
            "TaxID" : {
              "$ref" : "#/components/schemas/TaxID"
            },
            "CreditRatings" : {
              "$ref" : "#/components/schemas/CreditRatings"
            },
            "AlternativeIdentifiers" : {
              "$ref" : "#/components/schemas/AlternativeIdentifiers"
            },
            "PaymentMethods" : {
              "$ref" : "#/components/schemas/PaymentMethods"
            },
            "EntityRole" : {
              "$ref" : "#/components/schemas/EntityRole"
            }
          },
          "description" : "Any commercial or legal organization.",
          "x-parent" : true
        },
        "Addresses" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/components/schemas/Address"
          },
          "x-ob-usage-tips" : ""
        },
        "Address" : {
          "type" : "object",
          "properties" : {
            "City" : {
              "$ref" : "#/components/schemas/City"
            },
            "StateProvince" : {
              "$ref" : "#/components/schemas/StateProvince"
            },
            "ZipPostalCode" : {
              "$ref" : "#/components/schemas/ZipPostalCode"
            },
            "Country" : {
              "$ref" : "#/components/schemas/Country"
            },
            "County" : {
              "$ref" : "#/components/schemas/County"
            },
            "AddressType" : {
              "$ref" : "#/components/schemas/AddressType"
            },
            "AddressID" : {
              "$ref" : "#/components/schemas/AddressID"
            },
            "Location" : {
              "$ref" : "#/components/schemas/Location"
            },
            "AddrLine1" : {
              "$ref" : "#/components/schemas/AddrLine1"
            },
            "AddrLine2" : {
              "$ref" : "#/components/schemas/AddrLine2"
            },
            "AddrLine3" : {
              "$ref" : "#/components/schemas/AddrLine3"
            },
            "Description" : {
              "$ref" : "#/components/schemas/Description"
            }
          },
          "description" : "Physical or Mailing address",
          "x-ob-usage-tips" : ""
        },
        "City" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "Name of the city in the physical or mailing address.",
            "x-ob-item-type" : "StringItemType",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "Billings"
            },
            "x-ob-item-type-group" : ""
          } ]
        },
        "StateProvince" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "State of a Province of the mailing or physical address.",
            "x-ob-item-type" : "StringItemType",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "MT"
            },
            "x-ob-item-type-group" : ""
          } ]
        },
        "ZipPostalCode" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "Zip Code / Postal Code of a mailing or physical address.",
            "x-ob-item-type" : "StringItemType",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "59101"
            },
            "x-ob-item-type-group" : ""
          } ]
        },
        "Country" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "ISO country code where system is located.",
            "x-ob-item-type" : "StringItemType",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "USA"
            },
            "x-ob-item-type-group" : ""
          } ]
        },
        "County" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "County of the physical or mailing address",
            "x-ob-item-type" : "StringItemType",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "Yellowstone County"
            },
            "x-ob-item-type-group" : ""
          } ]
        },
        "AddressType" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "The type of address being specified",
            "x-ob-item-type" : "StringItemType",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "Installation"
            },
            "x-ob-item-type-group" : ""
          } ]
        },
        "AddressID" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "The identifier of the address.",
            "x-ob-item-type" : "StringItemType",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "63e32227-7a31-4a0c-a715-20d46315cc9e"
            },
            "x-ob-item-type-group" : ""
          } ]
        },
        "AddrLine1" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "First line of a mailing or physical address.",
            "x-ob-item-type" : "StringItemType",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "135 Wyoming Avenue"
            },
            "x-ob-item-type-group" : ""
          } ]
        },
        "AddrLine2" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "Second line of a mailing or physical address.",
            "x-ob-item-type" : "StringItemType",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "Apt 31"
            },
            "x-ob-item-type-group" : ""
          } ]
        },
        "AddrLine3" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "Third line of a mailing or physical address.",
            "x-ob-item-type" : "StringItemType",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "Building H"
            },
            "x-ob-item-type-group" : ""
          } ]
        },
        "Contacts" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/components/schemas/Contact"
          },
          "x-ob-usage-tips" : ""
        },
        "Contact" : {
          "type" : "object",
          "properties" : {
            "Address" : {
              "$ref" : "#/components/schemas/Address"
            },
            "ContactID" : {
              "$ref" : "#/components/schemas/ContactID"
            },
            "Email" : {
              "$ref" : "#/components/schemas/Email"
            },
            "MobilePhone" : {
              "$ref" : "#/components/schemas/MobilePhone"
            },
            "WorkPhone" : {
              "$ref" : "#/components/schemas/WorkPhone"
            },
            "HomePhone" : {
              "$ref" : "#/components/schemas/HomePhone"
            },
            "FirstName" : {
              "$ref" : "#/components/schemas/FirstName"
            },
            "MiddleName" : {
              "$ref" : "#/components/schemas/MiddleName"
            },
            "LastName" : {
              "$ref" : "#/components/schemas/LastName"
            },
            "ContactType" : {
              "$ref" : "#/components/schemas/ContactType"
            },
            "Description" : {
              "$ref" : "#/components/schemas/Description"
            },
            "PreferredContactMethod" : {
              "$ref" : "#/components/schemas/PreferredContactMethod"
            },
            "ContactTimezone" : {
              "$ref" : "#/components/schemas/ContactTimezone"
            },
            "Title" : {
              "$ref" : "#/components/schemas/Title"
            },
            "URL" : {
              "$ref" : "#/components/schemas/URL"
            }
          },
          "description" : "A person or contact information",
          "x-ob-usage-tips" : ""
        },
        "ContactID" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "The identifier of the contact.",
            "x-ob-item-type" : "StringItemType",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "63e32227-7a31-4a0c-a715-20d46315cc9e"
            },
            "x-ob-item-type-group" : ""
          } ]
        },
        "Email" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "Email address",
            "x-ob-item-type" : "StringItemType",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "Test@sunspec.com"
            },
            "x-ob-item-type-group" : ""
          } ]
        },
        "MobilePhone" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "Phone Number of a cell phone or mobile device.  This phone is expected to be able to receive text messages.  Characters like hyphen, period, x for extension are allowed.",
            "x-ob-item-type" : "StringItemType",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "(987) 654-3210"
            },
            "x-ob-item-type-group" : ""
          } ]
        },
        "WorkPhone" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "Phone number to be used during working hours.  Characters like hyphen, period, x for extension are allowed.",
            "x-ob-item-type" : "StringItemType",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "(987) 654-3210"
            },
            "x-ob-item-type-group" : ""
          } ]
        },
        "HomePhone" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "Phone number to be used for high priority calls only.  Characters like hyphen, period, x for extension are allowed.",
            "x-ob-item-type" : "StringItemType",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "(987) 654-3210"
            },
            "x-ob-item-type-group" : ""
          } ]
        },
        "FirstName" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "First name of a person.",
            "x-ob-item-type" : "StringItemType",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "Bob"
            },
            "x-ob-item-type-group" : ""
          } ]
        },
        "MiddleName" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "Middle name of a person.",
            "x-ob-item-type" : "StringItemType",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "Alex"
            },
            "x-ob-item-type-group" : ""
          } ]
        },
        "LastName" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "The last name of person.",
            "x-ob-item-type" : "StringItemType",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "Smith"
            },
            "x-ob-item-type-group" : ""
          } ]
        },
        "ContactType" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "The type of contact being specified",
            "x-ob-item-type" : "ContactTypeItemType",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "Homeowner"
            },
            "x-ob-item-type-group" : ""
          } ]
        },
        "PreferredContactMethod" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "The method of contact the contact prefers",
            "x-ob-item-type" : "PreferredContactMethodItemType",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "Email"
            },
            "x-ob-item-type-group" : ""
          } ]
        },
        "ContactTimezone" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "The timezone where the contact is located.",
            "x-ob-item-type" : "StringItemType",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "PST"
            },
            "x-ob-item-type-group" : ""
          } ]
        },
        "Title" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "The title of the contact",
            "x-ob-item-type" : "StringItemType",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "Department Manager"
            },
            "x-ob-item-type-group" : ""
          } ]
        },
        "LegalEntityIdentifier" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "Legal Entity Identifier (LEI) of the entity.",
            "x-ob-item-type" : "LegalEntityIdentifierItemType",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "254900HROIFWPRGM1V77"
            },
            "x-ob-item-type-group" : ""
          } ]
        },
        "TaxID" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "Tax identification number of the entity.",
            "x-ob-item-type" : "StringItemType",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "13-7654321"
            },
            "x-ob-item-type-group" : ""
          } ]
        },
        "CreditRatings" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/components/schemas/CreditRating"
          }
        },
        "CreditRating" : {
          "type" : "object",
          "properties" : {
            "CreditScore" : {
              "$ref" : "#/components/schemas/CreditScore"
            },
            "CreditScoreSource" : {
              "$ref" : "#/components/schemas/CreditScoreSource"
            }
          },
          "description" : "Credit rating."
        },
        "CreditScore" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "Credit symbol that indicates the degree of credit worthiness. ",
            "x-ob-item-type" : "StringItemType",
            "x-ob-item-type-group" : "",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "AAA"
            }
          } ]
        },
        "CreditScoreSource" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "Issuing source of a credit score, such as a Rating Agency. ",
            "x-ob-item-type" : "StringItemType",
            "x-ob-item-type-group" : "",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "Standard & Poor's"
            }
          } ]
        },
        "AlternativeIdentifiers" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/components/schemas/AlternativeIdentifier"
          }
        },
        "AlternativeIdentifier" : {
          "type" : "object",
          "properties" : {
            "SourceName" : {
              "$ref" : "#/components/schemas/SourceName"
            },
            "Identifier" : {
              "$ref" : "#/components/schemas/Identifier"
            },
            "Description" : {
              "$ref" : "#/components/schemas/Description"
            },
            "IdentifierType" : {
              "$ref" : "#/components/schemas/IdentifierType"
            }
          },
          "description" : "Additional identifier for a record or data set"
        },
        "SourceName" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "Name of the data source.",
            "x-ob-item-type" : "StringItemType",
            "x-ob-item-type-group" : "",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "Data Source"
            }
          } ]
        },
        "Identifier" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "A unique identifier for a record or dataset.",
            "x-ob-item-type" : "StringItemType",
            "x-ob-item-type-group" : "",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "be3827bd-0b57-4990-a757-7ee13348356f"
            }
          } ]
        },
        "IdentifierType" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "The type of unique identifier used to represent a unique datapoint as the AlternativeIdentifier. ",
            "x-ob-item-type" : "IdentifierTypeItemType",
            "x-ob-item-type-group" : "",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "UUID"
            }
          } ]
        },
        "PaymentMethods" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/components/schemas/PaymentMethod"
          }
        },
        "PaymentMethod" : {
          "type" : "object",
          "properties" : {
            "PaymentToken" : {
              "$ref" : "#/components/schemas/PaymentToken"
            },
            "AlternativeIdentifiers" : {
              "$ref" : "#/components/schemas/AlternativeIdentifiers"
            },
            "Tags" : {
              "$ref" : "#/components/schemas/Tags"
            },
            "Comments" : {
              "$ref" : "#/components/schemas/Comments"
            },
            "PaymentMethodName" : {
              "$ref" : "#/components/schemas/PaymentMethodName"
            }
          },
          "description" : "The named method of payment(s) at the payment processor that can be used to fund the transaction(s). Used for expenses related to a task, non-payroll related payments and other payments that may not be included in existing contractual payments."
        },
        "PaymentToken" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "The token assigned by the payment processor to represent a previously stored payment method. This value should not contain any information that is subject to Payment Card Industry (PCI) compliance.",
            "x-ob-item-type" : "StringItemType",
            "x-ob-item-type-group" : "",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "tok_1Ne36S2eZvKYlo2CsVv8aURt"
            }
          } ]
        },
        "Tags" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/components/schemas/Tag"
          }
        },
        "Tag" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "A tag, keyword or label.",
            "x-ob-item-type" : "StringItemType",
            "x-ob-item-type-group" : "",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : { }
          } ]
        },
        "Comments" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/components/schemas/Comment"
          }
        },
        "Comment" : {
          "type" : "object",
          "properties" : {
            "CommentID" : {
              "$ref" : "#/components/schemas/CommentID"
            },
            "CommentDate" : {
              "$ref" : "#/components/schemas/CommentDate"
            },
            "CommentText" : {
              "$ref" : "#/components/schemas/CommentText"
            },
            "Contacts" : {
              "$ref" : "#/components/schemas/Contacts"
            },
            "Tags" : {
              "$ref" : "#/components/schemas/Tags"
            },
            "Scope" : {
              "$ref" : "#/components/schemas/Scope"
            }
          },
          "description" : "Date, source and content of a comment"
        },
        "CommentID" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "The UUID of a comment",
            "x-ob-item-type" : "UUIDItemType",
            "x-ob-item-type-group" : "",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "82b2f9ea-0a88-464f-80ef-6712662eef68"
            }
          } ]
        },
        "CommentDate" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "Date of a comment",
            "x-ob-item-type" : "DateTimeItemType",
            "x-ob-item-type-group" : "",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "2022-12-28T19:49:26Z"
            }
          } ]
        },
        "CommentText" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "Content text of a comment",
            "x-ob-item-type" : "StringItemType",
            "x-ob-item-type-group" : "",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "10 gauge wire is required for this project."
            }
          } ]
        },
        "Scope" : {
          "type" : "object",
          "properties" : {
            "ScopeID" : {
              "$ref" : "#/components/schemas/ScopeID"
            },
            "ScopeType" : {
              "$ref" : "#/components/schemas/ScopeType"
            },
            "FileFolderURL" : {
              "$ref" : "#/components/schemas/FileFolderURL"
            },
            "Location" : {
              "$ref" : "#/components/schemas/Location"
            },
            "Description" : {
              "$ref" : "#/components/schemas/Description"
            }
          },
          "description" : "A generic object containing information describing where the aforementioned data applies to. ",
          "x-ob-usage-tips" : "Scope is an element designed to allow Orange Button users to add context to the object it is included in. For example, if a user is trying to share BillOfMaterials information for a given Job, they would be able to share only the BillOfMaterials object and provide context by setting the JobID in the ScopeID field and setting the ScopeType to Job. By following this approach, users can narrow payloads to the specific target data while contributing the necessary context that allows the Orange Button Taxonomy to be so powerful. "
        },
        "ScopeID" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "An identifier for the device, system, portfolio, region, etc.",
            "x-ob-item-type" : "StringItemType",
            "x-ob-item-type-group" : "",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "82b2f9ea-0a88-464f-80ef-6712662eef68"
            }
          } ]
        },
        "ScopeType" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "The scope where data applies.",
            "x-ob-item-type" : "ScopeTypeItemType",
            "x-ob-item-type-group" : "",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "Site"
            }
          } ]
        },
        "PaymentMethodName" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "The name of the account that is meaningful to the person making the payment. This does not need to be unique or meaningful to anyone else. This value is not subject to Payment Card Industry (PCI) compliance.",
            "x-ob-item-type" : "StringItemType",
            "x-ob-item-type-group" : "",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "MyBusinessCard"
            }
          } ]
        },
        "EntityRole" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "Services or function provided by this entity.",
            "x-ob-item-type" : "EntityRoleItemType",
            "x-ob-item-type-group" : "",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "AuthorityHavingJurisdiction"
            }
          } ]
        },
        "CertificationAgencyName" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "The name of the certification name",
            "x-ob-item-type" : "StringItemType",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "ISO"
            },
            "x-ob-item-type-group" : ""
          } ]
        },
        "CertificationDate" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "The date that certification was awarded to product.",
            "x-ob-item-type" : "DateItemType",
            "x-ob-item-type-group" : "",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "2022-3-18"
            }
          } ]
        },
        "CertificationExpirationDate" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "The expiration date of a certification.",
            "x-ob-item-type" : "DateItemType",
            "x-ob-item-type-group" : "",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "2022-4-21"
            }
          } ]
        },
        "CertificationName" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "The name of the certification.",
            "x-ob-item-type" : "StringItemType",
            "x-ob-item-type-group" : "",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "SunSpec Modbus for IEEE 1547"
            }
          } ]
        },
        "CertificateValue" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "The document identifier of a certification.",
            "x-ob-item-type" : "StringItemType",
            "x-ob-item-type-group" : "",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "ABC-123"
            }
          } ]
        },
        "CertificationStandard" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "A value from the enumerated list of the possible standards that a product can have.",
            "x-ob-item-type" : "StandardTypeItemType",
            "x-ob-item-type-group" : "",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "IEC61215_2016"
            }
          } ]
        },
        "TestLab" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/Entity"
          }, {
            "type" : "object",
            "properties" : {
              "TestLabName" : {
                "$ref" : "#/components/schemas/TestLabName"
              }
            },
            "description" : "A laboratory that performs testing to standards. Implementation partner rather than the certifier of the standard. "
          } ]
        },
        "TestLabName" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "Name of the TestLab",
            "x-ob-item-type" : "StringItemType",
            "x-ob-item-type-group" : "",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "UL"
            }
          } ]
        },
        "Dimension" : {
          "type" : "object",
          "properties" : {
            "Length" : {
              "$ref" : "#/components/schemas/Length"
            },
            "Width" : {
              "$ref" : "#/components/schemas/Width"
            },
            "Height" : {
              "$ref" : "#/components/schemas/Height"
            },
            "Mass" : {
              "$ref" : "#/components/schemas/Mass"
            },
            "Weight" : {
              "$ref" : "#/components/schemas/Weight"
            }
          },
          "description" : "Dimensions of an object"
        },
        "Length" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementNumber"
          }, {
            "type" : "object",
            "description" : "The length of the parent object",
            "x-ob-item-type" : "LengthItemType",
            "x-ob-usage-tips" : "For irregularly shaped objects use this as a bounding box dimension.",
            "x-ob-sample-value" : {
              "Unit" : "mm",
              "Value" : 1048
            },
            "x-ob-item-type-group" : ""
          } ]
        },
        "Width" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementNumber"
          }, {
            "type" : "object",
            "description" : "The width of the parent object",
            "x-ob-item-type" : "LengthItemType",
            "x-ob-usage-tips" : "For irregularly shaped objects use this as a bounding box dimension.",
            "x-ob-sample-value" : {
              "Unit" : "mm",
              "Value" : 1765
            },
            "x-ob-item-type-group" : ""
          } ]
        },
        "Height" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementNumber"
          }, {
            "type" : "object",
            "description" : "The height of the parent object",
            "x-ob-item-type" : "LengthItemType",
            "x-ob-usage-tips" : "For irregularly shaped objects use this as a bounding box dimension",
            "x-ob-sample-value" : {
              "Unit" : "mm",
              "Value" : 35
            },
            "x-ob-item-type-group" : ""
          } ]
        },
        "Mass" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementNumber"
          }, {
            "type" : "object",
            "description" : "The mass of the parent object. ",
            "x-ob-item-type" : "MassItemType",
            "x-ob-usage-tips" : "Apply appropriate engineering consistency with related object Weight.",
            "x-ob-sample-value" : {
              "Unit" : "kg",
              "Value" : 20
            },
            "x-ob-item-type-group" : "MassUnitItemType"
          } ]
        },
        "Weight" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementNumber"
          }, {
            "type" : "object",
            "description" : "The weight of the parent object",
            "x-ob-item-type" : "MassItemType",
            "x-ob-usage-tips" : "Use appropriate engineering consistency with related object Mass",
            "x-ob-sample-value" : {
              "Unit" : "lb",
              "Value" : 9.81
            },
            "x-ob-item-type-group" : ""
          } ]
        },
        "Packages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/components/schemas/Package"
          }
        },
        "Package" : {
          "type" : "object",
          "properties" : {
            "Dimension" : {
              "$ref" : "#/components/schemas/Dimension"
            },
            "Description" : {
              "$ref" : "#/components/schemas/Description"
            },
            "Quantity" : {
              "$ref" : "#/components/schemas/Quantity"
            }
          },
          "description" : "Elements describing a package"
        },
        "Quantity" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementInteger"
          }, {
            "type" : "object",
            "description" : "A quantity",
            "x-ob-item-type" : "IntegerItemType",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : 10
            },
            "x-ob-item-type-group" : ""
          } ]
        },
        "SubstituteProducts" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/components/schemas/SubstituteProduct"
          }
        },
        "SubstituteProduct" : {
          "type" : "object",
          "properties" : {
            "ProdCode" : {
              "$ref" : "#/components/schemas/ProdCode"
            },
            "ProdID" : {
              "$ref" : "#/components/schemas/ProdID"
            },
            "ProdMfr" : {
              "$ref" : "#/components/schemas/ProdMfr"
            },
            "ProdName" : {
              "$ref" : "#/components/schemas/ProdName"
            },
            "ProdType" : {
              "$ref" : "#/components/schemas/ProdType"
            }
          },
          "description" : "A product that can serve as a replacement for a given Product."
        },
        "ManufacturerUPC" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "Universal Product Code (UPC) (technically refers to UPC-A) consists of 12 digits that are uniquely assigned to each trade item. This value is assigned by the manufacturer of the trade item/product. ",
            "x-ob-item-type" : "StringItemType",
            "x-ob-item-type-group" : "",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "036000291452"
            }
          } ]
        },
        "AmountExtended" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementNumber"
          }, {
            "type" : "object",
            "description" : "The total amount of the individual line item calculated by multiplying Quantity by UnitPrice",
            "x-ob-item-type" : "MonetaryItemType",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Unit" : "USD",
              "Value" : 1000
            },
            "x-ob-item-type-group" : ""
          } ]
        },
        "CapacityDC" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementNumber"
          }, {
            "type" : "object",
            "description" : "Capacity in DC at Standard Test Conditions",
            "x-ob-item-type" : "PowerItemType",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Unit" : "kW",
              "Value" : 11.5
            },
            "x-ob-item-type-group" : "OBElectricalPower"
          } ]
        },
        "PVStringID" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "A UUID for identifying a specific string",
            "x-ob-item-type" : "UUIDItemType",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "7a00622c-6bb0-4a3f-c6da-73090958db3a"
            },
            "x-ob-item-type-group" : ""
          } ]
        },
        "ModuleOrientation" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "The orientation of a module, can be Landscape or Portrait",
            "x-ob-item-type" : "ModuleOrientationItemType",
            "x-ob-item-type-group" : "",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : { }
          } ]
        },
        "Area" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementNumber"
          }, {
            "type" : "object",
            "description" : "Area",
            "x-ob-item-type" : "AreaItemType",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Unit" : "sqft",
              "Value" : 10
            },
            "x-ob-item-type-group" : ""
          } ]
        },
        "RoofPlaneID" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "The UUID of the roofplane",
            "x-ob-item-type" : "UUIDItemType",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "7a00622c-6bb0-4a3f-c6da-73090958db3a"
            },
            "x-ob-item-type-group" : ""
          } ]
        },
        "PVArrayID" : {
          "allOf" : [ {
            "$ref" : "#/components/schemas/TaxonomyElementString"
          }, {
            "type" : "object",
            "description" : "A UUID for identifying a specific array",
            "x-ob-item-type" : "UUIDItemType",
            "x-ob-item-type-group" : "",
            "x-ob-usage-tips" : "",
            "x-ob-sample-value" : {
              "Value" : "7a00622c-6bb0-4a3f-c6da-73090958db3a"
            }
          } ]
        }
      }
    },
    "x-ob-item-types" : { },
    "x-ob-item-type-group" : { }
  },
  "sourceFolder" : ".",
  "packageGuid" : "{2C1F1BCC-6551-4407-8AF1-FE149D7AF966}",
  "gitHost" : "github.com",
  "generateApis" : false,
  "packageTitle" : "OpenAPI Library",
  "basePathWithoutHost" : "",
  "supportsAsync" : true,
  "servers" : [ {
    "url" : "",
    "variables" : [ ],
    "vendorExtensions" : { }
  } ],
  "dateTimeFormat" : "yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fffffffK",
  "packageName" : "Supernova",
  "net48" : false,
  "net47" : false,
  "supportsDateOnly" : true,
  "unescapedAppDescription" : "Derived by extending the OB OpenAPI Taxonomy 1.1.7",
  "appName" : "SUPERNOVA Interoperation API 1.0 Data Model",
  "net70OrLater" : true,
  "netstandard15OrLater" : true,
  "packageVersion" : "1.0.0",
  "generatorVersion" : "7.9.0",
  "disallowAdditionalPropertiesIfNotPresent" : false,
  "apiPackage" : "Api",
  "hasServers" : true,
  "nullableReferenceTypes" : true,
  "basePath" : "http://localhost",
  "supportsRetry" : true,
  "excludeTests" : false,
  "packageAuthors" : "OpenAPI",
  "generatedDate" : "2025-01-16T15:03:36.052724500+01:00[Europe/Rome]",
  "aliasModels" : [ ],
  "appDescriptionWithNewLines" : "Derived by extending the OB OpenAPI Taxonomy 1.1.7",
  "testTargetFramework" : "net8.0"
}
[main] INFO  o.o.codegen.DefaultGenerator - Skipping generation of supporting files.
################################################################################
# Thanks for using OpenAPI Generator.                                          #
# Please consider donation to help us maintain this project ?                 #
# https://opencollective.com/openapi_generator/donate                          #
#                                                                              #
# This generator's contributed by Jim Schubert (https://github.com/jimschubert)#
# Please support his work directly via https://patreon.com/jimschubert ?      #
################################################################################
