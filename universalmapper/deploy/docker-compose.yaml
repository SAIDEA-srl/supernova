services:
  mongo:
    container_name: "${COMPOSE_PROJECT_NAME}-mongo"
    image: "docker.io/library/mongo:8.0"
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${MONGO_INITDB_ROOT_USERNAME}"
      MONGO_INITDB_ROOT_PASSWORD: "${MONGO_INITDB_ROOT_PASSWORD}"
      OTEL_EXPORTER_OTLP_ENDPOINT: "${OTLP_ENDPOINT}"
      OTEL_SERVICE_NAME: "${COMPOSE_PROJECT_NAME}-mongo"
    volumes:
    - "universalmapper-db-volume:/data/db"
    ports:
    - 27017
    restart: unless-stopped
    networks:
    - mongo-network
  mongo-express:
    container_name: "${COMPOSE_PROJECT_NAME}-mongo-express"
    image: "docker.io/library/mongo-express:1.0"
    environment:
      ME_CONFIG_MONGODB_SERVER: "${COMPOSE_PROJECT_NAME}-mongo"
      ME_CONFIG_MONGODB_PORT: "27017"
      ME_CONFIG_BASICAUTH: "false"
      ME_CONFIG_MONGODB_ADMINUSERNAME: "${MONGO_INITDB_ROOT_USERNAME}"
      ME_CONFIG_MONGODB_ADMINPASSWORD: "${MONGO_INITDB_ROOT_PASSWORD}"
      ME_CONFIG_MONGODB_URL: "mongodb://${COMPOSE_PROJECT_NAME}-mongo:27017"
      OTEL_EXPORTER_OTLP_ENDPOINT: "${OTLP_ENDPOINT}"
      OTEL_SERVICE_NAME: "${COMPOSE_PROJECT_NAME}-mongo-express"
    ports:
    - 8081
    restart: unless-stopped
    networks:
    - mongo-network
  universalmapper:
    container_name: "${COMPOSE_PROJECT_NAME}-universalmapper"
    image: "127.0.0.1:5000/universalmapper:latest"
    environment:
      OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EXCEPTION_LOG_ATTRIBUTES: "true"
      OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EVENT_LOG_ATTRIBUTES: "true"
      OTEL_DOTNET_EXPERIMENTAL_OTLP_RETRY: "in_memory"
      ASPNETCORE_FORWARDEDHEADERS_ENABLED: "true"
      HTTP_PORTS: "8080"
      IdentityAuthority: "${OPENID_AUTORITY}"
      ConnectionStrings__universalmapper-db: "mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@${COMPOSE_PROJECT_NAME}-mongo:27017/universalmapper-db?authSource=admin&authMechanism=SCRAM-SHA-256"
      OTEL_EXPORTER_OTLP_ENDPOINT: "${OTLP_ENDPOINT}"
      OTEL_SERVICE_NAME: "${COMPOSE_PROJECT_NAME}-universalmapper"
    ports:
    - 8080
    restart: unless-stopped
    networks:
    - supernova
    - mongo-network
volumes:
  universalmapper-db-volume:
    name:  "${COMPOSE_PROJECT_NAME}-universalmapper-db-volume"
networks:
   supernova:
    name:  "${COMPOSE_PROJECT_NAME}-network"
    external: false
   mongo-network:
    name:  "${COMPOSE_PROJECT_NAME}-mongo-network"
    external: false


