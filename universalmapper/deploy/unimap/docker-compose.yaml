services:
  mongo:
    image: "docker.io/library/mongo:8.0"
    environment:
      MONGO_INITDB_ROOT_USERNAME: "admin"
      MONGO_INITDB_ROOT_PASSWORD: "${MONGO_PASSWORD}"
    ports:
      - "8000:27017"
    volumes:
      - type: "volume"
        target: "/data/db"
        source: "universalmapper-db-volume"
        read_only: false
    networks:
      - "mongo-network"
  mongo-express:
    image: "docker.io/library/mongo-express:1.0"
    environment:
      ME_CONFIG_MONGODB_SERVER: "mongo"
      ME_CONFIG_MONGODB_PORT: "27017"
      ME_CONFIG_BASICAUTH: "false"
      ME_CONFIG_MONGODB_ADMINUSERNAME: "admin"
      ME_CONFIG_MONGODB_ADMINPASSWORD: "${MONGO_PASSWORD}"
    ports:
      - "8001:8081"
    networks:
      - "mongo-network"
  universalmapper:
    image: "${UNIVERSALMAPPER_IMAGE}"
    environment:
      OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EXCEPTION_LOG_ATTRIBUTES: "true"
      OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EVENT_LOG_ATTRIBUTES: "true"
      OTEL_DOTNET_EXPERIMENTAL_OTLP_RETRY: "in_memory"
      ASPNETCORE_FORWARDEDHEADERS_ENABLED: "true"
      HTTP_PORTS: "8002"
      IdentityAuthority: "${IDENTITYAUTHORITY}"
      ConnectionStrings__universalmapper-db: "mongodb://admin:${MONGO_PASSWORD}@mongo:27017/universalmapper-db?authSource=admin&authMechanism=SCRAM-SHA-256"
    ports:
      - "8003:8002"
      - "8005:8004"
    depends_on:
      mongo:
        condition: "service_started"
    networks:
      - "mongo-network"
networks:
  mongo-network:
    external: false
  supernova:
    driver: "bridge"
    external: true
volumes:
  universalmapper-db-volume:
    driver: "local"
