{
  "openapi": "3.0.1",
  "info": {
    "title": "SUPERNOVA Interoperation API 1.0 asset-related synchronous operations",
    "version": "1.0"
  },
  "paths": {
    "/Devices": {
      "get": {
        "tags": [
          "Device"
        ],
        "operationId": "Device_GetList",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify a sequence of transformations to the entity set, such as groupby, filter, aggregate, etc..",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/Device"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/Device"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/Device"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/Device"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/Device"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Devices/{id}": {
      "get": {
        "tags": [
          "Device"
        ],
        "operationId": "Device_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./datamodel.json#/components/schemas/Device"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "./datamodel.json#/components/schemas/Device"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "./datamodel.json#/components/schemas/Device"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "./datamodel.json#/components/schemas/Device"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "./datamodel.json#/components/schemas/Device"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Devices/{id}/Components": {
      "get": {
        "tags": [
          "Device"
        ],
        "operationId": "Device_GetComponentsList",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify a sequence of transformations to the entity set, such as groupby, filter, aggregate, etc..",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/Component"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/Component"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/Component"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/Component"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/Component"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Devices/{id}/Connections": {
      "get": {
        "tags": [
          "Device"
        ],
        "operationId": "Device_GetConnectionsList",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify a sequence of transformations to the entity set, such as groupby, filter, aggregate, etc..",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/Connection"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/Connection"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/Connection"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/Connection"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/Connection"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Devices/{id}/Documents": {
      "get": {
        "tags": [
          "Device"
        ],
        "operationId": "Device_GetDocuments",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify a sequence of transformations to the entity set, such as groupby, filter, aggregate, etc..",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/Document"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/Document"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/Document"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/Document"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/Document"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Devices/{id}/OMTasks": {
      "get": {
        "tags": [
          "Device"
        ],
        "operationId": "Device_GetOMTasksList",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify a sequence of transformations to the entity set, such as groupby, filter, aggregate, etc..",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/OMTask"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/OMTask"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/OMTask"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/OMTask"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/OMTask"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/hooks": {
      "get": {
        "tags": [
          "Gateway"
        ],
        "operationId": "Gateway_GetHooks",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify a sequence of transformations to the entity set, such as groupby, filter, aggregate, etc..",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/GatewayHook"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/GatewayHook"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/GatewayHook"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/GatewayHook"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/GatewayHook"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/hooks/{hookid}/executions": {
      "get": {
        "tags": [
          "Gateway"
        ],
        "operationId": "Gateway_GetHookExecutions",
        "parameters": [
          {
            "name": "hookid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify a sequence of transformations to the entity set, such as groupby, filter, aggregate, etc..",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/GatewayHookExecution"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/GatewayHookExecution"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/GatewayHookExecution"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/GatewayHookExecution"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/GatewayHookExecution"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/hooks/{hookid}/executions/{excid}/result": {
      "get": {
        "tags": [
          "Gateway"
        ],
        "operationId": "Gateway_GetExecutionResult",
        "parameters": [
          {
            "name": "hookid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "excid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./datamodel.json#/components/schemas/GatewayHookResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "./datamodel.json#/components/schemas/GatewayHookResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "./datamodel.json#/components/schemas/GatewayHookResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "./datamodel.json#/components/schemas/GatewayHookResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "./datamodel.json#/components/schemas/GatewayHookResult"
                }
              }
            }
          }
        }
      }
    },
    "/hooks/{hookid}/executions/run": {
      "post": {
        "tags": [
          "Gateway"
        ],
        "operationId": "Gateway_RunHook",
        "parameters": [
          {
            "name": "hookid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": { }
              }
            },
            "application/xml": {
              "schema": {
                "type": "object",
                "additionalProperties": { }
              }
            },
            "text/plain": {
              "schema": {
                "type": "object",
                "additionalProperties": { }
              }
            },
            "application/json-patch+json": {
              "schema": {
                "type": "object",
                "additionalProperties": { }
              }
            },
            "text/json": {
              "schema": {
                "type": "object",
                "additionalProperties": { }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "object",
                "additionalProperties": { }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./datamodel.json#/components/schemas/GatewayHookExecution"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "./datamodel.json#/components/schemas/GatewayHookExecution"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "./datamodel.json#/components/schemas/GatewayHookExecution"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "./datamodel.json#/components/schemas/GatewayHookExecution"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "./datamodel.json#/components/schemas/GatewayHookExecution"
                }
              }
            }
          }
        }
      }
    },
    "/OMTasks": {
      "get": {
        "tags": [
          "OMTask"
        ],
        "operationId": "OMTask_GetList",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify a sequence of transformations to the entity set, such as groupby, filter, aggregate, etc..",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/OMTask"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/OMTask"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/OMTask"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/OMTask"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/OMTask"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/OMTasks/{id}": {
      "get": {
        "tags": [
          "OMTask"
        ],
        "operationId": "OMTask_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./datamodel.json#/components/schemas/OMTask"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "./datamodel.json#/components/schemas/OMTask"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "./datamodel.json#/components/schemas/OMTask"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "./datamodel.json#/components/schemas/OMTask"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "./datamodel.json#/components/schemas/OMTask"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/PVArrays": {
      "get": {
        "tags": [
          "PVArray"
        ],
        "operationId": "PVArray_GetList",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify a sequence of transformations to the entity set, such as groupby, filter, aggregate, etc..",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/PVArray"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/PVArray"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/PVArray"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/PVArray"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/PVArray"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/PVArrays/{id}": {
      "get": {
        "tags": [
          "PVArray"
        ],
        "operationId": "PVArray_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./datamodel.json#/components/schemas/PVArray"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "./datamodel.json#/components/schemas/PVArray"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "./datamodel.json#/components/schemas/PVArray"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "./datamodel.json#/components/schemas/PVArray"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "./datamodel.json#/components/schemas/PVArray"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/PVArrays/{id}/Devices": {
      "get": {
        "tags": [
          "PVArray"
        ],
        "operationId": "PVArray_GetDevicesList",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify a sequence of transformations to the entity set, such as groupby, filter, aggregate, etc..",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/Device"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/Device"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/Device"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/Device"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/Device"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/PVArrays/{id}/PVStrings": {
      "get": {
        "tags": [
          "PVArray"
        ],
        "operationId": "PVArray_GetPVStringsList",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify a sequence of transformations to the entity set, such as groupby, filter, aggregate, etc..",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/PVString"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/PVString"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/PVString"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/PVString"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/PVString"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/PVStrings": {
      "get": {
        "tags": [
          "PVString"
        ],
        "operationId": "PVString_GetList",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify a sequence of transformations to the entity set, such as groupby, filter, aggregate, etc..",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/PVString"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/PVString"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/PVString"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/PVString"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/PVString"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/PVStrings/{id}": {
      "get": {
        "tags": [
          "PVString"
        ],
        "operationId": "PVString_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./datamodel.json#/components/schemas/PVString"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "./datamodel.json#/components/schemas/PVString"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "./datamodel.json#/components/schemas/PVString"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "./datamodel.json#/components/schemas/PVString"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "./datamodel.json#/components/schemas/PVString"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/PVStrings/{id}/Devices": {
      "get": {
        "tags": [
          "PVString"
        ],
        "operationId": "PVString_GetDevicesList",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify a sequence of transformations to the entity set, such as groupby, filter, aggregate, etc..",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/Device"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/Device"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/Device"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/Device"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/Device"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/PVSystems": {
      "get": {
        "tags": [
          "PVSystem"
        ],
        "operationId": "PVSystem_GetList",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify a sequence of transformations to the entity set, such as groupby, filter, aggregate, etc..",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/PVSystem"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/PVSystem"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/PVSystem"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/PVSystem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/PVSystem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/PVSystems/{id}": {
      "get": {
        "tags": [
          "PVSystem"
        ],
        "operationId": "PVSystem_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./datamodel.json#/components/schemas/PVSystem"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "./datamodel.json#/components/schemas/PVSystem"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "./datamodel.json#/components/schemas/PVSystem"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "./datamodel.json#/components/schemas/PVSystem"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "./datamodel.json#/components/schemas/PVSystem"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/PVSystems/{id}/Devices": {
      "get": {
        "tags": [
          "PVSystem"
        ],
        "operationId": "PVSystem_GetDevicesList",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify a sequence of transformations to the entity set, such as groupby, filter, aggregate, etc..",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/Device"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/Device"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/Device"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/Device"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/Device"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/PVSystems/{id}/PVArrays": {
      "get": {
        "tags": [
          "PVSystem"
        ],
        "operationId": "PVSystem_GetPVArraysList",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify a sequence of transformations to the entity set, such as groupby, filter, aggregate, etc..",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/PVArray"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/PVArray"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/PVArray"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/PVArray"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./datamodel.json#/components/schemas/PVArray"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "bearer": [ ]
    }
  ]
}
